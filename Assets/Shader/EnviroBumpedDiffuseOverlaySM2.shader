Shader "Enviro/BumpedDiffuseOverlaySM2" {
	Properties {
		_Color ("Main Color", Vector) = (1,1,1,1)
		_Opacity ("Color over opacity", Range(0, 1)) = 1
		_MainTex ("Color over (RGBA)", 2D) = "white" {}
		_BumpMap ("Normalmap over", 2D) = "bump" {}
		_MainTex2 ("Color under (RGBA)", 2D) = "white" {}
		_BumpMap2 ("Normalmap under", 2D) = "bump" {}
	}
	SubShader {
		LOD 400
		Tags { "RenderType" = "Opaque" }
		Pass {
			Name "FORWARD"
			LOD 400
			Tags { "LIGHTMODE" = "FORWARDBASE" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			GpuProgramID 2147
			Program "vp" {
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  tmpvar_14.w = tmpvar_7.x;
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  tmpvar_15.w = tmpvar_7.y;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  tmpvar_16.w = tmpvar_7.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_9 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_10;
					  c_42.w = c_43.w;
					  c_42.xyz = c_43.xyz;
					  c_4.xyz = c_42.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  tmpvar_14.w = tmpvar_7.x;
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  tmpvar_15.w = tmpvar_7.y;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  tmpvar_16.w = tmpvar_7.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_9 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_10;
					  c_42.w = c_43.w;
					  c_42.xyz = c_43.xyz;
					  c_4.xyz = c_42.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  tmpvar_14.w = tmpvar_7.x;
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  tmpvar_15.w = tmpvar_7.y;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  tmpvar_16.w = tmpvar_7.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_9 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_10;
					  c_42.w = c_43.w;
					  c_42.xyz = c_43.xyz;
					  c_4.xyz = c_42.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  tmpvar_14.w = tmpvar_7.x;
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  tmpvar_15.w = tmpvar_7.y;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  tmpvar_16.w = tmpvar_7.z;
					  mediump vec3 normal_17;
					  normal_17 = worldNormal_3;
					  mediump vec4 tmpvar_18;
					  tmpvar_18.w = 1.0;
					  tmpvar_18.xyz = normal_17;
					  mediump vec3 res_19;
					  mediump vec3 x_20;
					  x_20.x = dot (unity_SHAr, tmpvar_18);
					  x_20.y = dot (unity_SHAg, tmpvar_18);
					  x_20.z = dot (unity_SHAb, tmpvar_18);
					  mediump vec3 x1_21;
					  mediump vec4 tmpvar_22;
					  tmpvar_22 = (normal_17.xyzz * normal_17.yzzx);
					  x1_21.x = dot (unity_SHBr, tmpvar_22);
					  x1_21.y = dot (unity_SHBg, tmpvar_22);
					  x1_21.z = dot (unity_SHBb, tmpvar_22);
					  res_19 = (x_20 + (x1_21 + (unity_SHC.xyz * 
					    ((normal_17.x * normal_17.x) - (normal_17.y * normal_17.y))
					  )));
					  mediump vec3 tmpvar_23;
					  tmpvar_23 = max (((1.055 * 
					    pow (max (res_19, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_19 = tmpvar_23;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_23);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_9 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_10;
					  c_42.w = c_43.w;
					  c_42.xyz = (c_43.xyz + (tmpvar_9 * xlv_TEXCOORD5));
					  c_4.xyz = c_42.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  tmpvar_14.w = tmpvar_7.x;
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  tmpvar_15.w = tmpvar_7.y;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  tmpvar_16.w = tmpvar_7.z;
					  mediump vec3 normal_17;
					  normal_17 = worldNormal_3;
					  mediump vec4 tmpvar_18;
					  tmpvar_18.w = 1.0;
					  tmpvar_18.xyz = normal_17;
					  mediump vec3 res_19;
					  mediump vec3 x_20;
					  x_20.x = dot (unity_SHAr, tmpvar_18);
					  x_20.y = dot (unity_SHAg, tmpvar_18);
					  x_20.z = dot (unity_SHAb, tmpvar_18);
					  mediump vec3 x1_21;
					  mediump vec4 tmpvar_22;
					  tmpvar_22 = (normal_17.xyzz * normal_17.yzzx);
					  x1_21.x = dot (unity_SHBr, tmpvar_22);
					  x1_21.y = dot (unity_SHBg, tmpvar_22);
					  x1_21.z = dot (unity_SHBb, tmpvar_22);
					  res_19 = (x_20 + (x1_21 + (unity_SHC.xyz * 
					    ((normal_17.x * normal_17.x) - (normal_17.y * normal_17.y))
					  )));
					  mediump vec3 tmpvar_23;
					  tmpvar_23 = max (((1.055 * 
					    pow (max (res_19, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_19 = tmpvar_23;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_23);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_9 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_10;
					  c_42.w = c_43.w;
					  c_42.xyz = (c_43.xyz + (tmpvar_9 * xlv_TEXCOORD5));
					  c_4.xyz = c_42.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  tmpvar_14.w = tmpvar_7.x;
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  tmpvar_15.w = tmpvar_7.y;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  tmpvar_16.w = tmpvar_7.z;
					  mediump vec3 normal_17;
					  normal_17 = worldNormal_3;
					  mediump vec4 tmpvar_18;
					  tmpvar_18.w = 1.0;
					  tmpvar_18.xyz = normal_17;
					  mediump vec3 res_19;
					  mediump vec3 x_20;
					  x_20.x = dot (unity_SHAr, tmpvar_18);
					  x_20.y = dot (unity_SHAg, tmpvar_18);
					  x_20.z = dot (unity_SHAb, tmpvar_18);
					  mediump vec3 x1_21;
					  mediump vec4 tmpvar_22;
					  tmpvar_22 = (normal_17.xyzz * normal_17.yzzx);
					  x1_21.x = dot (unity_SHBr, tmpvar_22);
					  x1_21.y = dot (unity_SHBg, tmpvar_22);
					  x1_21.z = dot (unity_SHBb, tmpvar_22);
					  res_19 = (x_20 + (x1_21 + (unity_SHC.xyz * 
					    ((normal_17.x * normal_17.x) - (normal_17.y * normal_17.y))
					  )));
					  mediump vec3 tmpvar_23;
					  tmpvar_23 = max (((1.055 * 
					    pow (max (res_19, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_19 = tmpvar_23;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_23);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_9 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_10;
					  c_42.w = c_43.w;
					  c_42.xyz = (c_43.xyz + (tmpvar_9 * xlv_TEXCOORD5));
					  c_4.xyz = c_42.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_WorldToObject[0].xyz;
					  tmpvar_10[1] = unity_WorldToObject[1].xyz;
					  tmpvar_10[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_glesNormal * tmpvar_10));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_9.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_9.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_9.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_8));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_16;
					  xlv_TEXCOORD3 = tmpvar_17;
					  xlv_TEXCOORD4 = tmpvar_18;
					  xlv_TEXCOORD6 = tmpvar_6;
					  xlv_TEXCOORD8 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 tmpvar_57;
					  tmpvar_57 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_57;
					  lowp vec4 c_58;
					  lowp vec4 c_59;
					  lowp float diff_60;
					  mediump float tmpvar_61;
					  tmpvar_61 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_60 = tmpvar_61;
					  c_59.xyz = ((tmpvar_12 * tmpvar_57) * diff_60);
					  c_59.w = tmpvar_13;
					  c_58.w = c_59.w;
					  c_58.xyz = c_59.xyz;
					  c_5.xyz = c_58.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_WorldToObject[0].xyz;
					  tmpvar_10[1] = unity_WorldToObject[1].xyz;
					  tmpvar_10[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_glesNormal * tmpvar_10));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_9.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_9.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_9.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_8));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_16;
					  xlv_TEXCOORD3 = tmpvar_17;
					  xlv_TEXCOORD4 = tmpvar_18;
					  xlv_TEXCOORD6 = tmpvar_6;
					  xlv_TEXCOORD8 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 tmpvar_57;
					  tmpvar_57 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_57;
					  lowp vec4 c_58;
					  lowp vec4 c_59;
					  lowp float diff_60;
					  mediump float tmpvar_61;
					  tmpvar_61 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_60 = tmpvar_61;
					  c_59.xyz = ((tmpvar_12 * tmpvar_57) * diff_60);
					  c_59.w = tmpvar_13;
					  c_58.w = c_59.w;
					  c_58.xyz = c_59.xyz;
					  c_5.xyz = c_58.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_WorldToObject[0].xyz;
					  tmpvar_10[1] = unity_WorldToObject[1].xyz;
					  tmpvar_10[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_glesNormal * tmpvar_10));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_9.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_9.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_9.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_8));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_16;
					  xlv_TEXCOORD3 = tmpvar_17;
					  xlv_TEXCOORD4 = tmpvar_18;
					  xlv_TEXCOORD6 = tmpvar_6;
					  xlv_TEXCOORD8 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 tmpvar_57;
					  tmpvar_57 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_57;
					  lowp vec4 c_58;
					  lowp vec4 c_59;
					  lowp float diff_60;
					  mediump float tmpvar_61;
					  tmpvar_61 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_60 = tmpvar_61;
					  c_59.xyz = ((tmpvar_12 * tmpvar_57) * diff_60);
					  c_59.w = tmpvar_13;
					  c_58.w = c_59.w;
					  c_58.xyz = c_59.xyz;
					  c_5.xyz = c_58.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_WorldToObject[0].xyz;
					  tmpvar_10[1] = unity_WorldToObject[1].xyz;
					  tmpvar_10[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_glesNormal * tmpvar_10));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_9.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_9.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_9.z;
					  mediump vec3 normal_19;
					  normal_19 = worldNormal_3;
					  mediump vec3 x1_20;
					  mediump vec4 tmpvar_21;
					  tmpvar_21 = (normal_19.xyzz * normal_19.yzzx);
					  x1_20.x = dot (unity_SHBr, tmpvar_21);
					  x1_20.y = dot (unity_SHBg, tmpvar_21);
					  x1_20.z = dot (unity_SHBb, tmpvar_21);
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_8));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_16;
					  xlv_TEXCOORD3 = tmpvar_17;
					  xlv_TEXCOORD4 = tmpvar_18;
					  xlv_TEXCOORD5 = (x1_20 + (unity_SHC.xyz * (
					    (normal_19.x * normal_19.x)
					   - 
					    (normal_19.y * normal_19.y)
					  )));
					  xlv_TEXCOORD6 = tmpvar_6;
					  xlv_TEXCOORD8 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 normalWorld_57;
					  normalWorld_57 = tmpvar_56;
					  mediump vec3 tmpvar_58;
					  tmpvar_58 = (tmpvar_2 * tmpvar_1);
					  mediump vec4 tmpvar_59;
					  tmpvar_59.w = 1.0;
					  tmpvar_59.xyz = normalWorld_57;
					  mediump vec3 x_60;
					  x_60.x = dot (unity_SHAr, tmpvar_59);
					  x_60.y = dot (unity_SHAg, tmpvar_59);
					  x_60.z = dot (unity_SHAb, tmpvar_59);
					  mediump vec3 tmpvar_61;
					  tmpvar_61 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5 + x_60)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_58;
					  lowp vec4 c_62;
					  lowp vec4 c_63;
					  lowp float diff_64;
					  mediump float tmpvar_65;
					  tmpvar_65 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_64 = tmpvar_65;
					  c_63.xyz = ((tmpvar_12 * tmpvar_58) * diff_64);
					  c_63.w = tmpvar_13;
					  c_62.w = c_63.w;
					  c_62.xyz = (c_63.xyz + (tmpvar_12 * tmpvar_61));
					  c_5.xyz = c_62.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_WorldToObject[0].xyz;
					  tmpvar_10[1] = unity_WorldToObject[1].xyz;
					  tmpvar_10[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_glesNormal * tmpvar_10));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_9.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_9.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_9.z;
					  mediump vec3 normal_19;
					  normal_19 = worldNormal_3;
					  mediump vec3 x1_20;
					  mediump vec4 tmpvar_21;
					  tmpvar_21 = (normal_19.xyzz * normal_19.yzzx);
					  x1_20.x = dot (unity_SHBr, tmpvar_21);
					  x1_20.y = dot (unity_SHBg, tmpvar_21);
					  x1_20.z = dot (unity_SHBb, tmpvar_21);
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_8));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_16;
					  xlv_TEXCOORD3 = tmpvar_17;
					  xlv_TEXCOORD4 = tmpvar_18;
					  xlv_TEXCOORD5 = (x1_20 + (unity_SHC.xyz * (
					    (normal_19.x * normal_19.x)
					   - 
					    (normal_19.y * normal_19.y)
					  )));
					  xlv_TEXCOORD6 = tmpvar_6;
					  xlv_TEXCOORD8 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 normalWorld_57;
					  normalWorld_57 = tmpvar_56;
					  mediump vec3 tmpvar_58;
					  tmpvar_58 = (tmpvar_2 * tmpvar_1);
					  mediump vec4 tmpvar_59;
					  tmpvar_59.w = 1.0;
					  tmpvar_59.xyz = normalWorld_57;
					  mediump vec3 x_60;
					  x_60.x = dot (unity_SHAr, tmpvar_59);
					  x_60.y = dot (unity_SHAg, tmpvar_59);
					  x_60.z = dot (unity_SHAb, tmpvar_59);
					  mediump vec3 tmpvar_61;
					  tmpvar_61 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5 + x_60)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_58;
					  lowp vec4 c_62;
					  lowp vec4 c_63;
					  lowp float diff_64;
					  mediump float tmpvar_65;
					  tmpvar_65 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_64 = tmpvar_65;
					  c_63.xyz = ((tmpvar_12 * tmpvar_58) * diff_64);
					  c_63.w = tmpvar_13;
					  c_62.w = c_63.w;
					  c_62.xyz = (c_63.xyz + (tmpvar_12 * tmpvar_61));
					  c_5.xyz = c_62.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_WorldToObject[0].xyz;
					  tmpvar_10[1] = unity_WorldToObject[1].xyz;
					  tmpvar_10[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_glesNormal * tmpvar_10));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_9.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_9.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_9.z;
					  mediump vec3 normal_19;
					  normal_19 = worldNormal_3;
					  mediump vec3 x1_20;
					  mediump vec4 tmpvar_21;
					  tmpvar_21 = (normal_19.xyzz * normal_19.yzzx);
					  x1_20.x = dot (unity_SHBr, tmpvar_21);
					  x1_20.y = dot (unity_SHBg, tmpvar_21);
					  x1_20.z = dot (unity_SHBb, tmpvar_21);
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_8));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_16;
					  xlv_TEXCOORD3 = tmpvar_17;
					  xlv_TEXCOORD4 = tmpvar_18;
					  xlv_TEXCOORD5 = (x1_20 + (unity_SHC.xyz * (
					    (normal_19.x * normal_19.x)
					   - 
					    (normal_19.y * normal_19.y)
					  )));
					  xlv_TEXCOORD6 = tmpvar_6;
					  xlv_TEXCOORD8 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 normalWorld_57;
					  normalWorld_57 = tmpvar_56;
					  mediump vec3 tmpvar_58;
					  tmpvar_58 = (tmpvar_2 * tmpvar_1);
					  mediump vec4 tmpvar_59;
					  tmpvar_59.w = 1.0;
					  tmpvar_59.xyz = normalWorld_57;
					  mediump vec3 x_60;
					  x_60.x = dot (unity_SHAr, tmpvar_59);
					  x_60.y = dot (unity_SHAg, tmpvar_59);
					  x_60.z = dot (unity_SHAb, tmpvar_59);
					  mediump vec3 tmpvar_61;
					  tmpvar_61 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5 + x_60)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_58;
					  lowp vec4 c_62;
					  lowp vec4 c_63;
					  lowp float diff_64;
					  mediump float tmpvar_65;
					  tmpvar_65 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_64 = tmpvar_65;
					  c_63.xyz = ((tmpvar_12 * tmpvar_58) * diff_64);
					  c_63.w = tmpvar_13;
					  c_62.w = c_63.w;
					  c_62.xyz = (c_63.xyz + (tmpvar_12 * tmpvar_61));
					  c_5.xyz = c_62.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  tmpvar_14.w = tmpvar_7.x;
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  tmpvar_15.w = tmpvar_7.y;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  tmpvar_16.w = tmpvar_7.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_9 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_10;
					  c_42.w = c_43.w;
					  c_42.xyz = c_43.xyz;
					  c_4.xyz = c_42.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  tmpvar_14.w = tmpvar_7.x;
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  tmpvar_15.w = tmpvar_7.y;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  tmpvar_16.w = tmpvar_7.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_9 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_10;
					  c_42.w = c_43.w;
					  c_42.xyz = c_43.xyz;
					  c_4.xyz = c_42.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_7;
					  tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  tmpvar_14.w = tmpvar_7.x;
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  tmpvar_15.w = tmpvar_7.y;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  tmpvar_16.w = tmpvar_7.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_9 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_10;
					  c_42.w = c_43.w;
					  c_42.xyz = c_43.xyz;
					  c_4.xyz = c_42.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  mediump vec3 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_glesNormal * tmpvar_9));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_8.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_8.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_8.z;
					  highp vec3 lightColor0_18;
					  lightColor0_18 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_19;
					  lightColor1_19 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_20;
					  lightColor2_20 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_21;
					  lightColor3_21 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_22;
					  lightAttenSq_22 = unity_4LightAtten0;
					  highp vec3 normal_23;
					  normal_23 = worldNormal_3;
					  highp vec3 col_24;
					  highp vec4 ndotl_25;
					  highp vec4 lengthSq_26;
					  highp vec4 tmpvar_27;
					  tmpvar_27 = (unity_4LightPosX0 - tmpvar_8.x);
					  highp vec4 tmpvar_28;
					  tmpvar_28 = (unity_4LightPosY0 - tmpvar_8.y);
					  highp vec4 tmpvar_29;
					  tmpvar_29 = (unity_4LightPosZ0 - tmpvar_8.z);
					  lengthSq_26 = (tmpvar_27 * tmpvar_27);
					  lengthSq_26 = (lengthSq_26 + (tmpvar_28 * tmpvar_28));
					  lengthSq_26 = (lengthSq_26 + (tmpvar_29 * tmpvar_29));
					  highp vec4 tmpvar_30;
					  tmpvar_30 = max (lengthSq_26, vec4(1e-06, 1e-06, 1e-06, 1e-06));
					  lengthSq_26 = tmpvar_30;
					  ndotl_25 = (tmpvar_27 * normal_23.x);
					  ndotl_25 = (ndotl_25 + (tmpvar_28 * normal_23.y));
					  ndotl_25 = (ndotl_25 + (tmpvar_29 * normal_23.z));
					  highp vec4 tmpvar_31;
					  tmpvar_31 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_25 * inversesqrt(tmpvar_30)));
					  ndotl_25 = tmpvar_31;
					  highp vec4 tmpvar_32;
					  tmpvar_32 = (tmpvar_31 * (1.0/((1.0 + 
					    (tmpvar_30 * lightAttenSq_22)
					  ))));
					  col_24 = (lightColor0_18 * tmpvar_32.x);
					  col_24 = (col_24 + (lightColor1_19 * tmpvar_32.y));
					  col_24 = (col_24 + (lightColor2_20 * tmpvar_32.z));
					  col_24 = (col_24 + (lightColor3_21 * tmpvar_32.w));
					  tmpvar_6 = col_24;
					  mediump vec3 normal_33;
					  normal_33 = worldNormal_3;
					  mediump vec3 ambient_34;
					  mediump vec4 tmpvar_35;
					  tmpvar_35.w = 1.0;
					  tmpvar_35.xyz = normal_33;
					  mediump vec3 res_36;
					  mediump vec3 x_37;
					  x_37.x = dot (unity_SHAr, tmpvar_35);
					  x_37.y = dot (unity_SHAg, tmpvar_35);
					  x_37.z = dot (unity_SHAb, tmpvar_35);
					  mediump vec3 x1_38;
					  mediump vec4 tmpvar_39;
					  tmpvar_39 = (normal_33.xyzz * normal_33.yzzx);
					  x1_38.x = dot (unity_SHBr, tmpvar_39);
					  x1_38.y = dot (unity_SHBg, tmpvar_39);
					  x1_38.z = dot (unity_SHBb, tmpvar_39);
					  res_36 = (x_37 + (x1_38 + (unity_SHC.xyz * 
					    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
					  )));
					  mediump vec3 tmpvar_40;
					  tmpvar_40 = max (((1.055 * 
					    pow (max (res_36, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_36 = tmpvar_40;
					  ambient_34 = (tmpvar_6 + max (vec3(0.0, 0.0, 0.0), tmpvar_40));
					  tmpvar_6 = ambient_34;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					  xlv_TEXCOORD4 = tmpvar_17;
					  xlv_TEXCOORD5 = ambient_34;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_9 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_10;
					  c_42.w = c_43.w;
					  c_42.xyz = (c_43.xyz + (tmpvar_9 * xlv_TEXCOORD5));
					  c_4.xyz = c_42.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  mediump vec3 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_glesNormal * tmpvar_9));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_8.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_8.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_8.z;
					  highp vec3 lightColor0_18;
					  lightColor0_18 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_19;
					  lightColor1_19 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_20;
					  lightColor2_20 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_21;
					  lightColor3_21 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_22;
					  lightAttenSq_22 = unity_4LightAtten0;
					  highp vec3 normal_23;
					  normal_23 = worldNormal_3;
					  highp vec3 col_24;
					  highp vec4 ndotl_25;
					  highp vec4 lengthSq_26;
					  highp vec4 tmpvar_27;
					  tmpvar_27 = (unity_4LightPosX0 - tmpvar_8.x);
					  highp vec4 tmpvar_28;
					  tmpvar_28 = (unity_4LightPosY0 - tmpvar_8.y);
					  highp vec4 tmpvar_29;
					  tmpvar_29 = (unity_4LightPosZ0 - tmpvar_8.z);
					  lengthSq_26 = (tmpvar_27 * tmpvar_27);
					  lengthSq_26 = (lengthSq_26 + (tmpvar_28 * tmpvar_28));
					  lengthSq_26 = (lengthSq_26 + (tmpvar_29 * tmpvar_29));
					  highp vec4 tmpvar_30;
					  tmpvar_30 = max (lengthSq_26, vec4(1e-06, 1e-06, 1e-06, 1e-06));
					  lengthSq_26 = tmpvar_30;
					  ndotl_25 = (tmpvar_27 * normal_23.x);
					  ndotl_25 = (ndotl_25 + (tmpvar_28 * normal_23.y));
					  ndotl_25 = (ndotl_25 + (tmpvar_29 * normal_23.z));
					  highp vec4 tmpvar_31;
					  tmpvar_31 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_25 * inversesqrt(tmpvar_30)));
					  ndotl_25 = tmpvar_31;
					  highp vec4 tmpvar_32;
					  tmpvar_32 = (tmpvar_31 * (1.0/((1.0 + 
					    (tmpvar_30 * lightAttenSq_22)
					  ))));
					  col_24 = (lightColor0_18 * tmpvar_32.x);
					  col_24 = (col_24 + (lightColor1_19 * tmpvar_32.y));
					  col_24 = (col_24 + (lightColor2_20 * tmpvar_32.z));
					  col_24 = (col_24 + (lightColor3_21 * tmpvar_32.w));
					  tmpvar_6 = col_24;
					  mediump vec3 normal_33;
					  normal_33 = worldNormal_3;
					  mediump vec3 ambient_34;
					  mediump vec4 tmpvar_35;
					  tmpvar_35.w = 1.0;
					  tmpvar_35.xyz = normal_33;
					  mediump vec3 res_36;
					  mediump vec3 x_37;
					  x_37.x = dot (unity_SHAr, tmpvar_35);
					  x_37.y = dot (unity_SHAg, tmpvar_35);
					  x_37.z = dot (unity_SHAb, tmpvar_35);
					  mediump vec3 x1_38;
					  mediump vec4 tmpvar_39;
					  tmpvar_39 = (normal_33.xyzz * normal_33.yzzx);
					  x1_38.x = dot (unity_SHBr, tmpvar_39);
					  x1_38.y = dot (unity_SHBg, tmpvar_39);
					  x1_38.z = dot (unity_SHBb, tmpvar_39);
					  res_36 = (x_37 + (x1_38 + (unity_SHC.xyz * 
					    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
					  )));
					  mediump vec3 tmpvar_40;
					  tmpvar_40 = max (((1.055 * 
					    pow (max (res_36, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_36 = tmpvar_40;
					  ambient_34 = (tmpvar_6 + max (vec3(0.0, 0.0, 0.0), tmpvar_40));
					  tmpvar_6 = ambient_34;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					  xlv_TEXCOORD4 = tmpvar_17;
					  xlv_TEXCOORD5 = ambient_34;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_9 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_10;
					  c_42.w = c_43.w;
					  c_42.xyz = (c_43.xyz + (tmpvar_9 * xlv_TEXCOORD5));
					  c_4.xyz = c_42.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  mediump vec3 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_glesNormal * tmpvar_9));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_8.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_8.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_8.z;
					  highp vec3 lightColor0_18;
					  lightColor0_18 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_19;
					  lightColor1_19 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_20;
					  lightColor2_20 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_21;
					  lightColor3_21 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_22;
					  lightAttenSq_22 = unity_4LightAtten0;
					  highp vec3 normal_23;
					  normal_23 = worldNormal_3;
					  highp vec3 col_24;
					  highp vec4 ndotl_25;
					  highp vec4 lengthSq_26;
					  highp vec4 tmpvar_27;
					  tmpvar_27 = (unity_4LightPosX0 - tmpvar_8.x);
					  highp vec4 tmpvar_28;
					  tmpvar_28 = (unity_4LightPosY0 - tmpvar_8.y);
					  highp vec4 tmpvar_29;
					  tmpvar_29 = (unity_4LightPosZ0 - tmpvar_8.z);
					  lengthSq_26 = (tmpvar_27 * tmpvar_27);
					  lengthSq_26 = (lengthSq_26 + (tmpvar_28 * tmpvar_28));
					  lengthSq_26 = (lengthSq_26 + (tmpvar_29 * tmpvar_29));
					  highp vec4 tmpvar_30;
					  tmpvar_30 = max (lengthSq_26, vec4(1e-06, 1e-06, 1e-06, 1e-06));
					  lengthSq_26 = tmpvar_30;
					  ndotl_25 = (tmpvar_27 * normal_23.x);
					  ndotl_25 = (ndotl_25 + (tmpvar_28 * normal_23.y));
					  ndotl_25 = (ndotl_25 + (tmpvar_29 * normal_23.z));
					  highp vec4 tmpvar_31;
					  tmpvar_31 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_25 * inversesqrt(tmpvar_30)));
					  ndotl_25 = tmpvar_31;
					  highp vec4 tmpvar_32;
					  tmpvar_32 = (tmpvar_31 * (1.0/((1.0 + 
					    (tmpvar_30 * lightAttenSq_22)
					  ))));
					  col_24 = (lightColor0_18 * tmpvar_32.x);
					  col_24 = (col_24 + (lightColor1_19 * tmpvar_32.y));
					  col_24 = (col_24 + (lightColor2_20 * tmpvar_32.z));
					  col_24 = (col_24 + (lightColor3_21 * tmpvar_32.w));
					  tmpvar_6 = col_24;
					  mediump vec3 normal_33;
					  normal_33 = worldNormal_3;
					  mediump vec3 ambient_34;
					  mediump vec4 tmpvar_35;
					  tmpvar_35.w = 1.0;
					  tmpvar_35.xyz = normal_33;
					  mediump vec3 res_36;
					  mediump vec3 x_37;
					  x_37.x = dot (unity_SHAr, tmpvar_35);
					  x_37.y = dot (unity_SHAg, tmpvar_35);
					  x_37.z = dot (unity_SHAb, tmpvar_35);
					  mediump vec3 x1_38;
					  mediump vec4 tmpvar_39;
					  tmpvar_39 = (normal_33.xyzz * normal_33.yzzx);
					  x1_38.x = dot (unity_SHBr, tmpvar_39);
					  x1_38.y = dot (unity_SHBg, tmpvar_39);
					  x1_38.z = dot (unity_SHBb, tmpvar_39);
					  res_36 = (x_37 + (x1_38 + (unity_SHC.xyz * 
					    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
					  )));
					  mediump vec3 tmpvar_40;
					  tmpvar_40 = max (((1.055 * 
					    pow (max (res_36, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_36 = tmpvar_40;
					  ambient_34 = (tmpvar_6 + max (vec3(0.0, 0.0, 0.0), tmpvar_40));
					  tmpvar_6 = ambient_34;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					  xlv_TEXCOORD4 = tmpvar_17;
					  xlv_TEXCOORD5 = ambient_34;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_9 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_10;
					  c_42.w = c_43.w;
					  c_42.xyz = (c_43.xyz + (tmpvar_9 * xlv_TEXCOORD5));
					  c_4.xyz = c_42.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_WorldToObject[0].xyz;
					  tmpvar_10[1] = unity_WorldToObject[1].xyz;
					  tmpvar_10[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_glesNormal * tmpvar_10));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_9.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_9.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_9.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_8));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_16;
					  xlv_TEXCOORD3 = tmpvar_17;
					  xlv_TEXCOORD4 = tmpvar_18;
					  xlv_TEXCOORD6 = tmpvar_6;
					  xlv_TEXCOORD8 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 tmpvar_57;
					  tmpvar_57 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_57;
					  lowp vec4 c_58;
					  lowp vec4 c_59;
					  lowp float diff_60;
					  mediump float tmpvar_61;
					  tmpvar_61 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_60 = tmpvar_61;
					  c_59.xyz = ((tmpvar_12 * tmpvar_57) * diff_60);
					  c_59.w = tmpvar_13;
					  c_58.w = c_59.w;
					  c_58.xyz = c_59.xyz;
					  c_5.xyz = c_58.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_WorldToObject[0].xyz;
					  tmpvar_10[1] = unity_WorldToObject[1].xyz;
					  tmpvar_10[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_glesNormal * tmpvar_10));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_9.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_9.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_9.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_8));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_16;
					  xlv_TEXCOORD3 = tmpvar_17;
					  xlv_TEXCOORD4 = tmpvar_18;
					  xlv_TEXCOORD6 = tmpvar_6;
					  xlv_TEXCOORD8 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 tmpvar_57;
					  tmpvar_57 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_57;
					  lowp vec4 c_58;
					  lowp vec4 c_59;
					  lowp float diff_60;
					  mediump float tmpvar_61;
					  tmpvar_61 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_60 = tmpvar_61;
					  c_59.xyz = ((tmpvar_12 * tmpvar_57) * diff_60);
					  c_59.w = tmpvar_13;
					  c_58.w = c_59.w;
					  c_58.xyz = c_59.xyz;
					  c_5.xyz = c_58.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_WorldToObject[0].xyz;
					  tmpvar_10[1] = unity_WorldToObject[1].xyz;
					  tmpvar_10[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_glesNormal * tmpvar_10));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_9.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_9.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_9.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_8));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_16;
					  xlv_TEXCOORD3 = tmpvar_17;
					  xlv_TEXCOORD4 = tmpvar_18;
					  xlv_TEXCOORD6 = tmpvar_6;
					  xlv_TEXCOORD8 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 tmpvar_57;
					  tmpvar_57 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_57;
					  lowp vec4 c_58;
					  lowp vec4 c_59;
					  lowp float diff_60;
					  mediump float tmpvar_61;
					  tmpvar_61 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_60 = tmpvar_61;
					  c_59.xyz = ((tmpvar_12 * tmpvar_57) * diff_60);
					  c_59.w = tmpvar_13;
					  c_58.w = c_59.w;
					  c_58.xyz = c_59.xyz;
					  c_5.xyz = c_58.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  mediump vec3 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9.w = 1.0;
					  tmpvar_9.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_WorldToObject[0].xyz;
					  tmpvar_11[1] = unity_WorldToObject[1].xyz;
					  tmpvar_11[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((_glesNormal * tmpvar_11));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_10.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_10.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_10.z;
					  highp vec3 lightColor0_20;
					  lightColor0_20 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_21;
					  lightColor1_21 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_22;
					  lightColor2_22 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_23;
					  lightColor3_23 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_24;
					  lightAttenSq_24 = unity_4LightAtten0;
					  highp vec3 normal_25;
					  normal_25 = worldNormal_3;
					  highp vec3 col_26;
					  highp vec4 ndotl_27;
					  highp vec4 lengthSq_28;
					  highp vec4 tmpvar_29;
					  tmpvar_29 = (unity_4LightPosX0 - tmpvar_10.x);
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosY0 - tmpvar_10.y);
					  highp vec4 tmpvar_31;
					  tmpvar_31 = (unity_4LightPosZ0 - tmpvar_10.z);
					  lengthSq_28 = (tmpvar_29 * tmpvar_29);
					  lengthSq_28 = (lengthSq_28 + (tmpvar_30 * tmpvar_30));
					  lengthSq_28 = (lengthSq_28 + (tmpvar_31 * tmpvar_31));
					  highp vec4 tmpvar_32;
					  tmpvar_32 = max (lengthSq_28, vec4(1e-06, 1e-06, 1e-06, 1e-06));
					  lengthSq_28 = tmpvar_32;
					  ndotl_27 = (tmpvar_29 * normal_25.x);
					  ndotl_27 = (ndotl_27 + (tmpvar_30 * normal_25.y));
					  ndotl_27 = (ndotl_27 + (tmpvar_31 * normal_25.z));
					  highp vec4 tmpvar_33;
					  tmpvar_33 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_27 * inversesqrt(tmpvar_32)));
					  ndotl_27 = tmpvar_33;
					  highp vec4 tmpvar_34;
					  tmpvar_34 = (tmpvar_33 * (1.0/((1.0 + 
					    (tmpvar_32 * lightAttenSq_24)
					  ))));
					  col_26 = (lightColor0_20 * tmpvar_34.x);
					  col_26 = (col_26 + (lightColor1_21 * tmpvar_34.y));
					  col_26 = (col_26 + (lightColor2_22 * tmpvar_34.z));
					  col_26 = (col_26 + (lightColor3_23 * tmpvar_34.w));
					  tmpvar_6 = col_26;
					  mediump vec3 normal_35;
					  normal_35 = worldNormal_3;
					  mediump vec3 ambient_36;
					  mediump vec3 x1_37;
					  mediump vec4 tmpvar_38;
					  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
					  x1_37.x = dot (unity_SHBr, tmpvar_38);
					  x1_37.y = dot (unity_SHBg, tmpvar_38);
					  x1_37.z = dot (unity_SHBb, tmpvar_38);
					  ambient_36 = ((tmpvar_6 * (
					    (tmpvar_6 * ((tmpvar_6 * 0.305306) + 0.6821711))
					   + 0.01252288)) + (x1_37 + (unity_SHC.xyz * 
					    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
					  )));
					  tmpvar_6 = ambient_36;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = tmpvar_19;
					  xlv_TEXCOORD5 = ambient_36;
					  xlv_TEXCOORD6 = tmpvar_7;
					  xlv_TEXCOORD8 = tmpvar_8;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 normalWorld_57;
					  normalWorld_57 = tmpvar_56;
					  mediump vec3 tmpvar_58;
					  tmpvar_58 = (tmpvar_2 * tmpvar_1);
					  mediump vec4 tmpvar_59;
					  tmpvar_59.w = 1.0;
					  tmpvar_59.xyz = normalWorld_57;
					  mediump vec3 x_60;
					  x_60.x = dot (unity_SHAr, tmpvar_59);
					  x_60.y = dot (unity_SHAg, tmpvar_59);
					  x_60.z = dot (unity_SHAb, tmpvar_59);
					  mediump vec3 tmpvar_61;
					  tmpvar_61 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5 + x_60)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_58;
					  lowp vec4 c_62;
					  lowp vec4 c_63;
					  lowp float diff_64;
					  mediump float tmpvar_65;
					  tmpvar_65 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_64 = tmpvar_65;
					  c_63.xyz = ((tmpvar_12 * tmpvar_58) * diff_64);
					  c_63.w = tmpvar_13;
					  c_62.w = c_63.w;
					  c_62.xyz = (c_63.xyz + (tmpvar_12 * tmpvar_61));
					  c_5.xyz = c_62.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  mediump vec3 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9.w = 1.0;
					  tmpvar_9.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_WorldToObject[0].xyz;
					  tmpvar_11[1] = unity_WorldToObject[1].xyz;
					  tmpvar_11[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((_glesNormal * tmpvar_11));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_10.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_10.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_10.z;
					  highp vec3 lightColor0_20;
					  lightColor0_20 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_21;
					  lightColor1_21 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_22;
					  lightColor2_22 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_23;
					  lightColor3_23 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_24;
					  lightAttenSq_24 = unity_4LightAtten0;
					  highp vec3 normal_25;
					  normal_25 = worldNormal_3;
					  highp vec3 col_26;
					  highp vec4 ndotl_27;
					  highp vec4 lengthSq_28;
					  highp vec4 tmpvar_29;
					  tmpvar_29 = (unity_4LightPosX0 - tmpvar_10.x);
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosY0 - tmpvar_10.y);
					  highp vec4 tmpvar_31;
					  tmpvar_31 = (unity_4LightPosZ0 - tmpvar_10.z);
					  lengthSq_28 = (tmpvar_29 * tmpvar_29);
					  lengthSq_28 = (lengthSq_28 + (tmpvar_30 * tmpvar_30));
					  lengthSq_28 = (lengthSq_28 + (tmpvar_31 * tmpvar_31));
					  highp vec4 tmpvar_32;
					  tmpvar_32 = max (lengthSq_28, vec4(1e-06, 1e-06, 1e-06, 1e-06));
					  lengthSq_28 = tmpvar_32;
					  ndotl_27 = (tmpvar_29 * normal_25.x);
					  ndotl_27 = (ndotl_27 + (tmpvar_30 * normal_25.y));
					  ndotl_27 = (ndotl_27 + (tmpvar_31 * normal_25.z));
					  highp vec4 tmpvar_33;
					  tmpvar_33 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_27 * inversesqrt(tmpvar_32)));
					  ndotl_27 = tmpvar_33;
					  highp vec4 tmpvar_34;
					  tmpvar_34 = (tmpvar_33 * (1.0/((1.0 + 
					    (tmpvar_32 * lightAttenSq_24)
					  ))));
					  col_26 = (lightColor0_20 * tmpvar_34.x);
					  col_26 = (col_26 + (lightColor1_21 * tmpvar_34.y));
					  col_26 = (col_26 + (lightColor2_22 * tmpvar_34.z));
					  col_26 = (col_26 + (lightColor3_23 * tmpvar_34.w));
					  tmpvar_6 = col_26;
					  mediump vec3 normal_35;
					  normal_35 = worldNormal_3;
					  mediump vec3 ambient_36;
					  mediump vec3 x1_37;
					  mediump vec4 tmpvar_38;
					  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
					  x1_37.x = dot (unity_SHBr, tmpvar_38);
					  x1_37.y = dot (unity_SHBg, tmpvar_38);
					  x1_37.z = dot (unity_SHBb, tmpvar_38);
					  ambient_36 = ((tmpvar_6 * (
					    (tmpvar_6 * ((tmpvar_6 * 0.305306) + 0.6821711))
					   + 0.01252288)) + (x1_37 + (unity_SHC.xyz * 
					    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
					  )));
					  tmpvar_6 = ambient_36;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = tmpvar_19;
					  xlv_TEXCOORD5 = ambient_36;
					  xlv_TEXCOORD6 = tmpvar_7;
					  xlv_TEXCOORD8 = tmpvar_8;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 normalWorld_57;
					  normalWorld_57 = tmpvar_56;
					  mediump vec3 tmpvar_58;
					  tmpvar_58 = (tmpvar_2 * tmpvar_1);
					  mediump vec4 tmpvar_59;
					  tmpvar_59.w = 1.0;
					  tmpvar_59.xyz = normalWorld_57;
					  mediump vec3 x_60;
					  x_60.x = dot (unity_SHAr, tmpvar_59);
					  x_60.y = dot (unity_SHAg, tmpvar_59);
					  x_60.z = dot (unity_SHAb, tmpvar_59);
					  mediump vec3 tmpvar_61;
					  tmpvar_61 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5 + x_60)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_58;
					  lowp vec4 c_62;
					  lowp vec4 c_63;
					  lowp float diff_64;
					  mediump float tmpvar_65;
					  tmpvar_65 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_64 = tmpvar_65;
					  c_63.xyz = ((tmpvar_12 * tmpvar_58) * diff_64);
					  c_63.w = tmpvar_13;
					  c_62.w = c_63.w;
					  c_62.xyz = (c_63.xyz + (tmpvar_12 * tmpvar_61));
					  c_5.xyz = c_62.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  mediump vec3 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9.w = 1.0;
					  tmpvar_9.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_WorldToObject[0].xyz;
					  tmpvar_11[1] = unity_WorldToObject[1].xyz;
					  tmpvar_11[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((_glesNormal * tmpvar_11));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_10.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_10.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_10.z;
					  highp vec3 lightColor0_20;
					  lightColor0_20 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_21;
					  lightColor1_21 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_22;
					  lightColor2_22 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_23;
					  lightColor3_23 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_24;
					  lightAttenSq_24 = unity_4LightAtten0;
					  highp vec3 normal_25;
					  normal_25 = worldNormal_3;
					  highp vec3 col_26;
					  highp vec4 ndotl_27;
					  highp vec4 lengthSq_28;
					  highp vec4 tmpvar_29;
					  tmpvar_29 = (unity_4LightPosX0 - tmpvar_10.x);
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosY0 - tmpvar_10.y);
					  highp vec4 tmpvar_31;
					  tmpvar_31 = (unity_4LightPosZ0 - tmpvar_10.z);
					  lengthSq_28 = (tmpvar_29 * tmpvar_29);
					  lengthSq_28 = (lengthSq_28 + (tmpvar_30 * tmpvar_30));
					  lengthSq_28 = (lengthSq_28 + (tmpvar_31 * tmpvar_31));
					  highp vec4 tmpvar_32;
					  tmpvar_32 = max (lengthSq_28, vec4(1e-06, 1e-06, 1e-06, 1e-06));
					  lengthSq_28 = tmpvar_32;
					  ndotl_27 = (tmpvar_29 * normal_25.x);
					  ndotl_27 = (ndotl_27 + (tmpvar_30 * normal_25.y));
					  ndotl_27 = (ndotl_27 + (tmpvar_31 * normal_25.z));
					  highp vec4 tmpvar_33;
					  tmpvar_33 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_27 * inversesqrt(tmpvar_32)));
					  ndotl_27 = tmpvar_33;
					  highp vec4 tmpvar_34;
					  tmpvar_34 = (tmpvar_33 * (1.0/((1.0 + 
					    (tmpvar_32 * lightAttenSq_24)
					  ))));
					  col_26 = (lightColor0_20 * tmpvar_34.x);
					  col_26 = (col_26 + (lightColor1_21 * tmpvar_34.y));
					  col_26 = (col_26 + (lightColor2_22 * tmpvar_34.z));
					  col_26 = (col_26 + (lightColor3_23 * tmpvar_34.w));
					  tmpvar_6 = col_26;
					  mediump vec3 normal_35;
					  normal_35 = worldNormal_3;
					  mediump vec3 ambient_36;
					  mediump vec3 x1_37;
					  mediump vec4 tmpvar_38;
					  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
					  x1_37.x = dot (unity_SHBr, tmpvar_38);
					  x1_37.y = dot (unity_SHBg, tmpvar_38);
					  x1_37.z = dot (unity_SHBb, tmpvar_38);
					  ambient_36 = ((tmpvar_6 * (
					    (tmpvar_6 * ((tmpvar_6 * 0.305306) + 0.6821711))
					   + 0.01252288)) + (x1_37 + (unity_SHC.xyz * 
					    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
					  )));
					  tmpvar_6 = ambient_36;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = tmpvar_19;
					  xlv_TEXCOORD5 = ambient_36;
					  xlv_TEXCOORD6 = tmpvar_7;
					  xlv_TEXCOORD8 = tmpvar_8;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 normalWorld_57;
					  normalWorld_57 = tmpvar_56;
					  mediump vec3 tmpvar_58;
					  tmpvar_58 = (tmpvar_2 * tmpvar_1);
					  mediump vec4 tmpvar_59;
					  tmpvar_59.w = 1.0;
					  tmpvar_59.xyz = normalWorld_57;
					  mediump vec3 x_60;
					  x_60.x = dot (unity_SHAr, tmpvar_59);
					  x_60.y = dot (unity_SHAg, tmpvar_59);
					  x_60.z = dot (unity_SHAb, tmpvar_59);
					  mediump vec3 tmpvar_61;
					  tmpvar_61 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5 + x_60)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_58;
					  lowp vec4 c_62;
					  lowp vec4 c_63;
					  lowp float diff_64;
					  mediump float tmpvar_65;
					  tmpvar_65 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_64 = tmpvar_65;
					  c_63.xyz = ((tmpvar_12 * tmpvar_58) * diff_64);
					  c_63.w = tmpvar_13;
					  c_62.w = c_63.w;
					  c_62.xyz = (c_63.xyz + (tmpvar_12 * tmpvar_61));
					  c_5.xyz = c_62.xyz;
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_glesNormal * tmpvar_9));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_8.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_8.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_8.z;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					  xlv_TEXCOORD4 = tmpvar_17;
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp float diff_43;
					  mediump float tmpvar_44;
					  tmpvar_44 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_43 = tmpvar_44;
					  c_42.xyz = ((tmpvar_9 * tmpvar_1) * diff_43);
					  c_42.w = tmpvar_10;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_42.xyz, vec3(tmpvar_45));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_glesNormal * tmpvar_9));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_8.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_8.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_8.z;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					  xlv_TEXCOORD4 = tmpvar_17;
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp float diff_43;
					  mediump float tmpvar_44;
					  tmpvar_44 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_43 = tmpvar_44;
					  c_42.xyz = ((tmpvar_9 * tmpvar_1) * diff_43);
					  c_42.w = tmpvar_10;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_42.xyz, vec3(tmpvar_45));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_glesNormal * tmpvar_9));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_8.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_8.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_8.z;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					  xlv_TEXCOORD4 = tmpvar_17;
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp float diff_43;
					  mediump float tmpvar_44;
					  tmpvar_44 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_43 = tmpvar_44;
					  c_42.xyz = ((tmpvar_9 * tmpvar_1) * diff_43);
					  c_42.w = tmpvar_10;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_42.xyz, vec3(tmpvar_45));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_glesNormal * tmpvar_9));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_8.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_8.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_8.z;
					  mediump vec3 normal_18;
					  normal_18 = worldNormal_3;
					  mediump vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = normal_18;
					  mediump vec3 res_20;
					  mediump vec3 x_21;
					  x_21.x = dot (unity_SHAr, tmpvar_19);
					  x_21.y = dot (unity_SHAg, tmpvar_19);
					  x_21.z = dot (unity_SHAb, tmpvar_19);
					  mediump vec3 x1_22;
					  mediump vec4 tmpvar_23;
					  tmpvar_23 = (normal_18.xyzz * normal_18.yzzx);
					  x1_22.x = dot (unity_SHBr, tmpvar_23);
					  x1_22.y = dot (unity_SHBg, tmpvar_23);
					  x1_22.z = dot (unity_SHBb, tmpvar_23);
					  res_20 = (x_21 + (x1_22 + (unity_SHC.xyz * 
					    ((normal_18.x * normal_18.x) - (normal_18.y * normal_18.y))
					  )));
					  mediump vec3 tmpvar_24;
					  tmpvar_24 = max (((1.055 * 
					    pow (max (res_20, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_20 = tmpvar_24;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					  xlv_TEXCOORD4 = tmpvar_17;
					  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_24);
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_9 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_10;
					  c_42.w = c_43.w;
					  c_42.xyz = (c_43.xyz + (tmpvar_9 * xlv_TEXCOORD5));
					  highp float tmpvar_46;
					  tmpvar_46 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_42.xyz, vec3(tmpvar_46));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_glesNormal * tmpvar_9));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_8.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_8.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_8.z;
					  mediump vec3 normal_18;
					  normal_18 = worldNormal_3;
					  mediump vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = normal_18;
					  mediump vec3 res_20;
					  mediump vec3 x_21;
					  x_21.x = dot (unity_SHAr, tmpvar_19);
					  x_21.y = dot (unity_SHAg, tmpvar_19);
					  x_21.z = dot (unity_SHAb, tmpvar_19);
					  mediump vec3 x1_22;
					  mediump vec4 tmpvar_23;
					  tmpvar_23 = (normal_18.xyzz * normal_18.yzzx);
					  x1_22.x = dot (unity_SHBr, tmpvar_23);
					  x1_22.y = dot (unity_SHBg, tmpvar_23);
					  x1_22.z = dot (unity_SHBb, tmpvar_23);
					  res_20 = (x_21 + (x1_22 + (unity_SHC.xyz * 
					    ((normal_18.x * normal_18.x) - (normal_18.y * normal_18.y))
					  )));
					  mediump vec3 tmpvar_24;
					  tmpvar_24 = max (((1.055 * 
					    pow (max (res_20, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_20 = tmpvar_24;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					  xlv_TEXCOORD4 = tmpvar_17;
					  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_24);
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_9 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_10;
					  c_42.w = c_43.w;
					  c_42.xyz = (c_43.xyz + (tmpvar_9 * xlv_TEXCOORD5));
					  highp float tmpvar_46;
					  tmpvar_46 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_42.xyz, vec3(tmpvar_46));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_glesNormal * tmpvar_9));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_8.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_8.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_8.z;
					  mediump vec3 normal_18;
					  normal_18 = worldNormal_3;
					  mediump vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = normal_18;
					  mediump vec3 res_20;
					  mediump vec3 x_21;
					  x_21.x = dot (unity_SHAr, tmpvar_19);
					  x_21.y = dot (unity_SHAg, tmpvar_19);
					  x_21.z = dot (unity_SHAb, tmpvar_19);
					  mediump vec3 x1_22;
					  mediump vec4 tmpvar_23;
					  tmpvar_23 = (normal_18.xyzz * normal_18.yzzx);
					  x1_22.x = dot (unity_SHBr, tmpvar_23);
					  x1_22.y = dot (unity_SHBg, tmpvar_23);
					  x1_22.z = dot (unity_SHBb, tmpvar_23);
					  res_20 = (x_21 + (x1_22 + (unity_SHC.xyz * 
					    ((normal_18.x * normal_18.x) - (normal_18.y * normal_18.y))
					  )));
					  mediump vec3 tmpvar_24;
					  tmpvar_24 = max (((1.055 * 
					    pow (max (res_20, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_20 = tmpvar_24;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					  xlv_TEXCOORD4 = tmpvar_17;
					  xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_24);
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_9 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_10;
					  c_42.w = c_43.w;
					  c_42.xyz = (c_43.xyz + (tmpvar_9 * xlv_TEXCOORD5));
					  highp float tmpvar_46;
					  tmpvar_46 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_42.xyz, vec3(tmpvar_46));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp float xlv_TEXCOORD7;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9.w = 1.0;
					  tmpvar_9.xyz = _glesVertex.xyz;
					  tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_WorldToObject[0].xyz;
					  tmpvar_11[1] = unity_WorldToObject[1].xyz;
					  tmpvar_11[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((_glesNormal * tmpvar_11));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_10.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_10.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_10.z;
					  gl_Position = tmpvar_8;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = tmpvar_19;
					  xlv_TEXCOORD6 = tmpvar_6;
					  xlv_TEXCOORD7 = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
					  xlv_TEXCOORD8 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 tmpvar_57;
					  tmpvar_57 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_57;
					  lowp vec4 c_58;
					  lowp float diff_59;
					  mediump float tmpvar_60;
					  tmpvar_60 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_59 = tmpvar_60;
					  c_58.xyz = ((tmpvar_12 * tmpvar_57) * diff_59);
					  c_58.w = tmpvar_13;
					  highp float tmpvar_61;
					  tmpvar_61 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_58.xyz, vec3(tmpvar_61));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp float xlv_TEXCOORD7;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9.w = 1.0;
					  tmpvar_9.xyz = _glesVertex.xyz;
					  tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_WorldToObject[0].xyz;
					  tmpvar_11[1] = unity_WorldToObject[1].xyz;
					  tmpvar_11[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((_glesNormal * tmpvar_11));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_10.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_10.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_10.z;
					  gl_Position = tmpvar_8;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = tmpvar_19;
					  xlv_TEXCOORD6 = tmpvar_6;
					  xlv_TEXCOORD7 = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
					  xlv_TEXCOORD8 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 tmpvar_57;
					  tmpvar_57 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_57;
					  lowp vec4 c_58;
					  lowp float diff_59;
					  mediump float tmpvar_60;
					  tmpvar_60 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_59 = tmpvar_60;
					  c_58.xyz = ((tmpvar_12 * tmpvar_57) * diff_59);
					  c_58.w = tmpvar_13;
					  highp float tmpvar_61;
					  tmpvar_61 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_58.xyz, vec3(tmpvar_61));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp float xlv_TEXCOORD7;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9.w = 1.0;
					  tmpvar_9.xyz = _glesVertex.xyz;
					  tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_WorldToObject[0].xyz;
					  tmpvar_11[1] = unity_WorldToObject[1].xyz;
					  tmpvar_11[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((_glesNormal * tmpvar_11));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_10.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_10.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_10.z;
					  gl_Position = tmpvar_8;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = tmpvar_19;
					  xlv_TEXCOORD6 = tmpvar_6;
					  xlv_TEXCOORD7 = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
					  xlv_TEXCOORD8 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 tmpvar_57;
					  tmpvar_57 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_57;
					  lowp vec4 c_58;
					  lowp float diff_59;
					  mediump float tmpvar_60;
					  tmpvar_60 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_59 = tmpvar_60;
					  c_58.xyz = ((tmpvar_12 * tmpvar_57) * diff_59);
					  c_58.w = tmpvar_13;
					  highp float tmpvar_61;
					  tmpvar_61 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_58.xyz, vec3(tmpvar_61));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp float xlv_TEXCOORD7;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9.w = 1.0;
					  tmpvar_9.xyz = _glesVertex.xyz;
					  tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_WorldToObject[0].xyz;
					  tmpvar_11[1] = unity_WorldToObject[1].xyz;
					  tmpvar_11[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((_glesNormal * tmpvar_11));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_10.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_10.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_10.z;
					  mediump vec3 normal_20;
					  normal_20 = worldNormal_3;
					  mediump vec3 x1_21;
					  mediump vec4 tmpvar_22;
					  tmpvar_22 = (normal_20.xyzz * normal_20.yzzx);
					  x1_21.x = dot (unity_SHBr, tmpvar_22);
					  x1_21.y = dot (unity_SHBg, tmpvar_22);
					  x1_21.z = dot (unity_SHBb, tmpvar_22);
					  gl_Position = tmpvar_8;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = tmpvar_19;
					  xlv_TEXCOORD5 = (x1_21 + (unity_SHC.xyz * (
					    (normal_20.x * normal_20.x)
					   - 
					    (normal_20.y * normal_20.y)
					  )));
					  xlv_TEXCOORD6 = tmpvar_6;
					  xlv_TEXCOORD7 = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
					  xlv_TEXCOORD8 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 normalWorld_57;
					  normalWorld_57 = tmpvar_56;
					  mediump vec3 tmpvar_58;
					  tmpvar_58 = (tmpvar_2 * tmpvar_1);
					  mediump vec4 tmpvar_59;
					  tmpvar_59.w = 1.0;
					  tmpvar_59.xyz = normalWorld_57;
					  mediump vec3 x_60;
					  x_60.x = dot (unity_SHAr, tmpvar_59);
					  x_60.y = dot (unity_SHAg, tmpvar_59);
					  x_60.z = dot (unity_SHAb, tmpvar_59);
					  mediump vec3 tmpvar_61;
					  tmpvar_61 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5 + x_60)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_58;
					  lowp vec4 c_62;
					  lowp vec4 c_63;
					  lowp float diff_64;
					  mediump float tmpvar_65;
					  tmpvar_65 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_64 = tmpvar_65;
					  c_63.xyz = ((tmpvar_12 * tmpvar_58) * diff_64);
					  c_63.w = tmpvar_13;
					  c_62.w = c_63.w;
					  c_62.xyz = (c_63.xyz + (tmpvar_12 * tmpvar_61));
					  highp float tmpvar_66;
					  tmpvar_66 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_62.xyz, vec3(tmpvar_66));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp float xlv_TEXCOORD7;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9.w = 1.0;
					  tmpvar_9.xyz = _glesVertex.xyz;
					  tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_WorldToObject[0].xyz;
					  tmpvar_11[1] = unity_WorldToObject[1].xyz;
					  tmpvar_11[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((_glesNormal * tmpvar_11));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_10.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_10.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_10.z;
					  mediump vec3 normal_20;
					  normal_20 = worldNormal_3;
					  mediump vec3 x1_21;
					  mediump vec4 tmpvar_22;
					  tmpvar_22 = (normal_20.xyzz * normal_20.yzzx);
					  x1_21.x = dot (unity_SHBr, tmpvar_22);
					  x1_21.y = dot (unity_SHBg, tmpvar_22);
					  x1_21.z = dot (unity_SHBb, tmpvar_22);
					  gl_Position = tmpvar_8;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = tmpvar_19;
					  xlv_TEXCOORD5 = (x1_21 + (unity_SHC.xyz * (
					    (normal_20.x * normal_20.x)
					   - 
					    (normal_20.y * normal_20.y)
					  )));
					  xlv_TEXCOORD6 = tmpvar_6;
					  xlv_TEXCOORD7 = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
					  xlv_TEXCOORD8 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 normalWorld_57;
					  normalWorld_57 = tmpvar_56;
					  mediump vec3 tmpvar_58;
					  tmpvar_58 = (tmpvar_2 * tmpvar_1);
					  mediump vec4 tmpvar_59;
					  tmpvar_59.w = 1.0;
					  tmpvar_59.xyz = normalWorld_57;
					  mediump vec3 x_60;
					  x_60.x = dot (unity_SHAr, tmpvar_59);
					  x_60.y = dot (unity_SHAg, tmpvar_59);
					  x_60.z = dot (unity_SHAb, tmpvar_59);
					  mediump vec3 tmpvar_61;
					  tmpvar_61 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5 + x_60)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_58;
					  lowp vec4 c_62;
					  lowp vec4 c_63;
					  lowp float diff_64;
					  mediump float tmpvar_65;
					  tmpvar_65 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_64 = tmpvar_65;
					  c_63.xyz = ((tmpvar_12 * tmpvar_58) * diff_64);
					  c_63.w = tmpvar_13;
					  c_62.w = c_63.w;
					  c_62.xyz = (c_63.xyz + (tmpvar_12 * tmpvar_61));
					  highp float tmpvar_66;
					  tmpvar_66 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_62.xyz, vec3(tmpvar_66));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp float xlv_TEXCOORD7;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9.w = 1.0;
					  tmpvar_9.xyz = _glesVertex.xyz;
					  tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_WorldToObject[0].xyz;
					  tmpvar_11[1] = unity_WorldToObject[1].xyz;
					  tmpvar_11[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((_glesNormal * tmpvar_11));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_10.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_10.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_10.z;
					  mediump vec3 normal_20;
					  normal_20 = worldNormal_3;
					  mediump vec3 x1_21;
					  mediump vec4 tmpvar_22;
					  tmpvar_22 = (normal_20.xyzz * normal_20.yzzx);
					  x1_21.x = dot (unity_SHBr, tmpvar_22);
					  x1_21.y = dot (unity_SHBg, tmpvar_22);
					  x1_21.z = dot (unity_SHBb, tmpvar_22);
					  gl_Position = tmpvar_8;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = tmpvar_19;
					  xlv_TEXCOORD5 = (x1_21 + (unity_SHC.xyz * (
					    (normal_20.x * normal_20.x)
					   - 
					    (normal_20.y * normal_20.y)
					  )));
					  xlv_TEXCOORD6 = tmpvar_6;
					  xlv_TEXCOORD7 = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
					  xlv_TEXCOORD8 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 normalWorld_57;
					  normalWorld_57 = tmpvar_56;
					  mediump vec3 tmpvar_58;
					  tmpvar_58 = (tmpvar_2 * tmpvar_1);
					  mediump vec4 tmpvar_59;
					  tmpvar_59.w = 1.0;
					  tmpvar_59.xyz = normalWorld_57;
					  mediump vec3 x_60;
					  x_60.x = dot (unity_SHAr, tmpvar_59);
					  x_60.y = dot (unity_SHAg, tmpvar_59);
					  x_60.z = dot (unity_SHAb, tmpvar_59);
					  mediump vec3 tmpvar_61;
					  tmpvar_61 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5 + x_60)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_58;
					  lowp vec4 c_62;
					  lowp vec4 c_63;
					  lowp float diff_64;
					  mediump float tmpvar_65;
					  tmpvar_65 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_64 = tmpvar_65;
					  c_63.xyz = ((tmpvar_12 * tmpvar_58) * diff_64);
					  c_63.w = tmpvar_13;
					  c_62.w = c_63.w;
					  c_62.xyz = (c_63.xyz + (tmpvar_12 * tmpvar_61));
					  highp float tmpvar_66;
					  tmpvar_66 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_62.xyz, vec3(tmpvar_66));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_glesNormal * tmpvar_9));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_8.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_8.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_8.z;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					  xlv_TEXCOORD4 = tmpvar_17;
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp float diff_43;
					  mediump float tmpvar_44;
					  tmpvar_44 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_43 = tmpvar_44;
					  c_42.xyz = ((tmpvar_9 * tmpvar_1) * diff_43);
					  c_42.w = tmpvar_10;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_42.xyz, vec3(tmpvar_45));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_glesNormal * tmpvar_9));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_8.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_8.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_8.z;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					  xlv_TEXCOORD4 = tmpvar_17;
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp float diff_43;
					  mediump float tmpvar_44;
					  tmpvar_44 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_43 = tmpvar_44;
					  c_42.xyz = ((tmpvar_9 * tmpvar_1) * diff_43);
					  c_42.w = tmpvar_10;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_42.xyz, vec3(tmpvar_45));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_glesNormal * tmpvar_9));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_8.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_8.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_8.z;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					  xlv_TEXCOORD4 = tmpvar_17;
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp float diff_43;
					  mediump float tmpvar_44;
					  tmpvar_44 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_43 = tmpvar_44;
					  c_42.xyz = ((tmpvar_9 * tmpvar_1) * diff_43);
					  c_42.w = tmpvar_10;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_42.xyz, vec3(tmpvar_45));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  mediump vec3 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = _glesVertex.xyz;
					  tmpvar_7 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_8));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_WorldToObject[0].xyz;
					  tmpvar_10[1] = unity_WorldToObject[1].xyz;
					  tmpvar_10[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_glesNormal * tmpvar_10));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_9.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_9.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_9.z;
					  highp vec3 lightColor0_19;
					  lightColor0_19 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_20;
					  lightColor1_20 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_21;
					  lightColor2_21 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_22;
					  lightColor3_22 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_23;
					  lightAttenSq_23 = unity_4LightAtten0;
					  highp vec3 normal_24;
					  normal_24 = worldNormal_3;
					  highp vec3 col_25;
					  highp vec4 ndotl_26;
					  highp vec4 lengthSq_27;
					  highp vec4 tmpvar_28;
					  tmpvar_28 = (unity_4LightPosX0 - tmpvar_9.x);
					  highp vec4 tmpvar_29;
					  tmpvar_29 = (unity_4LightPosY0 - tmpvar_9.y);
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosZ0 - tmpvar_9.z);
					  lengthSq_27 = (tmpvar_28 * tmpvar_28);
					  lengthSq_27 = (lengthSq_27 + (tmpvar_29 * tmpvar_29));
					  lengthSq_27 = (lengthSq_27 + (tmpvar_30 * tmpvar_30));
					  highp vec4 tmpvar_31;
					  tmpvar_31 = max (lengthSq_27, vec4(1e-06, 1e-06, 1e-06, 1e-06));
					  lengthSq_27 = tmpvar_31;
					  ndotl_26 = (tmpvar_28 * normal_24.x);
					  ndotl_26 = (ndotl_26 + (tmpvar_29 * normal_24.y));
					  ndotl_26 = (ndotl_26 + (tmpvar_30 * normal_24.z));
					  highp vec4 tmpvar_32;
					  tmpvar_32 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_26 * inversesqrt(tmpvar_31)));
					  ndotl_26 = tmpvar_32;
					  highp vec4 tmpvar_33;
					  tmpvar_33 = (tmpvar_32 * (1.0/((1.0 + 
					    (tmpvar_31 * lightAttenSq_23)
					  ))));
					  col_25 = (lightColor0_19 * tmpvar_33.x);
					  col_25 = (col_25 + (lightColor1_20 * tmpvar_33.y));
					  col_25 = (col_25 + (lightColor2_21 * tmpvar_33.z));
					  col_25 = (col_25 + (lightColor3_22 * tmpvar_33.w));
					  tmpvar_6 = col_25;
					  mediump vec3 normal_34;
					  normal_34 = worldNormal_3;
					  mediump vec3 ambient_35;
					  mediump vec4 tmpvar_36;
					  tmpvar_36.w = 1.0;
					  tmpvar_36.xyz = normal_34;
					  mediump vec3 res_37;
					  mediump vec3 x_38;
					  x_38.x = dot (unity_SHAr, tmpvar_36);
					  x_38.y = dot (unity_SHAg, tmpvar_36);
					  x_38.z = dot (unity_SHAb, tmpvar_36);
					  mediump vec3 x1_39;
					  mediump vec4 tmpvar_40;
					  tmpvar_40 = (normal_34.xyzz * normal_34.yzzx);
					  x1_39.x = dot (unity_SHBr, tmpvar_40);
					  x1_39.y = dot (unity_SHBg, tmpvar_40);
					  x1_39.z = dot (unity_SHBb, tmpvar_40);
					  res_37 = (x_38 + (x1_39 + (unity_SHC.xyz * 
					    ((normal_34.x * normal_34.x) - (normal_34.y * normal_34.y))
					  )));
					  mediump vec3 tmpvar_41;
					  tmpvar_41 = max (((1.055 * 
					    pow (max (res_37, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_37 = tmpvar_41;
					  ambient_35 = (tmpvar_6 + max (vec3(0.0, 0.0, 0.0), tmpvar_41));
					  tmpvar_6 = ambient_35;
					  gl_Position = tmpvar_7;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_16;
					  xlv_TEXCOORD3 = tmpvar_17;
					  xlv_TEXCOORD4 = tmpvar_18;
					  xlv_TEXCOORD5 = ambient_35;
					  xlv_TEXCOORD7 = ((tmpvar_7.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_9 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_10;
					  c_42.w = c_43.w;
					  c_42.xyz = (c_43.xyz + (tmpvar_9 * xlv_TEXCOORD5));
					  highp float tmpvar_46;
					  tmpvar_46 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_42.xyz, vec3(tmpvar_46));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  mediump vec3 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = _glesVertex.xyz;
					  tmpvar_7 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_8));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_WorldToObject[0].xyz;
					  tmpvar_10[1] = unity_WorldToObject[1].xyz;
					  tmpvar_10[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_glesNormal * tmpvar_10));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_9.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_9.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_9.z;
					  highp vec3 lightColor0_19;
					  lightColor0_19 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_20;
					  lightColor1_20 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_21;
					  lightColor2_21 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_22;
					  lightColor3_22 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_23;
					  lightAttenSq_23 = unity_4LightAtten0;
					  highp vec3 normal_24;
					  normal_24 = worldNormal_3;
					  highp vec3 col_25;
					  highp vec4 ndotl_26;
					  highp vec4 lengthSq_27;
					  highp vec4 tmpvar_28;
					  tmpvar_28 = (unity_4LightPosX0 - tmpvar_9.x);
					  highp vec4 tmpvar_29;
					  tmpvar_29 = (unity_4LightPosY0 - tmpvar_9.y);
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosZ0 - tmpvar_9.z);
					  lengthSq_27 = (tmpvar_28 * tmpvar_28);
					  lengthSq_27 = (lengthSq_27 + (tmpvar_29 * tmpvar_29));
					  lengthSq_27 = (lengthSq_27 + (tmpvar_30 * tmpvar_30));
					  highp vec4 tmpvar_31;
					  tmpvar_31 = max (lengthSq_27, vec4(1e-06, 1e-06, 1e-06, 1e-06));
					  lengthSq_27 = tmpvar_31;
					  ndotl_26 = (tmpvar_28 * normal_24.x);
					  ndotl_26 = (ndotl_26 + (tmpvar_29 * normal_24.y));
					  ndotl_26 = (ndotl_26 + (tmpvar_30 * normal_24.z));
					  highp vec4 tmpvar_32;
					  tmpvar_32 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_26 * inversesqrt(tmpvar_31)));
					  ndotl_26 = tmpvar_32;
					  highp vec4 tmpvar_33;
					  tmpvar_33 = (tmpvar_32 * (1.0/((1.0 + 
					    (tmpvar_31 * lightAttenSq_23)
					  ))));
					  col_25 = (lightColor0_19 * tmpvar_33.x);
					  col_25 = (col_25 + (lightColor1_20 * tmpvar_33.y));
					  col_25 = (col_25 + (lightColor2_21 * tmpvar_33.z));
					  col_25 = (col_25 + (lightColor3_22 * tmpvar_33.w));
					  tmpvar_6 = col_25;
					  mediump vec3 normal_34;
					  normal_34 = worldNormal_3;
					  mediump vec3 ambient_35;
					  mediump vec4 tmpvar_36;
					  tmpvar_36.w = 1.0;
					  tmpvar_36.xyz = normal_34;
					  mediump vec3 res_37;
					  mediump vec3 x_38;
					  x_38.x = dot (unity_SHAr, tmpvar_36);
					  x_38.y = dot (unity_SHAg, tmpvar_36);
					  x_38.z = dot (unity_SHAb, tmpvar_36);
					  mediump vec3 x1_39;
					  mediump vec4 tmpvar_40;
					  tmpvar_40 = (normal_34.xyzz * normal_34.yzzx);
					  x1_39.x = dot (unity_SHBr, tmpvar_40);
					  x1_39.y = dot (unity_SHBg, tmpvar_40);
					  x1_39.z = dot (unity_SHBb, tmpvar_40);
					  res_37 = (x_38 + (x1_39 + (unity_SHC.xyz * 
					    ((normal_34.x * normal_34.x) - (normal_34.y * normal_34.y))
					  )));
					  mediump vec3 tmpvar_41;
					  tmpvar_41 = max (((1.055 * 
					    pow (max (res_37, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_37 = tmpvar_41;
					  ambient_35 = (tmpvar_6 + max (vec3(0.0, 0.0, 0.0), tmpvar_41));
					  tmpvar_6 = ambient_35;
					  gl_Position = tmpvar_7;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_16;
					  xlv_TEXCOORD3 = tmpvar_17;
					  xlv_TEXCOORD4 = tmpvar_18;
					  xlv_TEXCOORD5 = ambient_35;
					  xlv_TEXCOORD7 = ((tmpvar_7.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_9 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_10;
					  c_42.w = c_43.w;
					  c_42.xyz = (c_43.xyz + (tmpvar_9 * xlv_TEXCOORD5));
					  highp float tmpvar_46;
					  tmpvar_46 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_42.xyz, vec3(tmpvar_46));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  mediump vec3 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = _glesVertex.xyz;
					  tmpvar_7 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_8));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_WorldToObject[0].xyz;
					  tmpvar_10[1] = unity_WorldToObject[1].xyz;
					  tmpvar_10[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_glesNormal * tmpvar_10));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_9.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_9.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_9.z;
					  highp vec3 lightColor0_19;
					  lightColor0_19 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_20;
					  lightColor1_20 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_21;
					  lightColor2_21 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_22;
					  lightColor3_22 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_23;
					  lightAttenSq_23 = unity_4LightAtten0;
					  highp vec3 normal_24;
					  normal_24 = worldNormal_3;
					  highp vec3 col_25;
					  highp vec4 ndotl_26;
					  highp vec4 lengthSq_27;
					  highp vec4 tmpvar_28;
					  tmpvar_28 = (unity_4LightPosX0 - tmpvar_9.x);
					  highp vec4 tmpvar_29;
					  tmpvar_29 = (unity_4LightPosY0 - tmpvar_9.y);
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosZ0 - tmpvar_9.z);
					  lengthSq_27 = (tmpvar_28 * tmpvar_28);
					  lengthSq_27 = (lengthSq_27 + (tmpvar_29 * tmpvar_29));
					  lengthSq_27 = (lengthSq_27 + (tmpvar_30 * tmpvar_30));
					  highp vec4 tmpvar_31;
					  tmpvar_31 = max (lengthSq_27, vec4(1e-06, 1e-06, 1e-06, 1e-06));
					  lengthSq_27 = tmpvar_31;
					  ndotl_26 = (tmpvar_28 * normal_24.x);
					  ndotl_26 = (ndotl_26 + (tmpvar_29 * normal_24.y));
					  ndotl_26 = (ndotl_26 + (tmpvar_30 * normal_24.z));
					  highp vec4 tmpvar_32;
					  tmpvar_32 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_26 * inversesqrt(tmpvar_31)));
					  ndotl_26 = tmpvar_32;
					  highp vec4 tmpvar_33;
					  tmpvar_33 = (tmpvar_32 * (1.0/((1.0 + 
					    (tmpvar_31 * lightAttenSq_23)
					  ))));
					  col_25 = (lightColor0_19 * tmpvar_33.x);
					  col_25 = (col_25 + (lightColor1_20 * tmpvar_33.y));
					  col_25 = (col_25 + (lightColor2_21 * tmpvar_33.z));
					  col_25 = (col_25 + (lightColor3_22 * tmpvar_33.w));
					  tmpvar_6 = col_25;
					  mediump vec3 normal_34;
					  normal_34 = worldNormal_3;
					  mediump vec3 ambient_35;
					  mediump vec4 tmpvar_36;
					  tmpvar_36.w = 1.0;
					  tmpvar_36.xyz = normal_34;
					  mediump vec3 res_37;
					  mediump vec3 x_38;
					  x_38.x = dot (unity_SHAr, tmpvar_36);
					  x_38.y = dot (unity_SHAg, tmpvar_36);
					  x_38.z = dot (unity_SHAb, tmpvar_36);
					  mediump vec3 x1_39;
					  mediump vec4 tmpvar_40;
					  tmpvar_40 = (normal_34.xyzz * normal_34.yzzx);
					  x1_39.x = dot (unity_SHBr, tmpvar_40);
					  x1_39.y = dot (unity_SHBg, tmpvar_40);
					  x1_39.z = dot (unity_SHBb, tmpvar_40);
					  res_37 = (x_38 + (x1_39 + (unity_SHC.xyz * 
					    ((normal_34.x * normal_34.x) - (normal_34.y * normal_34.y))
					  )));
					  mediump vec3 tmpvar_41;
					  tmpvar_41 = max (((1.055 * 
					    pow (max (res_37, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_37 = tmpvar_41;
					  ambient_35 = (tmpvar_6 + max (vec3(0.0, 0.0, 0.0), tmpvar_41));
					  tmpvar_6 = ambient_35;
					  gl_Position = tmpvar_7;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_16;
					  xlv_TEXCOORD3 = tmpvar_17;
					  xlv_TEXCOORD4 = tmpvar_18;
					  xlv_TEXCOORD5 = ambient_35;
					  xlv_TEXCOORD7 = ((tmpvar_7.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  highp float tmpvar_38;
					  tmpvar_38 = dot (xlv_TEXCOORD2.xyz, tmpvar_36);
					  worldN_3.x = tmpvar_38;
					  highp float tmpvar_39;
					  tmpvar_39 = dot (xlv_TEXCOORD3.xyz, tmpvar_36);
					  worldN_3.y = tmpvar_39;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (xlv_TEXCOORD4.xyz, tmpvar_36);
					  worldN_3.z = tmpvar_40;
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_42;
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_9 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_10;
					  c_42.w = c_43.w;
					  c_42.xyz = (c_43.xyz + (tmpvar_9 * xlv_TEXCOORD5));
					  highp float tmpvar_46;
					  tmpvar_46 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = mix (unity_FogColor.xyz, c_42.xyz, vec3(tmpvar_46));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp float xlv_TEXCOORD7;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9.w = 1.0;
					  tmpvar_9.xyz = _glesVertex.xyz;
					  tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_WorldToObject[0].xyz;
					  tmpvar_11[1] = unity_WorldToObject[1].xyz;
					  tmpvar_11[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((_glesNormal * tmpvar_11));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_10.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_10.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_10.z;
					  gl_Position = tmpvar_8;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = tmpvar_19;
					  xlv_TEXCOORD6 = tmpvar_6;
					  xlv_TEXCOORD7 = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
					  xlv_TEXCOORD8 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 tmpvar_57;
					  tmpvar_57 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_57;
					  lowp vec4 c_58;
					  lowp float diff_59;
					  mediump float tmpvar_60;
					  tmpvar_60 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_59 = tmpvar_60;
					  c_58.xyz = ((tmpvar_12 * tmpvar_57) * diff_59);
					  c_58.w = tmpvar_13;
					  highp float tmpvar_61;
					  tmpvar_61 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_58.xyz, vec3(tmpvar_61));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp float xlv_TEXCOORD7;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9.w = 1.0;
					  tmpvar_9.xyz = _glesVertex.xyz;
					  tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_WorldToObject[0].xyz;
					  tmpvar_11[1] = unity_WorldToObject[1].xyz;
					  tmpvar_11[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((_glesNormal * tmpvar_11));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_10.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_10.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_10.z;
					  gl_Position = tmpvar_8;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = tmpvar_19;
					  xlv_TEXCOORD6 = tmpvar_6;
					  xlv_TEXCOORD7 = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
					  xlv_TEXCOORD8 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 tmpvar_57;
					  tmpvar_57 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_57;
					  lowp vec4 c_58;
					  lowp float diff_59;
					  mediump float tmpvar_60;
					  tmpvar_60 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_59 = tmpvar_60;
					  c_58.xyz = ((tmpvar_12 * tmpvar_57) * diff_59);
					  c_58.w = tmpvar_13;
					  highp float tmpvar_61;
					  tmpvar_61 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_58.xyz, vec3(tmpvar_61));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp float xlv_TEXCOORD7;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  highp vec4 tmpvar_9;
					  tmpvar_9.w = 1.0;
					  tmpvar_9.xyz = _glesVertex.xyz;
					  tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_10;
					  tmpvar_10 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_WorldToObject[0].xyz;
					  tmpvar_11[1] = unity_WorldToObject[1].xyz;
					  tmpvar_11[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((_glesNormal * tmpvar_11));
					  worldNormal_3 = tmpvar_12;
					  highp mat3 tmpvar_13;
					  tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_14;
					  tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_14;
					  highp float tmpvar_15;
					  tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_15;
					  lowp vec3 tmpvar_16;
					  tmpvar_16 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.x;
					  tmpvar_17.y = tmpvar_16.x;
					  tmpvar_17.z = worldNormal_3.x;
					  tmpvar_17.w = tmpvar_10.x;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.y;
					  tmpvar_18.y = tmpvar_16.y;
					  tmpvar_18.z = worldNormal_3.y;
					  tmpvar_18.w = tmpvar_10.y;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.z;
					  tmpvar_19.y = tmpvar_16.z;
					  tmpvar_19.z = worldNormal_3.z;
					  tmpvar_19.w = tmpvar_10.z;
					  gl_Position = tmpvar_8;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					  xlv_TEXCOORD4 = tmpvar_19;
					  xlv_TEXCOORD6 = tmpvar_6;
					  xlv_TEXCOORD7 = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
					  xlv_TEXCOORD8 = tmpvar_7;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 tmpvar_57;
					  tmpvar_57 = (tmpvar_2 * tmpvar_1);
					  tmpvar_2 = tmpvar_57;
					  lowp vec4 c_58;
					  lowp float diff_59;
					  mediump float tmpvar_60;
					  tmpvar_60 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_59 = tmpvar_60;
					  c_58.xyz = ((tmpvar_12 * tmpvar_57) * diff_59);
					  c_58.w = tmpvar_13;
					  highp float tmpvar_61;
					  tmpvar_61 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_58.xyz, vec3(tmpvar_61));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp float xlv_TEXCOORD7;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  mediump vec3 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  highp vec4 tmpvar_9;
					  highp vec4 tmpvar_10;
					  tmpvar_10.w = 1.0;
					  tmpvar_10.xyz = _glesVertex.xyz;
					  tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_11;
					  tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_WorldToObject[0].xyz;
					  tmpvar_12[1] = unity_WorldToObject[1].xyz;
					  tmpvar_12[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((_glesNormal * tmpvar_12));
					  worldNormal_3 = tmpvar_13;
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_15;
					  tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_16;
					  lowp vec3 tmpvar_17;
					  tmpvar_17 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.x;
					  tmpvar_18.y = tmpvar_17.x;
					  tmpvar_18.z = worldNormal_3.x;
					  tmpvar_18.w = tmpvar_11.x;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.y;
					  tmpvar_19.y = tmpvar_17.y;
					  tmpvar_19.z = worldNormal_3.y;
					  tmpvar_19.w = tmpvar_11.y;
					  highp vec4 tmpvar_20;
					  tmpvar_20.x = worldTangent_2.z;
					  tmpvar_20.y = tmpvar_17.z;
					  tmpvar_20.z = worldNormal_3.z;
					  tmpvar_20.w = tmpvar_11.z;
					  highp vec3 lightColor0_21;
					  lightColor0_21 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_22;
					  lightColor1_22 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_23;
					  lightColor2_23 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_24;
					  lightColor3_24 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_25;
					  lightAttenSq_25 = unity_4LightAtten0;
					  highp vec3 normal_26;
					  normal_26 = worldNormal_3;
					  highp vec3 col_27;
					  highp vec4 ndotl_28;
					  highp vec4 lengthSq_29;
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosX0 - tmpvar_11.x);
					  highp vec4 tmpvar_31;
					  tmpvar_31 = (unity_4LightPosY0 - tmpvar_11.y);
					  highp vec4 tmpvar_32;
					  tmpvar_32 = (unity_4LightPosZ0 - tmpvar_11.z);
					  lengthSq_29 = (tmpvar_30 * tmpvar_30);
					  lengthSq_29 = (lengthSq_29 + (tmpvar_31 * tmpvar_31));
					  lengthSq_29 = (lengthSq_29 + (tmpvar_32 * tmpvar_32));
					  highp vec4 tmpvar_33;
					  tmpvar_33 = max (lengthSq_29, vec4(1e-06, 1e-06, 1e-06, 1e-06));
					  lengthSq_29 = tmpvar_33;
					  ndotl_28 = (tmpvar_30 * normal_26.x);
					  ndotl_28 = (ndotl_28 + (tmpvar_31 * normal_26.y));
					  ndotl_28 = (ndotl_28 + (tmpvar_32 * normal_26.z));
					  highp vec4 tmpvar_34;
					  tmpvar_34 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_28 * inversesqrt(tmpvar_33)));
					  ndotl_28 = tmpvar_34;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = (tmpvar_34 * (1.0/((1.0 + 
					    (tmpvar_33 * lightAttenSq_25)
					  ))));
					  col_27 = (lightColor0_21 * tmpvar_35.x);
					  col_27 = (col_27 + (lightColor1_22 * tmpvar_35.y));
					  col_27 = (col_27 + (lightColor2_23 * tmpvar_35.z));
					  col_27 = (col_27 + (lightColor3_24 * tmpvar_35.w));
					  tmpvar_6 = col_27;
					  mediump vec3 normal_36;
					  normal_36 = worldNormal_3;
					  mediump vec3 ambient_37;
					  mediump vec3 x1_38;
					  mediump vec4 tmpvar_39;
					  tmpvar_39 = (normal_36.xyzz * normal_36.yzzx);
					  x1_38.x = dot (unity_SHBr, tmpvar_39);
					  x1_38.y = dot (unity_SHBg, tmpvar_39);
					  x1_38.z = dot (unity_SHBb, tmpvar_39);
					  ambient_37 = ((tmpvar_6 * (
					    (tmpvar_6 * ((tmpvar_6 * 0.305306) + 0.6821711))
					   + 0.01252288)) + (x1_38 + (unity_SHC.xyz * 
					    ((normal_36.x * normal_36.x) - (normal_36.y * normal_36.y))
					  )));
					  tmpvar_6 = ambient_37;
					  gl_Position = tmpvar_9;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = tmpvar_20;
					  xlv_TEXCOORD5 = ambient_37;
					  xlv_TEXCOORD6 = tmpvar_7;
					  xlv_TEXCOORD7 = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
					  xlv_TEXCOORD8 = tmpvar_8;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 normalWorld_57;
					  normalWorld_57 = tmpvar_56;
					  mediump vec3 tmpvar_58;
					  tmpvar_58 = (tmpvar_2 * tmpvar_1);
					  mediump vec4 tmpvar_59;
					  tmpvar_59.w = 1.0;
					  tmpvar_59.xyz = normalWorld_57;
					  mediump vec3 x_60;
					  x_60.x = dot (unity_SHAr, tmpvar_59);
					  x_60.y = dot (unity_SHAg, tmpvar_59);
					  x_60.z = dot (unity_SHAb, tmpvar_59);
					  mediump vec3 tmpvar_61;
					  tmpvar_61 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5 + x_60)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_58;
					  lowp vec4 c_62;
					  lowp vec4 c_63;
					  lowp float diff_64;
					  mediump float tmpvar_65;
					  tmpvar_65 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_64 = tmpvar_65;
					  c_63.xyz = ((tmpvar_12 * tmpvar_58) * diff_64);
					  c_63.w = tmpvar_13;
					  c_62.w = c_63.w;
					  c_62.xyz = (c_63.xyz + (tmpvar_12 * tmpvar_61));
					  highp float tmpvar_66;
					  tmpvar_66 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_62.xyz, vec3(tmpvar_66));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp float xlv_TEXCOORD7;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  mediump vec3 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  highp vec4 tmpvar_9;
					  highp vec4 tmpvar_10;
					  tmpvar_10.w = 1.0;
					  tmpvar_10.xyz = _glesVertex.xyz;
					  tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_11;
					  tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_WorldToObject[0].xyz;
					  tmpvar_12[1] = unity_WorldToObject[1].xyz;
					  tmpvar_12[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((_glesNormal * tmpvar_12));
					  worldNormal_3 = tmpvar_13;
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_15;
					  tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_16;
					  lowp vec3 tmpvar_17;
					  tmpvar_17 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.x;
					  tmpvar_18.y = tmpvar_17.x;
					  tmpvar_18.z = worldNormal_3.x;
					  tmpvar_18.w = tmpvar_11.x;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.y;
					  tmpvar_19.y = tmpvar_17.y;
					  tmpvar_19.z = worldNormal_3.y;
					  tmpvar_19.w = tmpvar_11.y;
					  highp vec4 tmpvar_20;
					  tmpvar_20.x = worldTangent_2.z;
					  tmpvar_20.y = tmpvar_17.z;
					  tmpvar_20.z = worldNormal_3.z;
					  tmpvar_20.w = tmpvar_11.z;
					  highp vec3 lightColor0_21;
					  lightColor0_21 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_22;
					  lightColor1_22 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_23;
					  lightColor2_23 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_24;
					  lightColor3_24 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_25;
					  lightAttenSq_25 = unity_4LightAtten0;
					  highp vec3 normal_26;
					  normal_26 = worldNormal_3;
					  highp vec3 col_27;
					  highp vec4 ndotl_28;
					  highp vec4 lengthSq_29;
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosX0 - tmpvar_11.x);
					  highp vec4 tmpvar_31;
					  tmpvar_31 = (unity_4LightPosY0 - tmpvar_11.y);
					  highp vec4 tmpvar_32;
					  tmpvar_32 = (unity_4LightPosZ0 - tmpvar_11.z);
					  lengthSq_29 = (tmpvar_30 * tmpvar_30);
					  lengthSq_29 = (lengthSq_29 + (tmpvar_31 * tmpvar_31));
					  lengthSq_29 = (lengthSq_29 + (tmpvar_32 * tmpvar_32));
					  highp vec4 tmpvar_33;
					  tmpvar_33 = max (lengthSq_29, vec4(1e-06, 1e-06, 1e-06, 1e-06));
					  lengthSq_29 = tmpvar_33;
					  ndotl_28 = (tmpvar_30 * normal_26.x);
					  ndotl_28 = (ndotl_28 + (tmpvar_31 * normal_26.y));
					  ndotl_28 = (ndotl_28 + (tmpvar_32 * normal_26.z));
					  highp vec4 tmpvar_34;
					  tmpvar_34 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_28 * inversesqrt(tmpvar_33)));
					  ndotl_28 = tmpvar_34;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = (tmpvar_34 * (1.0/((1.0 + 
					    (tmpvar_33 * lightAttenSq_25)
					  ))));
					  col_27 = (lightColor0_21 * tmpvar_35.x);
					  col_27 = (col_27 + (lightColor1_22 * tmpvar_35.y));
					  col_27 = (col_27 + (lightColor2_23 * tmpvar_35.z));
					  col_27 = (col_27 + (lightColor3_24 * tmpvar_35.w));
					  tmpvar_6 = col_27;
					  mediump vec3 normal_36;
					  normal_36 = worldNormal_3;
					  mediump vec3 ambient_37;
					  mediump vec3 x1_38;
					  mediump vec4 tmpvar_39;
					  tmpvar_39 = (normal_36.xyzz * normal_36.yzzx);
					  x1_38.x = dot (unity_SHBr, tmpvar_39);
					  x1_38.y = dot (unity_SHBg, tmpvar_39);
					  x1_38.z = dot (unity_SHBb, tmpvar_39);
					  ambient_37 = ((tmpvar_6 * (
					    (tmpvar_6 * ((tmpvar_6 * 0.305306) + 0.6821711))
					   + 0.01252288)) + (x1_38 + (unity_SHC.xyz * 
					    ((normal_36.x * normal_36.x) - (normal_36.y * normal_36.y))
					  )));
					  tmpvar_6 = ambient_37;
					  gl_Position = tmpvar_9;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = tmpvar_20;
					  xlv_TEXCOORD5 = ambient_37;
					  xlv_TEXCOORD6 = tmpvar_7;
					  xlv_TEXCOORD7 = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
					  xlv_TEXCOORD8 = tmpvar_8;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 normalWorld_57;
					  normalWorld_57 = tmpvar_56;
					  mediump vec3 tmpvar_58;
					  tmpvar_58 = (tmpvar_2 * tmpvar_1);
					  mediump vec4 tmpvar_59;
					  tmpvar_59.w = 1.0;
					  tmpvar_59.xyz = normalWorld_57;
					  mediump vec3 x_60;
					  x_60.x = dot (unity_SHAr, tmpvar_59);
					  x_60.y = dot (unity_SHAg, tmpvar_59);
					  x_60.z = dot (unity_SHAb, tmpvar_59);
					  mediump vec3 tmpvar_61;
					  tmpvar_61 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5 + x_60)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_58;
					  lowp vec4 c_62;
					  lowp vec4 c_63;
					  lowp float diff_64;
					  mediump float tmpvar_65;
					  tmpvar_65 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_64 = tmpvar_65;
					  c_63.xyz = ((tmpvar_12 * tmpvar_58) * diff_64);
					  c_63.w = tmpvar_13;
					  c_62.w = c_63.w;
					  c_62.xyz = (c_63.xyz + (tmpvar_12 * tmpvar_61));
					  highp float tmpvar_66;
					  tmpvar_66 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_62.xyz, vec3(tmpvar_66));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 unity_4LightPosX0;
					uniform highp vec4 unity_4LightPosY0;
					uniform highp vec4 unity_4LightPosZ0;
					uniform mediump vec4 unity_4LightAtten0;
					uniform mediump vec4 unity_LightColor[8];
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp vec4 xlv_TEXCOORD6;
					varying highp float xlv_TEXCOORD7;
					varying highp vec4 xlv_TEXCOORD8;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  mediump vec3 tmpvar_6;
					  highp vec4 tmpvar_7;
					  highp vec4 tmpvar_8;
					  highp vec4 tmpvar_9;
					  highp vec4 tmpvar_10;
					  tmpvar_10.w = 1.0;
					  tmpvar_10.xyz = _glesVertex.xyz;
					  tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_11;
					  tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_WorldToObject[0].xyz;
					  tmpvar_12[1] = unity_WorldToObject[1].xyz;
					  tmpvar_12[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((_glesNormal * tmpvar_12));
					  worldNormal_3 = tmpvar_13;
					  highp mat3 tmpvar_14;
					  tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_15;
					  tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_15;
					  highp float tmpvar_16;
					  tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_16;
					  lowp vec3 tmpvar_17;
					  tmpvar_17 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.x;
					  tmpvar_18.y = tmpvar_17.x;
					  tmpvar_18.z = worldNormal_3.x;
					  tmpvar_18.w = tmpvar_11.x;
					  highp vec4 tmpvar_19;
					  tmpvar_19.x = worldTangent_2.y;
					  tmpvar_19.y = tmpvar_17.y;
					  tmpvar_19.z = worldNormal_3.y;
					  tmpvar_19.w = tmpvar_11.y;
					  highp vec4 tmpvar_20;
					  tmpvar_20.x = worldTangent_2.z;
					  tmpvar_20.y = tmpvar_17.z;
					  tmpvar_20.z = worldNormal_3.z;
					  tmpvar_20.w = tmpvar_11.z;
					  highp vec3 lightColor0_21;
					  lightColor0_21 = unity_LightColor[0].xyz;
					  highp vec3 lightColor1_22;
					  lightColor1_22 = unity_LightColor[1].xyz;
					  highp vec3 lightColor2_23;
					  lightColor2_23 = unity_LightColor[2].xyz;
					  highp vec3 lightColor3_24;
					  lightColor3_24 = unity_LightColor[3].xyz;
					  highp vec4 lightAttenSq_25;
					  lightAttenSq_25 = unity_4LightAtten0;
					  highp vec3 normal_26;
					  normal_26 = worldNormal_3;
					  highp vec3 col_27;
					  highp vec4 ndotl_28;
					  highp vec4 lengthSq_29;
					  highp vec4 tmpvar_30;
					  tmpvar_30 = (unity_4LightPosX0 - tmpvar_11.x);
					  highp vec4 tmpvar_31;
					  tmpvar_31 = (unity_4LightPosY0 - tmpvar_11.y);
					  highp vec4 tmpvar_32;
					  tmpvar_32 = (unity_4LightPosZ0 - tmpvar_11.z);
					  lengthSq_29 = (tmpvar_30 * tmpvar_30);
					  lengthSq_29 = (lengthSq_29 + (tmpvar_31 * tmpvar_31));
					  lengthSq_29 = (lengthSq_29 + (tmpvar_32 * tmpvar_32));
					  highp vec4 tmpvar_33;
					  tmpvar_33 = max (lengthSq_29, vec4(1e-06, 1e-06, 1e-06, 1e-06));
					  lengthSq_29 = tmpvar_33;
					  ndotl_28 = (tmpvar_30 * normal_26.x);
					  ndotl_28 = (ndotl_28 + (tmpvar_31 * normal_26.y));
					  ndotl_28 = (ndotl_28 + (tmpvar_32 * normal_26.z));
					  highp vec4 tmpvar_34;
					  tmpvar_34 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_28 * inversesqrt(tmpvar_33)));
					  ndotl_28 = tmpvar_34;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = (tmpvar_34 * (1.0/((1.0 + 
					    (tmpvar_33 * lightAttenSq_25)
					  ))));
					  col_27 = (lightColor0_21 * tmpvar_35.x);
					  col_27 = (col_27 + (lightColor1_22 * tmpvar_35.y));
					  col_27 = (col_27 + (lightColor2_23 * tmpvar_35.z));
					  col_27 = (col_27 + (lightColor3_24 * tmpvar_35.w));
					  tmpvar_6 = col_27;
					  mediump vec3 normal_36;
					  normal_36 = worldNormal_3;
					  mediump vec3 ambient_37;
					  mediump vec3 x1_38;
					  mediump vec4 tmpvar_39;
					  tmpvar_39 = (normal_36.xyzz * normal_36.yzzx);
					  x1_38.x = dot (unity_SHBr, tmpvar_39);
					  x1_38.y = dot (unity_SHBg, tmpvar_39);
					  x1_38.z = dot (unity_SHBb, tmpvar_39);
					  ambient_37 = ((tmpvar_6 * (
					    (tmpvar_6 * ((tmpvar_6 * 0.305306) + 0.6821711))
					   + 0.01252288)) + (x1_38 + (unity_SHC.xyz * 
					    ((normal_36.x * normal_36.x) - (normal_36.y * normal_36.y))
					  )));
					  tmpvar_6 = ambient_37;
					  gl_Position = tmpvar_9;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_18;
					  xlv_TEXCOORD3 = tmpvar_19;
					  xlv_TEXCOORD4 = tmpvar_20;
					  xlv_TEXCOORD5 = ambient_37;
					  xlv_TEXCOORD6 = tmpvar_7;
					  xlv_TEXCOORD7 = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
					  xlv_TEXCOORD8 = tmpvar_8;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec3 _WorldSpaceCameraPos;
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform highp mat4 unity_WorldToShadow[4];
					uniform mediump vec4 _LightShadowData;
					uniform highp vec4 unity_ShadowFadeCenterAndType;
					uniform highp mat4 unity_MatrixV;
					uniform lowp vec4 unity_FogColor;
					uniform lowp vec4 _LightColor0;
					uniform highp sampler2D _ShadowMapTexture;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump float tmpvar_1;
					  mediump vec3 tmpvar_2;
					  mediump vec3 tmpvar_3;
					  lowp vec3 worldN_4;
					  lowp vec4 c_5;
					  lowp float atten_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10.x = xlv_TEXCOORD2.w;
					  tmpvar_10.y = xlv_TEXCOORD3.w;
					  tmpvar_10.z = xlv_TEXCOORD4.w;
					  mediump vec3 tmpvar_11;
					  tmpvar_11 = _WorldSpaceLightPos0.xyz;
					  lightDir_9 = tmpvar_11;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_12;
					  lowp float tmpvar_13;
					  tmpvar_12 = tmpvar_7;
					  tmpvar_13 = tmpvar_8;
					  highp vec4 norm2_14;
					  highp vec4 norm_15;
					  highp vec4 dest_16;
					  highp vec4 tex2_17;
					  highp vec4 tex_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_18 = tmpvar_19;
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_17 = tmpvar_20;
					  xlat_mutable_Opacity = (_Opacity * tex_18.w);
					  bvec3 tmpvar_21;
					  tmpvar_21 = lessThanEqual (tex2_17.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_22;
					  b_22 = ((2.0 * tex_18.xyz) * tex2_17.xyz);
					  highp vec3 c_23;
					  c_23 = (1.0 - ((2.0 * 
					    (1.0 - tex_18.xyz)
					  ) * (1.0 - tex2_17.xyz)));
					  highp float tmpvar_24;
					  if (tmpvar_21.x) {
					    tmpvar_24 = b_22.x;
					  } else {
					    tmpvar_24 = c_23.x;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_21.y) {
					    tmpvar_25 = b_22.y;
					  } else {
					    tmpvar_25 = c_23.y;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_21.z) {
					    tmpvar_26 = b_22.z;
					  } else {
					    tmpvar_26 = c_23.z;
					  };
					  highp vec3 tmpvar_27;
					  tmpvar_27.x = tmpvar_24;
					  tmpvar_27.y = tmpvar_25;
					  tmpvar_27.z = tmpvar_26;
					  dest_16.xyz = mix (tex2_17.xyz, tmpvar_27, vec3(xlat_mutable_Opacity));
					  dest_16.xyz = (dest_16.xyz * _Color.xyz);
					  tmpvar_12 = dest_16.xyz;
					  tmpvar_13 = (tex2_17.w * _Color.w);
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_15 = tmpvar_28;
					  lowp vec4 tmpvar_29;
					  tmpvar_29 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_14 = tmpvar_29;
					  bvec4 tmpvar_30;
					  tmpvar_30 = lessThanEqual (norm2_14, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_31;
					  b_31 = ((2.0 * norm_15) * norm2_14);
					  highp vec4 c_32;
					  c_32 = (1.0 - ((2.0 * 
					    (1.0 - norm_15)
					  ) * (1.0 - norm2_14)));
					  highp float tmpvar_33;
					  if (tmpvar_30.x) {
					    tmpvar_33 = b_31.x;
					  } else {
					    tmpvar_33 = c_32.x;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_30.y) {
					    tmpvar_34 = b_31.y;
					  } else {
					    tmpvar_34 = c_32.y;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_30.z) {
					    tmpvar_35 = b_31.z;
					  } else {
					    tmpvar_35 = c_32.z;
					  };
					  highp float tmpvar_36;
					  if (tmpvar_30.w) {
					    tmpvar_36 = b_31.w;
					  } else {
					    tmpvar_36 = c_32.w;
					  };
					  highp vec4 tmpvar_37;
					  tmpvar_37.x = tmpvar_33;
					  tmpvar_37.y = tmpvar_34;
					  tmpvar_37.z = tmpvar_35;
					  tmpvar_37.w = tmpvar_36;
					  highp vec4 tmpvar_38;
					  tmpvar_38 = mix (norm2_14, tmpvar_37, vec4(xlat_mutable_Opacity));
					  dest_16 = tmpvar_38;
					  lowp vec3 tmpvar_39;
					  lowp vec4 packednormal_40;
					  packednormal_40 = tmpvar_38;
					  tmpvar_39 = ((packednormal_40.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_12;
					  tmpvar_8 = tmpvar_13;
					  mediump float realtimeShadowAttenuation_41;
					  highp vec4 v_42;
					  v_42.x = unity_MatrixV[0].z;
					  v_42.y = unity_MatrixV[1].z;
					  v_42.z = unity_MatrixV[2].z;
					  v_42.w = unity_MatrixV[3].z;
					  highp vec3 tmpvar_43;
					  tmpvar_43 = (tmpvar_10 - unity_ShadowFadeCenterAndType.xyz);
					  mediump float tmpvar_44;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (((
					    mix (dot ((_WorldSpaceCameraPos - tmpvar_10), v_42.xyz), sqrt(dot (tmpvar_43, tmpvar_43)), unity_ShadowFadeCenterAndType.w)
					   * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
					  tmpvar_44 = tmpvar_45;
					  highp vec4 tmpvar_46;
					  tmpvar_46.w = 1.0;
					  tmpvar_46.xyz = tmpvar_10;
					  lowp float tmpvar_47;
					  highp vec4 shadowCoord_48;
					  shadowCoord_48 = (unity_WorldToShadow[0] * tmpvar_46);
					  highp float lightShadowDataX_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = _LightShadowData.x;
					  lightShadowDataX_49 = tmpvar_50;
					  highp float tmpvar_51;
					  tmpvar_51 = max (float((texture2D (_ShadowMapTexture, shadowCoord_48.xy).x > shadowCoord_48.z)), lightShadowDataX_49);
					  tmpvar_47 = tmpvar_51;
					  realtimeShadowAttenuation_41 = tmpvar_47;
					  mediump float tmpvar_52;
					  tmpvar_52 = clamp ((realtimeShadowAttenuation_41 + tmpvar_44), 0.0, 1.0);
					  atten_6 = tmpvar_52;
					  highp float tmpvar_53;
					  tmpvar_53 = dot (xlv_TEXCOORD2.xyz, tmpvar_39);
					  worldN_4.x = tmpvar_53;
					  highp float tmpvar_54;
					  tmpvar_54 = dot (xlv_TEXCOORD3.xyz, tmpvar_39);
					  worldN_4.y = tmpvar_54;
					  highp float tmpvar_55;
					  tmpvar_55 = dot (xlv_TEXCOORD4.xyz, tmpvar_39);
					  worldN_4.z = tmpvar_55;
					  lowp vec3 tmpvar_56;
					  tmpvar_56 = normalize(worldN_4);
					  worldN_4 = tmpvar_56;
					  tmpvar_2 = _LightColor0.xyz;
					  tmpvar_3 = lightDir_9;
					  tmpvar_1 = atten_6;
					  mediump vec3 normalWorld_57;
					  normalWorld_57 = tmpvar_56;
					  mediump vec3 tmpvar_58;
					  tmpvar_58 = (tmpvar_2 * tmpvar_1);
					  mediump vec4 tmpvar_59;
					  tmpvar_59.w = 1.0;
					  tmpvar_59.xyz = normalWorld_57;
					  mediump vec3 x_60;
					  x_60.x = dot (unity_SHAr, tmpvar_59);
					  x_60.y = dot (unity_SHAg, tmpvar_59);
					  x_60.z = dot (unity_SHAb, tmpvar_59);
					  mediump vec3 tmpvar_61;
					  tmpvar_61 = max (((1.055 * 
					    pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD5 + x_60)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  tmpvar_2 = tmpvar_58;
					  lowp vec4 c_62;
					  lowp vec4 c_63;
					  lowp float diff_64;
					  mediump float tmpvar_65;
					  tmpvar_65 = max (0.0, dot (tmpvar_56, tmpvar_3));
					  diff_64 = tmpvar_65;
					  c_63.xyz = ((tmpvar_12 * tmpvar_58) * diff_64);
					  c_63.w = tmpvar_13;
					  c_62.w = c_63.w;
					  c_62.xyz = (c_63.xyz + (tmpvar_12 * tmpvar_61));
					  highp float tmpvar_66;
					  tmpvar_66 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_5.xyz = mix (unity_FogColor.xyz, c_62.xyz, vec3(tmpvar_66));
					  c_5.w = 1.0;
					  gl_FragData[0] = c_5;
					}
					
					
					#endif"
				}
			}
			Program "fp" {
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" }
					"!!GLES"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!GLES"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
					"!!GLES"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
					"!!GLES"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
					"!!GLES"
				}
			}
		}
		Pass {
			Name "FORWARD"
			LOD 400
			Tags { "LIGHTMODE" = "FORWARDADD" "RenderType" = "Opaque" }
			Blend One One, One One
			ZWrite Off
			GpuProgramID 124822
			Program "vp" {
				SubProgram "gles hw_tier00 " {
					Keywords { "POINT" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_7;
					  tmpvar_7[0] = unity_WorldToObject[0].xyz;
					  tmpvar_7[1] = unity_WorldToObject[1].xyz;
					  tmpvar_7[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
					  worldNormal_3 = tmpvar_8;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_11;
					  lowp vec3 tmpvar_12;
					  tmpvar_12 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_13;
					  tmpvar_13.x = worldTangent_2.x;
					  tmpvar_13.y = tmpvar_12.x;
					  tmpvar_13.z = worldNormal_3.x;
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.y;
					  tmpvar_14.y = tmpvar_12.y;
					  tmpvar_14.z = worldNormal_3.y;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.z;
					  tmpvar_15.y = tmpvar_12.z;
					  tmpvar_15.z = worldNormal_3.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_13;
					  xlv_TEXCOORD3 = tmpvar_14;
					  xlv_TEXCOORD4 = tmpvar_15;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  highp vec3 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp float tmpvar_7;
					  lowp vec3 lightDir_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD5));
					  lightDir_8 = tmpvar_9;
					  tmpvar_6 = vec3(0.0, 0.0, 0.0);
					  tmpvar_7 = 0.0;
					  lowp vec3 tmpvar_10;
					  lowp float tmpvar_11;
					  tmpvar_10 = tmpvar_6;
					  tmpvar_11 = tmpvar_7;
					  highp vec4 norm2_12;
					  highp vec4 norm_13;
					  highp vec4 dest_14;
					  highp vec4 tex2_15;
					  highp vec4 tex_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_16 = tmpvar_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_15 = tmpvar_18;
					  xlat_mutable_Opacity = (_Opacity * tex_16.w);
					  bvec3 tmpvar_19;
					  tmpvar_19 = lessThanEqual (tex2_15.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_20;
					  b_20 = ((2.0 * tex_16.xyz) * tex2_15.xyz);
					  highp vec3 c_21;
					  c_21 = (1.0 - ((2.0 * 
					    (1.0 - tex_16.xyz)
					  ) * (1.0 - tex2_15.xyz)));
					  highp float tmpvar_22;
					  if (tmpvar_19.x) {
					    tmpvar_22 = b_20.x;
					  } else {
					    tmpvar_22 = c_21.x;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_19.y) {
					    tmpvar_23 = b_20.y;
					  } else {
					    tmpvar_23 = c_21.y;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_19.z) {
					    tmpvar_24 = b_20.z;
					  } else {
					    tmpvar_24 = c_21.z;
					  };
					  highp vec3 tmpvar_25;
					  tmpvar_25.x = tmpvar_22;
					  tmpvar_25.y = tmpvar_23;
					  tmpvar_25.z = tmpvar_24;
					  dest_14.xyz = mix (tex2_15.xyz, tmpvar_25, vec3(xlat_mutable_Opacity));
					  dest_14.xyz = (dest_14.xyz * _Color.xyz);
					  tmpvar_10 = dest_14.xyz;
					  tmpvar_11 = (tex2_15.w * _Color.w);
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_13 = tmpvar_26;
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_12 = tmpvar_27;
					  bvec4 tmpvar_28;
					  tmpvar_28 = lessThanEqual (norm2_12, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_29;
					  b_29 = ((2.0 * norm_13) * norm2_12);
					  highp vec4 c_30;
					  c_30 = (1.0 - ((2.0 * 
					    (1.0 - norm_13)
					  ) * (1.0 - norm2_12)));
					  highp float tmpvar_31;
					  if (tmpvar_28.x) {
					    tmpvar_31 = b_29.x;
					  } else {
					    tmpvar_31 = c_30.x;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_28.y) {
					    tmpvar_32 = b_29.y;
					  } else {
					    tmpvar_32 = c_30.y;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_28.z) {
					    tmpvar_33 = b_29.z;
					  } else {
					    tmpvar_33 = c_30.z;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_28.w) {
					    tmpvar_34 = b_29.w;
					  } else {
					    tmpvar_34 = c_30.w;
					  };
					  highp vec4 tmpvar_35;
					  tmpvar_35.x = tmpvar_31;
					  tmpvar_35.y = tmpvar_32;
					  tmpvar_35.z = tmpvar_33;
					  tmpvar_35.w = tmpvar_34;
					  highp vec4 tmpvar_36;
					  tmpvar_36 = mix (norm2_12, tmpvar_35, vec4(xlat_mutable_Opacity));
					  dest_14 = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  lowp vec4 packednormal_38;
					  packednormal_38 = tmpvar_36;
					  tmpvar_37 = ((packednormal_38.xyz * 2.0) - 1.0);
					  tmpvar_6 = tmpvar_10;
					  tmpvar_7 = tmpvar_11;
					  highp vec4 tmpvar_39;
					  tmpvar_39.w = 1.0;
					  tmpvar_39.xyz = xlv_TEXCOORD5;
					  lightCoord_5 = (unity_WorldToLight * tmpvar_39).xyz;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (lightCoord_5, lightCoord_5);
					  lowp float tmpvar_41;
					  tmpvar_41 = texture2D (_LightTexture0, vec2(tmpvar_40)).w;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_37);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_37);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_37);
					  lowp vec3 tmpvar_42;
					  tmpvar_42 = normalize(worldN_3);
					  worldN_3 = tmpvar_42;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * tmpvar_41);
					  lowp vec4 c_43;
					  lowp vec4 c_44;
					  lowp float diff_45;
					  mediump float tmpvar_46;
					  tmpvar_46 = max (0.0, dot (tmpvar_42, tmpvar_2));
					  diff_45 = tmpvar_46;
					  c_44.xyz = ((tmpvar_10 * tmpvar_1) * diff_45);
					  c_44.w = tmpvar_11;
					  c_43.w = c_44.w;
					  c_43.xyz = c_44.xyz;
					  c_4.xyz = c_43.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "POINT" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_7;
					  tmpvar_7[0] = unity_WorldToObject[0].xyz;
					  tmpvar_7[1] = unity_WorldToObject[1].xyz;
					  tmpvar_7[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
					  worldNormal_3 = tmpvar_8;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_11;
					  lowp vec3 tmpvar_12;
					  tmpvar_12 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_13;
					  tmpvar_13.x = worldTangent_2.x;
					  tmpvar_13.y = tmpvar_12.x;
					  tmpvar_13.z = worldNormal_3.x;
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.y;
					  tmpvar_14.y = tmpvar_12.y;
					  tmpvar_14.z = worldNormal_3.y;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.z;
					  tmpvar_15.y = tmpvar_12.z;
					  tmpvar_15.z = worldNormal_3.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_13;
					  xlv_TEXCOORD3 = tmpvar_14;
					  xlv_TEXCOORD4 = tmpvar_15;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  highp vec3 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp float tmpvar_7;
					  lowp vec3 lightDir_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD5));
					  lightDir_8 = tmpvar_9;
					  tmpvar_6 = vec3(0.0, 0.0, 0.0);
					  tmpvar_7 = 0.0;
					  lowp vec3 tmpvar_10;
					  lowp float tmpvar_11;
					  tmpvar_10 = tmpvar_6;
					  tmpvar_11 = tmpvar_7;
					  highp vec4 norm2_12;
					  highp vec4 norm_13;
					  highp vec4 dest_14;
					  highp vec4 tex2_15;
					  highp vec4 tex_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_16 = tmpvar_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_15 = tmpvar_18;
					  xlat_mutable_Opacity = (_Opacity * tex_16.w);
					  bvec3 tmpvar_19;
					  tmpvar_19 = lessThanEqual (tex2_15.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_20;
					  b_20 = ((2.0 * tex_16.xyz) * tex2_15.xyz);
					  highp vec3 c_21;
					  c_21 = (1.0 - ((2.0 * 
					    (1.0 - tex_16.xyz)
					  ) * (1.0 - tex2_15.xyz)));
					  highp float tmpvar_22;
					  if (tmpvar_19.x) {
					    tmpvar_22 = b_20.x;
					  } else {
					    tmpvar_22 = c_21.x;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_19.y) {
					    tmpvar_23 = b_20.y;
					  } else {
					    tmpvar_23 = c_21.y;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_19.z) {
					    tmpvar_24 = b_20.z;
					  } else {
					    tmpvar_24 = c_21.z;
					  };
					  highp vec3 tmpvar_25;
					  tmpvar_25.x = tmpvar_22;
					  tmpvar_25.y = tmpvar_23;
					  tmpvar_25.z = tmpvar_24;
					  dest_14.xyz = mix (tex2_15.xyz, tmpvar_25, vec3(xlat_mutable_Opacity));
					  dest_14.xyz = (dest_14.xyz * _Color.xyz);
					  tmpvar_10 = dest_14.xyz;
					  tmpvar_11 = (tex2_15.w * _Color.w);
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_13 = tmpvar_26;
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_12 = tmpvar_27;
					  bvec4 tmpvar_28;
					  tmpvar_28 = lessThanEqual (norm2_12, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_29;
					  b_29 = ((2.0 * norm_13) * norm2_12);
					  highp vec4 c_30;
					  c_30 = (1.0 - ((2.0 * 
					    (1.0 - norm_13)
					  ) * (1.0 - norm2_12)));
					  highp float tmpvar_31;
					  if (tmpvar_28.x) {
					    tmpvar_31 = b_29.x;
					  } else {
					    tmpvar_31 = c_30.x;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_28.y) {
					    tmpvar_32 = b_29.y;
					  } else {
					    tmpvar_32 = c_30.y;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_28.z) {
					    tmpvar_33 = b_29.z;
					  } else {
					    tmpvar_33 = c_30.z;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_28.w) {
					    tmpvar_34 = b_29.w;
					  } else {
					    tmpvar_34 = c_30.w;
					  };
					  highp vec4 tmpvar_35;
					  tmpvar_35.x = tmpvar_31;
					  tmpvar_35.y = tmpvar_32;
					  tmpvar_35.z = tmpvar_33;
					  tmpvar_35.w = tmpvar_34;
					  highp vec4 tmpvar_36;
					  tmpvar_36 = mix (norm2_12, tmpvar_35, vec4(xlat_mutable_Opacity));
					  dest_14 = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  lowp vec4 packednormal_38;
					  packednormal_38 = tmpvar_36;
					  tmpvar_37 = ((packednormal_38.xyz * 2.0) - 1.0);
					  tmpvar_6 = tmpvar_10;
					  tmpvar_7 = tmpvar_11;
					  highp vec4 tmpvar_39;
					  tmpvar_39.w = 1.0;
					  tmpvar_39.xyz = xlv_TEXCOORD5;
					  lightCoord_5 = (unity_WorldToLight * tmpvar_39).xyz;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (lightCoord_5, lightCoord_5);
					  lowp float tmpvar_41;
					  tmpvar_41 = texture2D (_LightTexture0, vec2(tmpvar_40)).w;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_37);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_37);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_37);
					  lowp vec3 tmpvar_42;
					  tmpvar_42 = normalize(worldN_3);
					  worldN_3 = tmpvar_42;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * tmpvar_41);
					  lowp vec4 c_43;
					  lowp vec4 c_44;
					  lowp float diff_45;
					  mediump float tmpvar_46;
					  tmpvar_46 = max (0.0, dot (tmpvar_42, tmpvar_2));
					  diff_45 = tmpvar_46;
					  c_44.xyz = ((tmpvar_10 * tmpvar_1) * diff_45);
					  c_44.w = tmpvar_11;
					  c_43.w = c_44.w;
					  c_43.xyz = c_44.xyz;
					  c_4.xyz = c_43.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "POINT" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_7;
					  tmpvar_7[0] = unity_WorldToObject[0].xyz;
					  tmpvar_7[1] = unity_WorldToObject[1].xyz;
					  tmpvar_7[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
					  worldNormal_3 = tmpvar_8;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_11;
					  lowp vec3 tmpvar_12;
					  tmpvar_12 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_13;
					  tmpvar_13.x = worldTangent_2.x;
					  tmpvar_13.y = tmpvar_12.x;
					  tmpvar_13.z = worldNormal_3.x;
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.y;
					  tmpvar_14.y = tmpvar_12.y;
					  tmpvar_14.z = worldNormal_3.y;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.z;
					  tmpvar_15.y = tmpvar_12.z;
					  tmpvar_15.z = worldNormal_3.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_13;
					  xlv_TEXCOORD3 = tmpvar_14;
					  xlv_TEXCOORD4 = tmpvar_15;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  highp vec3 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp float tmpvar_7;
					  lowp vec3 lightDir_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD5));
					  lightDir_8 = tmpvar_9;
					  tmpvar_6 = vec3(0.0, 0.0, 0.0);
					  tmpvar_7 = 0.0;
					  lowp vec3 tmpvar_10;
					  lowp float tmpvar_11;
					  tmpvar_10 = tmpvar_6;
					  tmpvar_11 = tmpvar_7;
					  highp vec4 norm2_12;
					  highp vec4 norm_13;
					  highp vec4 dest_14;
					  highp vec4 tex2_15;
					  highp vec4 tex_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_16 = tmpvar_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_15 = tmpvar_18;
					  xlat_mutable_Opacity = (_Opacity * tex_16.w);
					  bvec3 tmpvar_19;
					  tmpvar_19 = lessThanEqual (tex2_15.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_20;
					  b_20 = ((2.0 * tex_16.xyz) * tex2_15.xyz);
					  highp vec3 c_21;
					  c_21 = (1.0 - ((2.0 * 
					    (1.0 - tex_16.xyz)
					  ) * (1.0 - tex2_15.xyz)));
					  highp float tmpvar_22;
					  if (tmpvar_19.x) {
					    tmpvar_22 = b_20.x;
					  } else {
					    tmpvar_22 = c_21.x;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_19.y) {
					    tmpvar_23 = b_20.y;
					  } else {
					    tmpvar_23 = c_21.y;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_19.z) {
					    tmpvar_24 = b_20.z;
					  } else {
					    tmpvar_24 = c_21.z;
					  };
					  highp vec3 tmpvar_25;
					  tmpvar_25.x = tmpvar_22;
					  tmpvar_25.y = tmpvar_23;
					  tmpvar_25.z = tmpvar_24;
					  dest_14.xyz = mix (tex2_15.xyz, tmpvar_25, vec3(xlat_mutable_Opacity));
					  dest_14.xyz = (dest_14.xyz * _Color.xyz);
					  tmpvar_10 = dest_14.xyz;
					  tmpvar_11 = (tex2_15.w * _Color.w);
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_13 = tmpvar_26;
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_12 = tmpvar_27;
					  bvec4 tmpvar_28;
					  tmpvar_28 = lessThanEqual (norm2_12, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_29;
					  b_29 = ((2.0 * norm_13) * norm2_12);
					  highp vec4 c_30;
					  c_30 = (1.0 - ((2.0 * 
					    (1.0 - norm_13)
					  ) * (1.0 - norm2_12)));
					  highp float tmpvar_31;
					  if (tmpvar_28.x) {
					    tmpvar_31 = b_29.x;
					  } else {
					    tmpvar_31 = c_30.x;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_28.y) {
					    tmpvar_32 = b_29.y;
					  } else {
					    tmpvar_32 = c_30.y;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_28.z) {
					    tmpvar_33 = b_29.z;
					  } else {
					    tmpvar_33 = c_30.z;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_28.w) {
					    tmpvar_34 = b_29.w;
					  } else {
					    tmpvar_34 = c_30.w;
					  };
					  highp vec4 tmpvar_35;
					  tmpvar_35.x = tmpvar_31;
					  tmpvar_35.y = tmpvar_32;
					  tmpvar_35.z = tmpvar_33;
					  tmpvar_35.w = tmpvar_34;
					  highp vec4 tmpvar_36;
					  tmpvar_36 = mix (norm2_12, tmpvar_35, vec4(xlat_mutable_Opacity));
					  dest_14 = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  lowp vec4 packednormal_38;
					  packednormal_38 = tmpvar_36;
					  tmpvar_37 = ((packednormal_38.xyz * 2.0) - 1.0);
					  tmpvar_6 = tmpvar_10;
					  tmpvar_7 = tmpvar_11;
					  highp vec4 tmpvar_39;
					  tmpvar_39.w = 1.0;
					  tmpvar_39.xyz = xlv_TEXCOORD5;
					  lightCoord_5 = (unity_WorldToLight * tmpvar_39).xyz;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (lightCoord_5, lightCoord_5);
					  lowp float tmpvar_41;
					  tmpvar_41 = texture2D (_LightTexture0, vec2(tmpvar_40)).w;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_37);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_37);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_37);
					  lowp vec3 tmpvar_42;
					  tmpvar_42 = normalize(worldN_3);
					  worldN_3 = tmpvar_42;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * tmpvar_41);
					  lowp vec4 c_43;
					  lowp vec4 c_44;
					  lowp float diff_45;
					  mediump float tmpvar_46;
					  tmpvar_46 = max (0.0, dot (tmpvar_42, tmpvar_2));
					  diff_45 = tmpvar_46;
					  c_44.xyz = ((tmpvar_10 * tmpvar_1) * diff_45);
					  c_44.w = tmpvar_11;
					  c_43.w = c_44.w;
					  c_43.xyz = c_44.xyz;
					  c_4.xyz = c_43.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_7;
					  tmpvar_7[0] = unity_WorldToObject[0].xyz;
					  tmpvar_7[1] = unity_WorldToObject[1].xyz;
					  tmpvar_7[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
					  worldNormal_3 = tmpvar_8;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_11;
					  lowp vec3 tmpvar_12;
					  tmpvar_12 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_13;
					  tmpvar_13.x = worldTangent_2.x;
					  tmpvar_13.y = tmpvar_12.x;
					  tmpvar_13.z = worldNormal_3.x;
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.y;
					  tmpvar_14.y = tmpvar_12.y;
					  tmpvar_14.z = worldNormal_3.y;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.z;
					  tmpvar_15.y = tmpvar_12.z;
					  tmpvar_15.z = worldNormal_3.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_13;
					  xlv_TEXCOORD3 = tmpvar_14;
					  xlv_TEXCOORD4 = tmpvar_15;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_36);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_36);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_36);
					  lowp vec3 tmpvar_38;
					  tmpvar_38 = normalize(worldN_3);
					  worldN_3 = tmpvar_38;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_39;
					  lowp vec4 c_40;
					  lowp float diff_41;
					  mediump float tmpvar_42;
					  tmpvar_42 = max (0.0, dot (tmpvar_38, tmpvar_2));
					  diff_41 = tmpvar_42;
					  c_40.xyz = ((tmpvar_9 * tmpvar_1) * diff_41);
					  c_40.w = tmpvar_10;
					  c_39.w = c_40.w;
					  c_39.xyz = c_40.xyz;
					  c_4.xyz = c_39.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_7;
					  tmpvar_7[0] = unity_WorldToObject[0].xyz;
					  tmpvar_7[1] = unity_WorldToObject[1].xyz;
					  tmpvar_7[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
					  worldNormal_3 = tmpvar_8;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_11;
					  lowp vec3 tmpvar_12;
					  tmpvar_12 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_13;
					  tmpvar_13.x = worldTangent_2.x;
					  tmpvar_13.y = tmpvar_12.x;
					  tmpvar_13.z = worldNormal_3.x;
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.y;
					  tmpvar_14.y = tmpvar_12.y;
					  tmpvar_14.z = worldNormal_3.y;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.z;
					  tmpvar_15.y = tmpvar_12.z;
					  tmpvar_15.z = worldNormal_3.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_13;
					  xlv_TEXCOORD3 = tmpvar_14;
					  xlv_TEXCOORD4 = tmpvar_15;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_36);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_36);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_36);
					  lowp vec3 tmpvar_38;
					  tmpvar_38 = normalize(worldN_3);
					  worldN_3 = tmpvar_38;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_39;
					  lowp vec4 c_40;
					  lowp float diff_41;
					  mediump float tmpvar_42;
					  tmpvar_42 = max (0.0, dot (tmpvar_38, tmpvar_2));
					  diff_41 = tmpvar_42;
					  c_40.xyz = ((tmpvar_9 * tmpvar_1) * diff_41);
					  c_40.w = tmpvar_10;
					  c_39.w = c_40.w;
					  c_39.xyz = c_40.xyz;
					  c_4.xyz = c_39.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_7;
					  tmpvar_7[0] = unity_WorldToObject[0].xyz;
					  tmpvar_7[1] = unity_WorldToObject[1].xyz;
					  tmpvar_7[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
					  worldNormal_3 = tmpvar_8;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_11;
					  lowp vec3 tmpvar_12;
					  tmpvar_12 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_13;
					  tmpvar_13.x = worldTangent_2.x;
					  tmpvar_13.y = tmpvar_12.x;
					  tmpvar_13.z = worldNormal_3.x;
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.y;
					  tmpvar_14.y = tmpvar_12.y;
					  tmpvar_14.z = worldNormal_3.y;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.z;
					  tmpvar_15.y = tmpvar_12.z;
					  tmpvar_15.z = worldNormal_3.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_13;
					  xlv_TEXCOORD3 = tmpvar_14;
					  xlv_TEXCOORD4 = tmpvar_15;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_36);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_36);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_36);
					  lowp vec3 tmpvar_38;
					  tmpvar_38 = normalize(worldN_3);
					  worldN_3 = tmpvar_38;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_39;
					  lowp vec4 c_40;
					  lowp float diff_41;
					  mediump float tmpvar_42;
					  tmpvar_42 = max (0.0, dot (tmpvar_38, tmpvar_2));
					  diff_41 = tmpvar_42;
					  c_40.xyz = ((tmpvar_9 * tmpvar_1) * diff_41);
					  c_40.w = tmpvar_10;
					  c_39.w = c_40.w;
					  c_39.xyz = c_40.xyz;
					  c_4.xyz = c_39.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "SPOT" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_7;
					  tmpvar_7[0] = unity_WorldToObject[0].xyz;
					  tmpvar_7[1] = unity_WorldToObject[1].xyz;
					  tmpvar_7[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
					  worldNormal_3 = tmpvar_8;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_11;
					  lowp vec3 tmpvar_12;
					  tmpvar_12 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_13;
					  tmpvar_13.x = worldTangent_2.x;
					  tmpvar_13.y = tmpvar_12.x;
					  tmpvar_13.z = worldNormal_3.x;
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.y;
					  tmpvar_14.y = tmpvar_12.y;
					  tmpvar_14.z = worldNormal_3.y;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.z;
					  tmpvar_15.y = tmpvar_12.z;
					  tmpvar_15.z = worldNormal_3.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_13;
					  xlv_TEXCOORD3 = tmpvar_14;
					  xlv_TEXCOORD4 = tmpvar_15;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp float atten_5;
					  highp vec4 lightCoord_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD5));
					  lightDir_9 = tmpvar_10;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_11;
					  lowp float tmpvar_12;
					  tmpvar_11 = tmpvar_7;
					  tmpvar_12 = tmpvar_8;
					  highp vec4 norm2_13;
					  highp vec4 norm_14;
					  highp vec4 dest_15;
					  highp vec4 tex2_16;
					  highp vec4 tex_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_17 = tmpvar_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_16 = tmpvar_19;
					  xlat_mutable_Opacity = (_Opacity * tex_17.w);
					  bvec3 tmpvar_20;
					  tmpvar_20 = lessThanEqual (tex2_16.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_21;
					  b_21 = ((2.0 * tex_17.xyz) * tex2_16.xyz);
					  highp vec3 c_22;
					  c_22 = (1.0 - ((2.0 * 
					    (1.0 - tex_17.xyz)
					  ) * (1.0 - tex2_16.xyz)));
					  highp float tmpvar_23;
					  if (tmpvar_20.x) {
					    tmpvar_23 = b_21.x;
					  } else {
					    tmpvar_23 = c_22.x;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_20.y) {
					    tmpvar_24 = b_21.y;
					  } else {
					    tmpvar_24 = c_22.y;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_20.z) {
					    tmpvar_25 = b_21.z;
					  } else {
					    tmpvar_25 = c_22.z;
					  };
					  highp vec3 tmpvar_26;
					  tmpvar_26.x = tmpvar_23;
					  tmpvar_26.y = tmpvar_24;
					  tmpvar_26.z = tmpvar_25;
					  dest_15.xyz = mix (tex2_16.xyz, tmpvar_26, vec3(xlat_mutable_Opacity));
					  dest_15.xyz = (dest_15.xyz * _Color.xyz);
					  tmpvar_11 = dest_15.xyz;
					  tmpvar_12 = (tex2_16.w * _Color.w);
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_14 = tmpvar_27;
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_13 = tmpvar_28;
					  bvec4 tmpvar_29;
					  tmpvar_29 = lessThanEqual (norm2_13, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_30;
					  b_30 = ((2.0 * norm_14) * norm2_13);
					  highp vec4 c_31;
					  c_31 = (1.0 - ((2.0 * 
					    (1.0 - norm_14)
					  ) * (1.0 - norm2_13)));
					  highp float tmpvar_32;
					  if (tmpvar_29.x) {
					    tmpvar_32 = b_30.x;
					  } else {
					    tmpvar_32 = c_31.x;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_29.y) {
					    tmpvar_33 = b_30.y;
					  } else {
					    tmpvar_33 = c_31.y;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_29.z) {
					    tmpvar_34 = b_30.z;
					  } else {
					    tmpvar_34 = c_31.z;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_29.w) {
					    tmpvar_35 = b_30.w;
					  } else {
					    tmpvar_35 = c_31.w;
					  };
					  highp vec4 tmpvar_36;
					  tmpvar_36.x = tmpvar_32;
					  tmpvar_36.y = tmpvar_33;
					  tmpvar_36.z = tmpvar_34;
					  tmpvar_36.w = tmpvar_35;
					  highp vec4 tmpvar_37;
					  tmpvar_37 = mix (norm2_13, tmpvar_36, vec4(xlat_mutable_Opacity));
					  dest_15 = tmpvar_37;
					  lowp vec3 tmpvar_38;
					  lowp vec4 packednormal_39;
					  packednormal_39 = tmpvar_37;
					  tmpvar_38 = ((packednormal_39.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_11;
					  tmpvar_8 = tmpvar_12;
					  highp vec4 tmpvar_40;
					  tmpvar_40.w = 1.0;
					  tmpvar_40.xyz = xlv_TEXCOORD5;
					  lightCoord_6 = (unity_WorldToLight * tmpvar_40);
					  lowp vec4 tmpvar_41;
					  highp vec2 P_42;
					  P_42 = ((lightCoord_6.xy / lightCoord_6.w) + 0.5);
					  tmpvar_41 = texture2D (_LightTexture0, P_42);
					  highp float tmpvar_43;
					  tmpvar_43 = dot (lightCoord_6.xyz, lightCoord_6.xyz);
					  lowp vec4 tmpvar_44;
					  tmpvar_44 = texture2D (_LightTextureB0, vec2(tmpvar_43));
					  highp float tmpvar_45;
					  tmpvar_45 = ((float(
					    (lightCoord_6.z > 0.0)
					  ) * tmpvar_41.w) * tmpvar_44.w);
					  atten_5 = tmpvar_45;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_38);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_38);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_38);
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = normalize(worldN_3);
					  worldN_3 = tmpvar_46;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_9;
					  tmpvar_1 = (tmpvar_1 * atten_5);
					  lowp vec4 c_47;
					  lowp vec4 c_48;
					  lowp float diff_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = max (0.0, dot (tmpvar_46, tmpvar_2));
					  diff_49 = tmpvar_50;
					  c_48.xyz = ((tmpvar_11 * tmpvar_1) * diff_49);
					  c_48.w = tmpvar_12;
					  c_47.w = c_48.w;
					  c_47.xyz = c_48.xyz;
					  c_4.xyz = c_47.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "SPOT" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_7;
					  tmpvar_7[0] = unity_WorldToObject[0].xyz;
					  tmpvar_7[1] = unity_WorldToObject[1].xyz;
					  tmpvar_7[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
					  worldNormal_3 = tmpvar_8;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_11;
					  lowp vec3 tmpvar_12;
					  tmpvar_12 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_13;
					  tmpvar_13.x = worldTangent_2.x;
					  tmpvar_13.y = tmpvar_12.x;
					  tmpvar_13.z = worldNormal_3.x;
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.y;
					  tmpvar_14.y = tmpvar_12.y;
					  tmpvar_14.z = worldNormal_3.y;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.z;
					  tmpvar_15.y = tmpvar_12.z;
					  tmpvar_15.z = worldNormal_3.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_13;
					  xlv_TEXCOORD3 = tmpvar_14;
					  xlv_TEXCOORD4 = tmpvar_15;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp float atten_5;
					  highp vec4 lightCoord_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD5));
					  lightDir_9 = tmpvar_10;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_11;
					  lowp float tmpvar_12;
					  tmpvar_11 = tmpvar_7;
					  tmpvar_12 = tmpvar_8;
					  highp vec4 norm2_13;
					  highp vec4 norm_14;
					  highp vec4 dest_15;
					  highp vec4 tex2_16;
					  highp vec4 tex_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_17 = tmpvar_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_16 = tmpvar_19;
					  xlat_mutable_Opacity = (_Opacity * tex_17.w);
					  bvec3 tmpvar_20;
					  tmpvar_20 = lessThanEqual (tex2_16.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_21;
					  b_21 = ((2.0 * tex_17.xyz) * tex2_16.xyz);
					  highp vec3 c_22;
					  c_22 = (1.0 - ((2.0 * 
					    (1.0 - tex_17.xyz)
					  ) * (1.0 - tex2_16.xyz)));
					  highp float tmpvar_23;
					  if (tmpvar_20.x) {
					    tmpvar_23 = b_21.x;
					  } else {
					    tmpvar_23 = c_22.x;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_20.y) {
					    tmpvar_24 = b_21.y;
					  } else {
					    tmpvar_24 = c_22.y;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_20.z) {
					    tmpvar_25 = b_21.z;
					  } else {
					    tmpvar_25 = c_22.z;
					  };
					  highp vec3 tmpvar_26;
					  tmpvar_26.x = tmpvar_23;
					  tmpvar_26.y = tmpvar_24;
					  tmpvar_26.z = tmpvar_25;
					  dest_15.xyz = mix (tex2_16.xyz, tmpvar_26, vec3(xlat_mutable_Opacity));
					  dest_15.xyz = (dest_15.xyz * _Color.xyz);
					  tmpvar_11 = dest_15.xyz;
					  tmpvar_12 = (tex2_16.w * _Color.w);
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_14 = tmpvar_27;
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_13 = tmpvar_28;
					  bvec4 tmpvar_29;
					  tmpvar_29 = lessThanEqual (norm2_13, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_30;
					  b_30 = ((2.0 * norm_14) * norm2_13);
					  highp vec4 c_31;
					  c_31 = (1.0 - ((2.0 * 
					    (1.0 - norm_14)
					  ) * (1.0 - norm2_13)));
					  highp float tmpvar_32;
					  if (tmpvar_29.x) {
					    tmpvar_32 = b_30.x;
					  } else {
					    tmpvar_32 = c_31.x;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_29.y) {
					    tmpvar_33 = b_30.y;
					  } else {
					    tmpvar_33 = c_31.y;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_29.z) {
					    tmpvar_34 = b_30.z;
					  } else {
					    tmpvar_34 = c_31.z;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_29.w) {
					    tmpvar_35 = b_30.w;
					  } else {
					    tmpvar_35 = c_31.w;
					  };
					  highp vec4 tmpvar_36;
					  tmpvar_36.x = tmpvar_32;
					  tmpvar_36.y = tmpvar_33;
					  tmpvar_36.z = tmpvar_34;
					  tmpvar_36.w = tmpvar_35;
					  highp vec4 tmpvar_37;
					  tmpvar_37 = mix (norm2_13, tmpvar_36, vec4(xlat_mutable_Opacity));
					  dest_15 = tmpvar_37;
					  lowp vec3 tmpvar_38;
					  lowp vec4 packednormal_39;
					  packednormal_39 = tmpvar_37;
					  tmpvar_38 = ((packednormal_39.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_11;
					  tmpvar_8 = tmpvar_12;
					  highp vec4 tmpvar_40;
					  tmpvar_40.w = 1.0;
					  tmpvar_40.xyz = xlv_TEXCOORD5;
					  lightCoord_6 = (unity_WorldToLight * tmpvar_40);
					  lowp vec4 tmpvar_41;
					  highp vec2 P_42;
					  P_42 = ((lightCoord_6.xy / lightCoord_6.w) + 0.5);
					  tmpvar_41 = texture2D (_LightTexture0, P_42);
					  highp float tmpvar_43;
					  tmpvar_43 = dot (lightCoord_6.xyz, lightCoord_6.xyz);
					  lowp vec4 tmpvar_44;
					  tmpvar_44 = texture2D (_LightTextureB0, vec2(tmpvar_43));
					  highp float tmpvar_45;
					  tmpvar_45 = ((float(
					    (lightCoord_6.z > 0.0)
					  ) * tmpvar_41.w) * tmpvar_44.w);
					  atten_5 = tmpvar_45;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_38);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_38);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_38);
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = normalize(worldN_3);
					  worldN_3 = tmpvar_46;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_9;
					  tmpvar_1 = (tmpvar_1 * atten_5);
					  lowp vec4 c_47;
					  lowp vec4 c_48;
					  lowp float diff_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = max (0.0, dot (tmpvar_46, tmpvar_2));
					  diff_49 = tmpvar_50;
					  c_48.xyz = ((tmpvar_11 * tmpvar_1) * diff_49);
					  c_48.w = tmpvar_12;
					  c_47.w = c_48.w;
					  c_47.xyz = c_48.xyz;
					  c_4.xyz = c_47.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "SPOT" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_7;
					  tmpvar_7[0] = unity_WorldToObject[0].xyz;
					  tmpvar_7[1] = unity_WorldToObject[1].xyz;
					  tmpvar_7[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
					  worldNormal_3 = tmpvar_8;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_11;
					  lowp vec3 tmpvar_12;
					  tmpvar_12 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_13;
					  tmpvar_13.x = worldTangent_2.x;
					  tmpvar_13.y = tmpvar_12.x;
					  tmpvar_13.z = worldNormal_3.x;
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.y;
					  tmpvar_14.y = tmpvar_12.y;
					  tmpvar_14.z = worldNormal_3.y;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.z;
					  tmpvar_15.y = tmpvar_12.z;
					  tmpvar_15.z = worldNormal_3.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_13;
					  xlv_TEXCOORD3 = tmpvar_14;
					  xlv_TEXCOORD4 = tmpvar_15;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp float atten_5;
					  highp vec4 lightCoord_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD5));
					  lightDir_9 = tmpvar_10;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_11;
					  lowp float tmpvar_12;
					  tmpvar_11 = tmpvar_7;
					  tmpvar_12 = tmpvar_8;
					  highp vec4 norm2_13;
					  highp vec4 norm_14;
					  highp vec4 dest_15;
					  highp vec4 tex2_16;
					  highp vec4 tex_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_17 = tmpvar_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_16 = tmpvar_19;
					  xlat_mutable_Opacity = (_Opacity * tex_17.w);
					  bvec3 tmpvar_20;
					  tmpvar_20 = lessThanEqual (tex2_16.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_21;
					  b_21 = ((2.0 * tex_17.xyz) * tex2_16.xyz);
					  highp vec3 c_22;
					  c_22 = (1.0 - ((2.0 * 
					    (1.0 - tex_17.xyz)
					  ) * (1.0 - tex2_16.xyz)));
					  highp float tmpvar_23;
					  if (tmpvar_20.x) {
					    tmpvar_23 = b_21.x;
					  } else {
					    tmpvar_23 = c_22.x;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_20.y) {
					    tmpvar_24 = b_21.y;
					  } else {
					    tmpvar_24 = c_22.y;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_20.z) {
					    tmpvar_25 = b_21.z;
					  } else {
					    tmpvar_25 = c_22.z;
					  };
					  highp vec3 tmpvar_26;
					  tmpvar_26.x = tmpvar_23;
					  tmpvar_26.y = tmpvar_24;
					  tmpvar_26.z = tmpvar_25;
					  dest_15.xyz = mix (tex2_16.xyz, tmpvar_26, vec3(xlat_mutable_Opacity));
					  dest_15.xyz = (dest_15.xyz * _Color.xyz);
					  tmpvar_11 = dest_15.xyz;
					  tmpvar_12 = (tex2_16.w * _Color.w);
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_14 = tmpvar_27;
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_13 = tmpvar_28;
					  bvec4 tmpvar_29;
					  tmpvar_29 = lessThanEqual (norm2_13, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_30;
					  b_30 = ((2.0 * norm_14) * norm2_13);
					  highp vec4 c_31;
					  c_31 = (1.0 - ((2.0 * 
					    (1.0 - norm_14)
					  ) * (1.0 - norm2_13)));
					  highp float tmpvar_32;
					  if (tmpvar_29.x) {
					    tmpvar_32 = b_30.x;
					  } else {
					    tmpvar_32 = c_31.x;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_29.y) {
					    tmpvar_33 = b_30.y;
					  } else {
					    tmpvar_33 = c_31.y;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_29.z) {
					    tmpvar_34 = b_30.z;
					  } else {
					    tmpvar_34 = c_31.z;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_29.w) {
					    tmpvar_35 = b_30.w;
					  } else {
					    tmpvar_35 = c_31.w;
					  };
					  highp vec4 tmpvar_36;
					  tmpvar_36.x = tmpvar_32;
					  tmpvar_36.y = tmpvar_33;
					  tmpvar_36.z = tmpvar_34;
					  tmpvar_36.w = tmpvar_35;
					  highp vec4 tmpvar_37;
					  tmpvar_37 = mix (norm2_13, tmpvar_36, vec4(xlat_mutable_Opacity));
					  dest_15 = tmpvar_37;
					  lowp vec3 tmpvar_38;
					  lowp vec4 packednormal_39;
					  packednormal_39 = tmpvar_37;
					  tmpvar_38 = ((packednormal_39.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_11;
					  tmpvar_8 = tmpvar_12;
					  highp vec4 tmpvar_40;
					  tmpvar_40.w = 1.0;
					  tmpvar_40.xyz = xlv_TEXCOORD5;
					  lightCoord_6 = (unity_WorldToLight * tmpvar_40);
					  lowp vec4 tmpvar_41;
					  highp vec2 P_42;
					  P_42 = ((lightCoord_6.xy / lightCoord_6.w) + 0.5);
					  tmpvar_41 = texture2D (_LightTexture0, P_42);
					  highp float tmpvar_43;
					  tmpvar_43 = dot (lightCoord_6.xyz, lightCoord_6.xyz);
					  lowp vec4 tmpvar_44;
					  tmpvar_44 = texture2D (_LightTextureB0, vec2(tmpvar_43));
					  highp float tmpvar_45;
					  tmpvar_45 = ((float(
					    (lightCoord_6.z > 0.0)
					  ) * tmpvar_41.w) * tmpvar_44.w);
					  atten_5 = tmpvar_45;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_38);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_38);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_38);
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = normalize(worldN_3);
					  worldN_3 = tmpvar_46;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_9;
					  tmpvar_1 = (tmpvar_1 * atten_5);
					  lowp vec4 c_47;
					  lowp vec4 c_48;
					  lowp float diff_49;
					  mediump float tmpvar_50;
					  tmpvar_50 = max (0.0, dot (tmpvar_46, tmpvar_2));
					  diff_49 = tmpvar_50;
					  c_48.xyz = ((tmpvar_11 * tmpvar_1) * diff_49);
					  c_48.w = tmpvar_12;
					  c_47.w = c_48.w;
					  c_47.xyz = c_48.xyz;
					  c_4.xyz = c_47.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "POINT_COOKIE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_7;
					  tmpvar_7[0] = unity_WorldToObject[0].xyz;
					  tmpvar_7[1] = unity_WorldToObject[1].xyz;
					  tmpvar_7[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
					  worldNormal_3 = tmpvar_8;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_11;
					  lowp vec3 tmpvar_12;
					  tmpvar_12 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_13;
					  tmpvar_13.x = worldTangent_2.x;
					  tmpvar_13.y = tmpvar_12.x;
					  tmpvar_13.z = worldNormal_3.x;
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.y;
					  tmpvar_14.y = tmpvar_12.y;
					  tmpvar_14.z = worldNormal_3.y;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.z;
					  tmpvar_15.y = tmpvar_12.z;
					  tmpvar_15.z = worldNormal_3.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_13;
					  xlv_TEXCOORD3 = tmpvar_14;
					  xlv_TEXCOORD4 = tmpvar_15;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp samplerCube _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  highp vec3 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp float tmpvar_7;
					  lowp vec3 lightDir_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD5));
					  lightDir_8 = tmpvar_9;
					  tmpvar_6 = vec3(0.0, 0.0, 0.0);
					  tmpvar_7 = 0.0;
					  lowp vec3 tmpvar_10;
					  lowp float tmpvar_11;
					  tmpvar_10 = tmpvar_6;
					  tmpvar_11 = tmpvar_7;
					  highp vec4 norm2_12;
					  highp vec4 norm_13;
					  highp vec4 dest_14;
					  highp vec4 tex2_15;
					  highp vec4 tex_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_16 = tmpvar_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_15 = tmpvar_18;
					  xlat_mutable_Opacity = (_Opacity * tex_16.w);
					  bvec3 tmpvar_19;
					  tmpvar_19 = lessThanEqual (tex2_15.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_20;
					  b_20 = ((2.0 * tex_16.xyz) * tex2_15.xyz);
					  highp vec3 c_21;
					  c_21 = (1.0 - ((2.0 * 
					    (1.0 - tex_16.xyz)
					  ) * (1.0 - tex2_15.xyz)));
					  highp float tmpvar_22;
					  if (tmpvar_19.x) {
					    tmpvar_22 = b_20.x;
					  } else {
					    tmpvar_22 = c_21.x;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_19.y) {
					    tmpvar_23 = b_20.y;
					  } else {
					    tmpvar_23 = c_21.y;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_19.z) {
					    tmpvar_24 = b_20.z;
					  } else {
					    tmpvar_24 = c_21.z;
					  };
					  highp vec3 tmpvar_25;
					  tmpvar_25.x = tmpvar_22;
					  tmpvar_25.y = tmpvar_23;
					  tmpvar_25.z = tmpvar_24;
					  dest_14.xyz = mix (tex2_15.xyz, tmpvar_25, vec3(xlat_mutable_Opacity));
					  dest_14.xyz = (dest_14.xyz * _Color.xyz);
					  tmpvar_10 = dest_14.xyz;
					  tmpvar_11 = (tex2_15.w * _Color.w);
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_13 = tmpvar_26;
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_12 = tmpvar_27;
					  bvec4 tmpvar_28;
					  tmpvar_28 = lessThanEqual (norm2_12, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_29;
					  b_29 = ((2.0 * norm_13) * norm2_12);
					  highp vec4 c_30;
					  c_30 = (1.0 - ((2.0 * 
					    (1.0 - norm_13)
					  ) * (1.0 - norm2_12)));
					  highp float tmpvar_31;
					  if (tmpvar_28.x) {
					    tmpvar_31 = b_29.x;
					  } else {
					    tmpvar_31 = c_30.x;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_28.y) {
					    tmpvar_32 = b_29.y;
					  } else {
					    tmpvar_32 = c_30.y;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_28.z) {
					    tmpvar_33 = b_29.z;
					  } else {
					    tmpvar_33 = c_30.z;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_28.w) {
					    tmpvar_34 = b_29.w;
					  } else {
					    tmpvar_34 = c_30.w;
					  };
					  highp vec4 tmpvar_35;
					  tmpvar_35.x = tmpvar_31;
					  tmpvar_35.y = tmpvar_32;
					  tmpvar_35.z = tmpvar_33;
					  tmpvar_35.w = tmpvar_34;
					  highp vec4 tmpvar_36;
					  tmpvar_36 = mix (norm2_12, tmpvar_35, vec4(xlat_mutable_Opacity));
					  dest_14 = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  lowp vec4 packednormal_38;
					  packednormal_38 = tmpvar_36;
					  tmpvar_37 = ((packednormal_38.xyz * 2.0) - 1.0);
					  tmpvar_6 = tmpvar_10;
					  tmpvar_7 = tmpvar_11;
					  highp vec4 tmpvar_39;
					  tmpvar_39.w = 1.0;
					  tmpvar_39.xyz = xlv_TEXCOORD5;
					  lightCoord_5 = (unity_WorldToLight * tmpvar_39).xyz;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (lightCoord_5, lightCoord_5);
					  lowp float tmpvar_41;
					  tmpvar_41 = (texture2D (_LightTextureB0, vec2(tmpvar_40)).w * textureCube (_LightTexture0, lightCoord_5).w);
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_37);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_37);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_37);
					  lowp vec3 tmpvar_42;
					  tmpvar_42 = normalize(worldN_3);
					  worldN_3 = tmpvar_42;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * tmpvar_41);
					  lowp vec4 c_43;
					  lowp vec4 c_44;
					  lowp float diff_45;
					  mediump float tmpvar_46;
					  tmpvar_46 = max (0.0, dot (tmpvar_42, tmpvar_2));
					  diff_45 = tmpvar_46;
					  c_44.xyz = ((tmpvar_10 * tmpvar_1) * diff_45);
					  c_44.w = tmpvar_11;
					  c_43.w = c_44.w;
					  c_43.xyz = c_44.xyz;
					  c_4.xyz = c_43.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "POINT_COOKIE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_7;
					  tmpvar_7[0] = unity_WorldToObject[0].xyz;
					  tmpvar_7[1] = unity_WorldToObject[1].xyz;
					  tmpvar_7[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
					  worldNormal_3 = tmpvar_8;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_11;
					  lowp vec3 tmpvar_12;
					  tmpvar_12 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_13;
					  tmpvar_13.x = worldTangent_2.x;
					  tmpvar_13.y = tmpvar_12.x;
					  tmpvar_13.z = worldNormal_3.x;
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.y;
					  tmpvar_14.y = tmpvar_12.y;
					  tmpvar_14.z = worldNormal_3.y;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.z;
					  tmpvar_15.y = tmpvar_12.z;
					  tmpvar_15.z = worldNormal_3.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_13;
					  xlv_TEXCOORD3 = tmpvar_14;
					  xlv_TEXCOORD4 = tmpvar_15;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp samplerCube _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  highp vec3 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp float tmpvar_7;
					  lowp vec3 lightDir_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD5));
					  lightDir_8 = tmpvar_9;
					  tmpvar_6 = vec3(0.0, 0.0, 0.0);
					  tmpvar_7 = 0.0;
					  lowp vec3 tmpvar_10;
					  lowp float tmpvar_11;
					  tmpvar_10 = tmpvar_6;
					  tmpvar_11 = tmpvar_7;
					  highp vec4 norm2_12;
					  highp vec4 norm_13;
					  highp vec4 dest_14;
					  highp vec4 tex2_15;
					  highp vec4 tex_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_16 = tmpvar_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_15 = tmpvar_18;
					  xlat_mutable_Opacity = (_Opacity * tex_16.w);
					  bvec3 tmpvar_19;
					  tmpvar_19 = lessThanEqual (tex2_15.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_20;
					  b_20 = ((2.0 * tex_16.xyz) * tex2_15.xyz);
					  highp vec3 c_21;
					  c_21 = (1.0 - ((2.0 * 
					    (1.0 - tex_16.xyz)
					  ) * (1.0 - tex2_15.xyz)));
					  highp float tmpvar_22;
					  if (tmpvar_19.x) {
					    tmpvar_22 = b_20.x;
					  } else {
					    tmpvar_22 = c_21.x;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_19.y) {
					    tmpvar_23 = b_20.y;
					  } else {
					    tmpvar_23 = c_21.y;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_19.z) {
					    tmpvar_24 = b_20.z;
					  } else {
					    tmpvar_24 = c_21.z;
					  };
					  highp vec3 tmpvar_25;
					  tmpvar_25.x = tmpvar_22;
					  tmpvar_25.y = tmpvar_23;
					  tmpvar_25.z = tmpvar_24;
					  dest_14.xyz = mix (tex2_15.xyz, tmpvar_25, vec3(xlat_mutable_Opacity));
					  dest_14.xyz = (dest_14.xyz * _Color.xyz);
					  tmpvar_10 = dest_14.xyz;
					  tmpvar_11 = (tex2_15.w * _Color.w);
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_13 = tmpvar_26;
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_12 = tmpvar_27;
					  bvec4 tmpvar_28;
					  tmpvar_28 = lessThanEqual (norm2_12, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_29;
					  b_29 = ((2.0 * norm_13) * norm2_12);
					  highp vec4 c_30;
					  c_30 = (1.0 - ((2.0 * 
					    (1.0 - norm_13)
					  ) * (1.0 - norm2_12)));
					  highp float tmpvar_31;
					  if (tmpvar_28.x) {
					    tmpvar_31 = b_29.x;
					  } else {
					    tmpvar_31 = c_30.x;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_28.y) {
					    tmpvar_32 = b_29.y;
					  } else {
					    tmpvar_32 = c_30.y;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_28.z) {
					    tmpvar_33 = b_29.z;
					  } else {
					    tmpvar_33 = c_30.z;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_28.w) {
					    tmpvar_34 = b_29.w;
					  } else {
					    tmpvar_34 = c_30.w;
					  };
					  highp vec4 tmpvar_35;
					  tmpvar_35.x = tmpvar_31;
					  tmpvar_35.y = tmpvar_32;
					  tmpvar_35.z = tmpvar_33;
					  tmpvar_35.w = tmpvar_34;
					  highp vec4 tmpvar_36;
					  tmpvar_36 = mix (norm2_12, tmpvar_35, vec4(xlat_mutable_Opacity));
					  dest_14 = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  lowp vec4 packednormal_38;
					  packednormal_38 = tmpvar_36;
					  tmpvar_37 = ((packednormal_38.xyz * 2.0) - 1.0);
					  tmpvar_6 = tmpvar_10;
					  tmpvar_7 = tmpvar_11;
					  highp vec4 tmpvar_39;
					  tmpvar_39.w = 1.0;
					  tmpvar_39.xyz = xlv_TEXCOORD5;
					  lightCoord_5 = (unity_WorldToLight * tmpvar_39).xyz;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (lightCoord_5, lightCoord_5);
					  lowp float tmpvar_41;
					  tmpvar_41 = (texture2D (_LightTextureB0, vec2(tmpvar_40)).w * textureCube (_LightTexture0, lightCoord_5).w);
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_37);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_37);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_37);
					  lowp vec3 tmpvar_42;
					  tmpvar_42 = normalize(worldN_3);
					  worldN_3 = tmpvar_42;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * tmpvar_41);
					  lowp vec4 c_43;
					  lowp vec4 c_44;
					  lowp float diff_45;
					  mediump float tmpvar_46;
					  tmpvar_46 = max (0.0, dot (tmpvar_42, tmpvar_2));
					  diff_45 = tmpvar_46;
					  c_44.xyz = ((tmpvar_10 * tmpvar_1) * diff_45);
					  c_44.w = tmpvar_11;
					  c_43.w = c_44.w;
					  c_43.xyz = c_44.xyz;
					  c_4.xyz = c_43.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "POINT_COOKIE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_7;
					  tmpvar_7[0] = unity_WorldToObject[0].xyz;
					  tmpvar_7[1] = unity_WorldToObject[1].xyz;
					  tmpvar_7[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
					  worldNormal_3 = tmpvar_8;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_11;
					  lowp vec3 tmpvar_12;
					  tmpvar_12 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_13;
					  tmpvar_13.x = worldTangent_2.x;
					  tmpvar_13.y = tmpvar_12.x;
					  tmpvar_13.z = worldNormal_3.x;
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.y;
					  tmpvar_14.y = tmpvar_12.y;
					  tmpvar_14.z = worldNormal_3.y;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.z;
					  tmpvar_15.y = tmpvar_12.z;
					  tmpvar_15.z = worldNormal_3.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_13;
					  xlv_TEXCOORD3 = tmpvar_14;
					  xlv_TEXCOORD4 = tmpvar_15;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp samplerCube _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  highp vec3 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp float tmpvar_7;
					  lowp vec3 lightDir_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD5));
					  lightDir_8 = tmpvar_9;
					  tmpvar_6 = vec3(0.0, 0.0, 0.0);
					  tmpvar_7 = 0.0;
					  lowp vec3 tmpvar_10;
					  lowp float tmpvar_11;
					  tmpvar_10 = tmpvar_6;
					  tmpvar_11 = tmpvar_7;
					  highp vec4 norm2_12;
					  highp vec4 norm_13;
					  highp vec4 dest_14;
					  highp vec4 tex2_15;
					  highp vec4 tex_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_16 = tmpvar_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_15 = tmpvar_18;
					  xlat_mutable_Opacity = (_Opacity * tex_16.w);
					  bvec3 tmpvar_19;
					  tmpvar_19 = lessThanEqual (tex2_15.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_20;
					  b_20 = ((2.0 * tex_16.xyz) * tex2_15.xyz);
					  highp vec3 c_21;
					  c_21 = (1.0 - ((2.0 * 
					    (1.0 - tex_16.xyz)
					  ) * (1.0 - tex2_15.xyz)));
					  highp float tmpvar_22;
					  if (tmpvar_19.x) {
					    tmpvar_22 = b_20.x;
					  } else {
					    tmpvar_22 = c_21.x;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_19.y) {
					    tmpvar_23 = b_20.y;
					  } else {
					    tmpvar_23 = c_21.y;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_19.z) {
					    tmpvar_24 = b_20.z;
					  } else {
					    tmpvar_24 = c_21.z;
					  };
					  highp vec3 tmpvar_25;
					  tmpvar_25.x = tmpvar_22;
					  tmpvar_25.y = tmpvar_23;
					  tmpvar_25.z = tmpvar_24;
					  dest_14.xyz = mix (tex2_15.xyz, tmpvar_25, vec3(xlat_mutable_Opacity));
					  dest_14.xyz = (dest_14.xyz * _Color.xyz);
					  tmpvar_10 = dest_14.xyz;
					  tmpvar_11 = (tex2_15.w * _Color.w);
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_13 = tmpvar_26;
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_12 = tmpvar_27;
					  bvec4 tmpvar_28;
					  tmpvar_28 = lessThanEqual (norm2_12, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_29;
					  b_29 = ((2.0 * norm_13) * norm2_12);
					  highp vec4 c_30;
					  c_30 = (1.0 - ((2.0 * 
					    (1.0 - norm_13)
					  ) * (1.0 - norm2_12)));
					  highp float tmpvar_31;
					  if (tmpvar_28.x) {
					    tmpvar_31 = b_29.x;
					  } else {
					    tmpvar_31 = c_30.x;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_28.y) {
					    tmpvar_32 = b_29.y;
					  } else {
					    tmpvar_32 = c_30.y;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_28.z) {
					    tmpvar_33 = b_29.z;
					  } else {
					    tmpvar_33 = c_30.z;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_28.w) {
					    tmpvar_34 = b_29.w;
					  } else {
					    tmpvar_34 = c_30.w;
					  };
					  highp vec4 tmpvar_35;
					  tmpvar_35.x = tmpvar_31;
					  tmpvar_35.y = tmpvar_32;
					  tmpvar_35.z = tmpvar_33;
					  tmpvar_35.w = tmpvar_34;
					  highp vec4 tmpvar_36;
					  tmpvar_36 = mix (norm2_12, tmpvar_35, vec4(xlat_mutable_Opacity));
					  dest_14 = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  lowp vec4 packednormal_38;
					  packednormal_38 = tmpvar_36;
					  tmpvar_37 = ((packednormal_38.xyz * 2.0) - 1.0);
					  tmpvar_6 = tmpvar_10;
					  tmpvar_7 = tmpvar_11;
					  highp vec4 tmpvar_39;
					  tmpvar_39.w = 1.0;
					  tmpvar_39.xyz = xlv_TEXCOORD5;
					  lightCoord_5 = (unity_WorldToLight * tmpvar_39).xyz;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (lightCoord_5, lightCoord_5);
					  lowp float tmpvar_41;
					  tmpvar_41 = (texture2D (_LightTextureB0, vec2(tmpvar_40)).w * textureCube (_LightTexture0, lightCoord_5).w);
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_37);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_37);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_37);
					  lowp vec3 tmpvar_42;
					  tmpvar_42 = normalize(worldN_3);
					  worldN_3 = tmpvar_42;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * tmpvar_41);
					  lowp vec4 c_43;
					  lowp vec4 c_44;
					  lowp float diff_45;
					  mediump float tmpvar_46;
					  tmpvar_46 = max (0.0, dot (tmpvar_42, tmpvar_2));
					  diff_45 = tmpvar_46;
					  c_44.xyz = ((tmpvar_10 * tmpvar_1) * diff_45);
					  c_44.w = tmpvar_11;
					  c_43.w = c_44.w;
					  c_43.xyz = c_44.xyz;
					  c_4.xyz = c_43.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_7;
					  tmpvar_7[0] = unity_WorldToObject[0].xyz;
					  tmpvar_7[1] = unity_WorldToObject[1].xyz;
					  tmpvar_7[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
					  worldNormal_3 = tmpvar_8;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_11;
					  lowp vec3 tmpvar_12;
					  tmpvar_12 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_13;
					  tmpvar_13.x = worldTangent_2.x;
					  tmpvar_13.y = tmpvar_12.x;
					  tmpvar_13.z = worldNormal_3.x;
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.y;
					  tmpvar_14.y = tmpvar_12.y;
					  tmpvar_14.z = worldNormal_3.y;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.z;
					  tmpvar_15.y = tmpvar_12.z;
					  tmpvar_15.z = worldNormal_3.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_13;
					  xlv_TEXCOORD3 = tmpvar_14;
					  xlv_TEXCOORD4 = tmpvar_15;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  highp vec2 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp float tmpvar_7;
					  lowp vec3 lightDir_8;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_8 = tmpvar_9;
					  tmpvar_6 = vec3(0.0, 0.0, 0.0);
					  tmpvar_7 = 0.0;
					  lowp vec3 tmpvar_10;
					  lowp float tmpvar_11;
					  tmpvar_10 = tmpvar_6;
					  tmpvar_11 = tmpvar_7;
					  highp vec4 norm2_12;
					  highp vec4 norm_13;
					  highp vec4 dest_14;
					  highp vec4 tex2_15;
					  highp vec4 tex_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_16 = tmpvar_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_15 = tmpvar_18;
					  xlat_mutable_Opacity = (_Opacity * tex_16.w);
					  bvec3 tmpvar_19;
					  tmpvar_19 = lessThanEqual (tex2_15.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_20;
					  b_20 = ((2.0 * tex_16.xyz) * tex2_15.xyz);
					  highp vec3 c_21;
					  c_21 = (1.0 - ((2.0 * 
					    (1.0 - tex_16.xyz)
					  ) * (1.0 - tex2_15.xyz)));
					  highp float tmpvar_22;
					  if (tmpvar_19.x) {
					    tmpvar_22 = b_20.x;
					  } else {
					    tmpvar_22 = c_21.x;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_19.y) {
					    tmpvar_23 = b_20.y;
					  } else {
					    tmpvar_23 = c_21.y;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_19.z) {
					    tmpvar_24 = b_20.z;
					  } else {
					    tmpvar_24 = c_21.z;
					  };
					  highp vec3 tmpvar_25;
					  tmpvar_25.x = tmpvar_22;
					  tmpvar_25.y = tmpvar_23;
					  tmpvar_25.z = tmpvar_24;
					  dest_14.xyz = mix (tex2_15.xyz, tmpvar_25, vec3(xlat_mutable_Opacity));
					  dest_14.xyz = (dest_14.xyz * _Color.xyz);
					  tmpvar_10 = dest_14.xyz;
					  tmpvar_11 = (tex2_15.w * _Color.w);
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_13 = tmpvar_26;
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_12 = tmpvar_27;
					  bvec4 tmpvar_28;
					  tmpvar_28 = lessThanEqual (norm2_12, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_29;
					  b_29 = ((2.0 * norm_13) * norm2_12);
					  highp vec4 c_30;
					  c_30 = (1.0 - ((2.0 * 
					    (1.0 - norm_13)
					  ) * (1.0 - norm2_12)));
					  highp float tmpvar_31;
					  if (tmpvar_28.x) {
					    tmpvar_31 = b_29.x;
					  } else {
					    tmpvar_31 = c_30.x;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_28.y) {
					    tmpvar_32 = b_29.y;
					  } else {
					    tmpvar_32 = c_30.y;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_28.z) {
					    tmpvar_33 = b_29.z;
					  } else {
					    tmpvar_33 = c_30.z;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_28.w) {
					    tmpvar_34 = b_29.w;
					  } else {
					    tmpvar_34 = c_30.w;
					  };
					  highp vec4 tmpvar_35;
					  tmpvar_35.x = tmpvar_31;
					  tmpvar_35.y = tmpvar_32;
					  tmpvar_35.z = tmpvar_33;
					  tmpvar_35.w = tmpvar_34;
					  highp vec4 tmpvar_36;
					  tmpvar_36 = mix (norm2_12, tmpvar_35, vec4(xlat_mutable_Opacity));
					  dest_14 = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  lowp vec4 packednormal_38;
					  packednormal_38 = tmpvar_36;
					  tmpvar_37 = ((packednormal_38.xyz * 2.0) - 1.0);
					  tmpvar_6 = tmpvar_10;
					  tmpvar_7 = tmpvar_11;
					  highp vec4 tmpvar_39;
					  tmpvar_39.w = 1.0;
					  tmpvar_39.xyz = xlv_TEXCOORD5;
					  lightCoord_5 = (unity_WorldToLight * tmpvar_39).xy;
					  lowp float tmpvar_40;
					  tmpvar_40 = texture2D (_LightTexture0, lightCoord_5).w;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_37);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_37);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_37);
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * tmpvar_40);
					  lowp vec4 c_42;
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_10 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_11;
					  c_42.w = c_43.w;
					  c_42.xyz = c_43.xyz;
					  c_4.xyz = c_42.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_7;
					  tmpvar_7[0] = unity_WorldToObject[0].xyz;
					  tmpvar_7[1] = unity_WorldToObject[1].xyz;
					  tmpvar_7[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
					  worldNormal_3 = tmpvar_8;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_11;
					  lowp vec3 tmpvar_12;
					  tmpvar_12 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_13;
					  tmpvar_13.x = worldTangent_2.x;
					  tmpvar_13.y = tmpvar_12.x;
					  tmpvar_13.z = worldNormal_3.x;
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.y;
					  tmpvar_14.y = tmpvar_12.y;
					  tmpvar_14.z = worldNormal_3.y;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.z;
					  tmpvar_15.y = tmpvar_12.z;
					  tmpvar_15.z = worldNormal_3.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_13;
					  xlv_TEXCOORD3 = tmpvar_14;
					  xlv_TEXCOORD4 = tmpvar_15;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  highp vec2 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp float tmpvar_7;
					  lowp vec3 lightDir_8;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_8 = tmpvar_9;
					  tmpvar_6 = vec3(0.0, 0.0, 0.0);
					  tmpvar_7 = 0.0;
					  lowp vec3 tmpvar_10;
					  lowp float tmpvar_11;
					  tmpvar_10 = tmpvar_6;
					  tmpvar_11 = tmpvar_7;
					  highp vec4 norm2_12;
					  highp vec4 norm_13;
					  highp vec4 dest_14;
					  highp vec4 tex2_15;
					  highp vec4 tex_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_16 = tmpvar_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_15 = tmpvar_18;
					  xlat_mutable_Opacity = (_Opacity * tex_16.w);
					  bvec3 tmpvar_19;
					  tmpvar_19 = lessThanEqual (tex2_15.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_20;
					  b_20 = ((2.0 * tex_16.xyz) * tex2_15.xyz);
					  highp vec3 c_21;
					  c_21 = (1.0 - ((2.0 * 
					    (1.0 - tex_16.xyz)
					  ) * (1.0 - tex2_15.xyz)));
					  highp float tmpvar_22;
					  if (tmpvar_19.x) {
					    tmpvar_22 = b_20.x;
					  } else {
					    tmpvar_22 = c_21.x;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_19.y) {
					    tmpvar_23 = b_20.y;
					  } else {
					    tmpvar_23 = c_21.y;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_19.z) {
					    tmpvar_24 = b_20.z;
					  } else {
					    tmpvar_24 = c_21.z;
					  };
					  highp vec3 tmpvar_25;
					  tmpvar_25.x = tmpvar_22;
					  tmpvar_25.y = tmpvar_23;
					  tmpvar_25.z = tmpvar_24;
					  dest_14.xyz = mix (tex2_15.xyz, tmpvar_25, vec3(xlat_mutable_Opacity));
					  dest_14.xyz = (dest_14.xyz * _Color.xyz);
					  tmpvar_10 = dest_14.xyz;
					  tmpvar_11 = (tex2_15.w * _Color.w);
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_13 = tmpvar_26;
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_12 = tmpvar_27;
					  bvec4 tmpvar_28;
					  tmpvar_28 = lessThanEqual (norm2_12, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_29;
					  b_29 = ((2.0 * norm_13) * norm2_12);
					  highp vec4 c_30;
					  c_30 = (1.0 - ((2.0 * 
					    (1.0 - norm_13)
					  ) * (1.0 - norm2_12)));
					  highp float tmpvar_31;
					  if (tmpvar_28.x) {
					    tmpvar_31 = b_29.x;
					  } else {
					    tmpvar_31 = c_30.x;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_28.y) {
					    tmpvar_32 = b_29.y;
					  } else {
					    tmpvar_32 = c_30.y;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_28.z) {
					    tmpvar_33 = b_29.z;
					  } else {
					    tmpvar_33 = c_30.z;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_28.w) {
					    tmpvar_34 = b_29.w;
					  } else {
					    tmpvar_34 = c_30.w;
					  };
					  highp vec4 tmpvar_35;
					  tmpvar_35.x = tmpvar_31;
					  tmpvar_35.y = tmpvar_32;
					  tmpvar_35.z = tmpvar_33;
					  tmpvar_35.w = tmpvar_34;
					  highp vec4 tmpvar_36;
					  tmpvar_36 = mix (norm2_12, tmpvar_35, vec4(xlat_mutable_Opacity));
					  dest_14 = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  lowp vec4 packednormal_38;
					  packednormal_38 = tmpvar_36;
					  tmpvar_37 = ((packednormal_38.xyz * 2.0) - 1.0);
					  tmpvar_6 = tmpvar_10;
					  tmpvar_7 = tmpvar_11;
					  highp vec4 tmpvar_39;
					  tmpvar_39.w = 1.0;
					  tmpvar_39.xyz = xlv_TEXCOORD5;
					  lightCoord_5 = (unity_WorldToLight * tmpvar_39).xy;
					  lowp float tmpvar_40;
					  tmpvar_40 = texture2D (_LightTexture0, lightCoord_5).w;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_37);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_37);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_37);
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * tmpvar_40);
					  lowp vec4 c_42;
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_10 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_11;
					  c_42.w = c_43.w;
					  c_42.xyz = c_43.xyz;
					  c_4.xyz = c_42.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  tmpvar_6.w = 1.0;
					  tmpvar_6.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_7;
					  tmpvar_7[0] = unity_WorldToObject[0].xyz;
					  tmpvar_7[1] = unity_WorldToObject[1].xyz;
					  tmpvar_7[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
					  worldNormal_3 = tmpvar_8;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_11;
					  lowp vec3 tmpvar_12;
					  tmpvar_12 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_13;
					  tmpvar_13.x = worldTangent_2.x;
					  tmpvar_13.y = tmpvar_12.x;
					  tmpvar_13.z = worldNormal_3.x;
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.y;
					  tmpvar_14.y = tmpvar_12.y;
					  tmpvar_14.z = worldNormal_3.y;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.z;
					  tmpvar_15.y = tmpvar_12.z;
					  tmpvar_15.z = worldNormal_3.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_13;
					  xlv_TEXCOORD3 = tmpvar_14;
					  xlv_TEXCOORD4 = tmpvar_15;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  highp vec2 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp float tmpvar_7;
					  lowp vec3 lightDir_8;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_8 = tmpvar_9;
					  tmpvar_6 = vec3(0.0, 0.0, 0.0);
					  tmpvar_7 = 0.0;
					  lowp vec3 tmpvar_10;
					  lowp float tmpvar_11;
					  tmpvar_10 = tmpvar_6;
					  tmpvar_11 = tmpvar_7;
					  highp vec4 norm2_12;
					  highp vec4 norm_13;
					  highp vec4 dest_14;
					  highp vec4 tex2_15;
					  highp vec4 tex_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_16 = tmpvar_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_15 = tmpvar_18;
					  xlat_mutable_Opacity = (_Opacity * tex_16.w);
					  bvec3 tmpvar_19;
					  tmpvar_19 = lessThanEqual (tex2_15.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_20;
					  b_20 = ((2.0 * tex_16.xyz) * tex2_15.xyz);
					  highp vec3 c_21;
					  c_21 = (1.0 - ((2.0 * 
					    (1.0 - tex_16.xyz)
					  ) * (1.0 - tex2_15.xyz)));
					  highp float tmpvar_22;
					  if (tmpvar_19.x) {
					    tmpvar_22 = b_20.x;
					  } else {
					    tmpvar_22 = c_21.x;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_19.y) {
					    tmpvar_23 = b_20.y;
					  } else {
					    tmpvar_23 = c_21.y;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_19.z) {
					    tmpvar_24 = b_20.z;
					  } else {
					    tmpvar_24 = c_21.z;
					  };
					  highp vec3 tmpvar_25;
					  tmpvar_25.x = tmpvar_22;
					  tmpvar_25.y = tmpvar_23;
					  tmpvar_25.z = tmpvar_24;
					  dest_14.xyz = mix (tex2_15.xyz, tmpvar_25, vec3(xlat_mutable_Opacity));
					  dest_14.xyz = (dest_14.xyz * _Color.xyz);
					  tmpvar_10 = dest_14.xyz;
					  tmpvar_11 = (tex2_15.w * _Color.w);
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_13 = tmpvar_26;
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_12 = tmpvar_27;
					  bvec4 tmpvar_28;
					  tmpvar_28 = lessThanEqual (norm2_12, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_29;
					  b_29 = ((2.0 * norm_13) * norm2_12);
					  highp vec4 c_30;
					  c_30 = (1.0 - ((2.0 * 
					    (1.0 - norm_13)
					  ) * (1.0 - norm2_12)));
					  highp float tmpvar_31;
					  if (tmpvar_28.x) {
					    tmpvar_31 = b_29.x;
					  } else {
					    tmpvar_31 = c_30.x;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_28.y) {
					    tmpvar_32 = b_29.y;
					  } else {
					    tmpvar_32 = c_30.y;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_28.z) {
					    tmpvar_33 = b_29.z;
					  } else {
					    tmpvar_33 = c_30.z;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_28.w) {
					    tmpvar_34 = b_29.w;
					  } else {
					    tmpvar_34 = c_30.w;
					  };
					  highp vec4 tmpvar_35;
					  tmpvar_35.x = tmpvar_31;
					  tmpvar_35.y = tmpvar_32;
					  tmpvar_35.z = tmpvar_33;
					  tmpvar_35.w = tmpvar_34;
					  highp vec4 tmpvar_36;
					  tmpvar_36 = mix (norm2_12, tmpvar_35, vec4(xlat_mutable_Opacity));
					  dest_14 = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  lowp vec4 packednormal_38;
					  packednormal_38 = tmpvar_36;
					  tmpvar_37 = ((packednormal_38.xyz * 2.0) - 1.0);
					  tmpvar_6 = tmpvar_10;
					  tmpvar_7 = tmpvar_11;
					  highp vec4 tmpvar_39;
					  tmpvar_39.w = 1.0;
					  tmpvar_39.xyz = xlv_TEXCOORD5;
					  lightCoord_5 = (unity_WorldToLight * tmpvar_39).xy;
					  lowp float tmpvar_40;
					  tmpvar_40 = texture2D (_LightTexture0, lightCoord_5).w;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_37);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_37);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_37);
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * tmpvar_40);
					  lowp vec4 c_42;
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_10 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_11;
					  c_42.w = c_43.w;
					  c_42.xyz = c_43.xyz;
					  c_4.xyz = c_42.xyz;
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "POINT" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  lowp vec3 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  highp vec3 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp float tmpvar_7;
					  lowp vec3 lightDir_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD5));
					  lightDir_8 = tmpvar_9;
					  tmpvar_6 = vec3(0.0, 0.0, 0.0);
					  tmpvar_7 = 0.0;
					  lowp vec3 tmpvar_10;
					  lowp float tmpvar_11;
					  tmpvar_10 = tmpvar_6;
					  tmpvar_11 = tmpvar_7;
					  highp vec4 norm2_12;
					  highp vec4 norm_13;
					  highp vec4 dest_14;
					  highp vec4 tex2_15;
					  highp vec4 tex_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_16 = tmpvar_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_15 = tmpvar_18;
					  xlat_mutable_Opacity = (_Opacity * tex_16.w);
					  bvec3 tmpvar_19;
					  tmpvar_19 = lessThanEqual (tex2_15.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_20;
					  b_20 = ((2.0 * tex_16.xyz) * tex2_15.xyz);
					  highp vec3 c_21;
					  c_21 = (1.0 - ((2.0 * 
					    (1.0 - tex_16.xyz)
					  ) * (1.0 - tex2_15.xyz)));
					  highp float tmpvar_22;
					  if (tmpvar_19.x) {
					    tmpvar_22 = b_20.x;
					  } else {
					    tmpvar_22 = c_21.x;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_19.y) {
					    tmpvar_23 = b_20.y;
					  } else {
					    tmpvar_23 = c_21.y;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_19.z) {
					    tmpvar_24 = b_20.z;
					  } else {
					    tmpvar_24 = c_21.z;
					  };
					  highp vec3 tmpvar_25;
					  tmpvar_25.x = tmpvar_22;
					  tmpvar_25.y = tmpvar_23;
					  tmpvar_25.z = tmpvar_24;
					  dest_14.xyz = mix (tex2_15.xyz, tmpvar_25, vec3(xlat_mutable_Opacity));
					  dest_14.xyz = (dest_14.xyz * _Color.xyz);
					  tmpvar_10 = dest_14.xyz;
					  tmpvar_11 = (tex2_15.w * _Color.w);
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_13 = tmpvar_26;
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_12 = tmpvar_27;
					  bvec4 tmpvar_28;
					  tmpvar_28 = lessThanEqual (norm2_12, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_29;
					  b_29 = ((2.0 * norm_13) * norm2_12);
					  highp vec4 c_30;
					  c_30 = (1.0 - ((2.0 * 
					    (1.0 - norm_13)
					  ) * (1.0 - norm2_12)));
					  highp float tmpvar_31;
					  if (tmpvar_28.x) {
					    tmpvar_31 = b_29.x;
					  } else {
					    tmpvar_31 = c_30.x;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_28.y) {
					    tmpvar_32 = b_29.y;
					  } else {
					    tmpvar_32 = c_30.y;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_28.z) {
					    tmpvar_33 = b_29.z;
					  } else {
					    tmpvar_33 = c_30.z;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_28.w) {
					    tmpvar_34 = b_29.w;
					  } else {
					    tmpvar_34 = c_30.w;
					  };
					  highp vec4 tmpvar_35;
					  tmpvar_35.x = tmpvar_31;
					  tmpvar_35.y = tmpvar_32;
					  tmpvar_35.z = tmpvar_33;
					  tmpvar_35.w = tmpvar_34;
					  highp vec4 tmpvar_36;
					  tmpvar_36 = mix (norm2_12, tmpvar_35, vec4(xlat_mutable_Opacity));
					  dest_14 = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  lowp vec4 packednormal_38;
					  packednormal_38 = tmpvar_36;
					  tmpvar_37 = ((packednormal_38.xyz * 2.0) - 1.0);
					  tmpvar_6 = tmpvar_10;
					  tmpvar_7 = tmpvar_11;
					  highp vec4 tmpvar_39;
					  tmpvar_39.w = 1.0;
					  tmpvar_39.xyz = xlv_TEXCOORD5;
					  lightCoord_5 = (unity_WorldToLight * tmpvar_39).xyz;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (lightCoord_5, lightCoord_5);
					  lowp float tmpvar_41;
					  tmpvar_41 = texture2D (_LightTexture0, vec2(tmpvar_40)).w;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_37);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_37);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_37);
					  lowp vec3 tmpvar_42;
					  tmpvar_42 = normalize(worldN_3);
					  worldN_3 = tmpvar_42;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * tmpvar_41);
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_42, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_10 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_11;
					  highp float tmpvar_46;
					  tmpvar_46 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = (c_43.xyz * vec3(tmpvar_46));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "POINT" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  lowp vec3 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  highp vec3 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp float tmpvar_7;
					  lowp vec3 lightDir_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD5));
					  lightDir_8 = tmpvar_9;
					  tmpvar_6 = vec3(0.0, 0.0, 0.0);
					  tmpvar_7 = 0.0;
					  lowp vec3 tmpvar_10;
					  lowp float tmpvar_11;
					  tmpvar_10 = tmpvar_6;
					  tmpvar_11 = tmpvar_7;
					  highp vec4 norm2_12;
					  highp vec4 norm_13;
					  highp vec4 dest_14;
					  highp vec4 tex2_15;
					  highp vec4 tex_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_16 = tmpvar_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_15 = tmpvar_18;
					  xlat_mutable_Opacity = (_Opacity * tex_16.w);
					  bvec3 tmpvar_19;
					  tmpvar_19 = lessThanEqual (tex2_15.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_20;
					  b_20 = ((2.0 * tex_16.xyz) * tex2_15.xyz);
					  highp vec3 c_21;
					  c_21 = (1.0 - ((2.0 * 
					    (1.0 - tex_16.xyz)
					  ) * (1.0 - tex2_15.xyz)));
					  highp float tmpvar_22;
					  if (tmpvar_19.x) {
					    tmpvar_22 = b_20.x;
					  } else {
					    tmpvar_22 = c_21.x;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_19.y) {
					    tmpvar_23 = b_20.y;
					  } else {
					    tmpvar_23 = c_21.y;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_19.z) {
					    tmpvar_24 = b_20.z;
					  } else {
					    tmpvar_24 = c_21.z;
					  };
					  highp vec3 tmpvar_25;
					  tmpvar_25.x = tmpvar_22;
					  tmpvar_25.y = tmpvar_23;
					  tmpvar_25.z = tmpvar_24;
					  dest_14.xyz = mix (tex2_15.xyz, tmpvar_25, vec3(xlat_mutable_Opacity));
					  dest_14.xyz = (dest_14.xyz * _Color.xyz);
					  tmpvar_10 = dest_14.xyz;
					  tmpvar_11 = (tex2_15.w * _Color.w);
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_13 = tmpvar_26;
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_12 = tmpvar_27;
					  bvec4 tmpvar_28;
					  tmpvar_28 = lessThanEqual (norm2_12, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_29;
					  b_29 = ((2.0 * norm_13) * norm2_12);
					  highp vec4 c_30;
					  c_30 = (1.0 - ((2.0 * 
					    (1.0 - norm_13)
					  ) * (1.0 - norm2_12)));
					  highp float tmpvar_31;
					  if (tmpvar_28.x) {
					    tmpvar_31 = b_29.x;
					  } else {
					    tmpvar_31 = c_30.x;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_28.y) {
					    tmpvar_32 = b_29.y;
					  } else {
					    tmpvar_32 = c_30.y;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_28.z) {
					    tmpvar_33 = b_29.z;
					  } else {
					    tmpvar_33 = c_30.z;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_28.w) {
					    tmpvar_34 = b_29.w;
					  } else {
					    tmpvar_34 = c_30.w;
					  };
					  highp vec4 tmpvar_35;
					  tmpvar_35.x = tmpvar_31;
					  tmpvar_35.y = tmpvar_32;
					  tmpvar_35.z = tmpvar_33;
					  tmpvar_35.w = tmpvar_34;
					  highp vec4 tmpvar_36;
					  tmpvar_36 = mix (norm2_12, tmpvar_35, vec4(xlat_mutable_Opacity));
					  dest_14 = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  lowp vec4 packednormal_38;
					  packednormal_38 = tmpvar_36;
					  tmpvar_37 = ((packednormal_38.xyz * 2.0) - 1.0);
					  tmpvar_6 = tmpvar_10;
					  tmpvar_7 = tmpvar_11;
					  highp vec4 tmpvar_39;
					  tmpvar_39.w = 1.0;
					  tmpvar_39.xyz = xlv_TEXCOORD5;
					  lightCoord_5 = (unity_WorldToLight * tmpvar_39).xyz;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (lightCoord_5, lightCoord_5);
					  lowp float tmpvar_41;
					  tmpvar_41 = texture2D (_LightTexture0, vec2(tmpvar_40)).w;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_37);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_37);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_37);
					  lowp vec3 tmpvar_42;
					  tmpvar_42 = normalize(worldN_3);
					  worldN_3 = tmpvar_42;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * tmpvar_41);
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_42, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_10 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_11;
					  highp float tmpvar_46;
					  tmpvar_46 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = (c_43.xyz * vec3(tmpvar_46));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "POINT" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  lowp vec3 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  highp vec3 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp float tmpvar_7;
					  lowp vec3 lightDir_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD5));
					  lightDir_8 = tmpvar_9;
					  tmpvar_6 = vec3(0.0, 0.0, 0.0);
					  tmpvar_7 = 0.0;
					  lowp vec3 tmpvar_10;
					  lowp float tmpvar_11;
					  tmpvar_10 = tmpvar_6;
					  tmpvar_11 = tmpvar_7;
					  highp vec4 norm2_12;
					  highp vec4 norm_13;
					  highp vec4 dest_14;
					  highp vec4 tex2_15;
					  highp vec4 tex_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_16 = tmpvar_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_15 = tmpvar_18;
					  xlat_mutable_Opacity = (_Opacity * tex_16.w);
					  bvec3 tmpvar_19;
					  tmpvar_19 = lessThanEqual (tex2_15.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_20;
					  b_20 = ((2.0 * tex_16.xyz) * tex2_15.xyz);
					  highp vec3 c_21;
					  c_21 = (1.0 - ((2.0 * 
					    (1.0 - tex_16.xyz)
					  ) * (1.0 - tex2_15.xyz)));
					  highp float tmpvar_22;
					  if (tmpvar_19.x) {
					    tmpvar_22 = b_20.x;
					  } else {
					    tmpvar_22 = c_21.x;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_19.y) {
					    tmpvar_23 = b_20.y;
					  } else {
					    tmpvar_23 = c_21.y;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_19.z) {
					    tmpvar_24 = b_20.z;
					  } else {
					    tmpvar_24 = c_21.z;
					  };
					  highp vec3 tmpvar_25;
					  tmpvar_25.x = tmpvar_22;
					  tmpvar_25.y = tmpvar_23;
					  tmpvar_25.z = tmpvar_24;
					  dest_14.xyz = mix (tex2_15.xyz, tmpvar_25, vec3(xlat_mutable_Opacity));
					  dest_14.xyz = (dest_14.xyz * _Color.xyz);
					  tmpvar_10 = dest_14.xyz;
					  tmpvar_11 = (tex2_15.w * _Color.w);
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_13 = tmpvar_26;
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_12 = tmpvar_27;
					  bvec4 tmpvar_28;
					  tmpvar_28 = lessThanEqual (norm2_12, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_29;
					  b_29 = ((2.0 * norm_13) * norm2_12);
					  highp vec4 c_30;
					  c_30 = (1.0 - ((2.0 * 
					    (1.0 - norm_13)
					  ) * (1.0 - norm2_12)));
					  highp float tmpvar_31;
					  if (tmpvar_28.x) {
					    tmpvar_31 = b_29.x;
					  } else {
					    tmpvar_31 = c_30.x;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_28.y) {
					    tmpvar_32 = b_29.y;
					  } else {
					    tmpvar_32 = c_30.y;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_28.z) {
					    tmpvar_33 = b_29.z;
					  } else {
					    tmpvar_33 = c_30.z;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_28.w) {
					    tmpvar_34 = b_29.w;
					  } else {
					    tmpvar_34 = c_30.w;
					  };
					  highp vec4 tmpvar_35;
					  tmpvar_35.x = tmpvar_31;
					  tmpvar_35.y = tmpvar_32;
					  tmpvar_35.z = tmpvar_33;
					  tmpvar_35.w = tmpvar_34;
					  highp vec4 tmpvar_36;
					  tmpvar_36 = mix (norm2_12, tmpvar_35, vec4(xlat_mutable_Opacity));
					  dest_14 = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  lowp vec4 packednormal_38;
					  packednormal_38 = tmpvar_36;
					  tmpvar_37 = ((packednormal_38.xyz * 2.0) - 1.0);
					  tmpvar_6 = tmpvar_10;
					  tmpvar_7 = tmpvar_11;
					  highp vec4 tmpvar_39;
					  tmpvar_39.w = 1.0;
					  tmpvar_39.xyz = xlv_TEXCOORD5;
					  lightCoord_5 = (unity_WorldToLight * tmpvar_39).xyz;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (lightCoord_5, lightCoord_5);
					  lowp float tmpvar_41;
					  tmpvar_41 = texture2D (_LightTexture0, vec2(tmpvar_40)).w;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_37);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_37);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_37);
					  lowp vec3 tmpvar_42;
					  tmpvar_42 = normalize(worldN_3);
					  worldN_3 = tmpvar_42;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * tmpvar_41);
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_42, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_10 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_11;
					  highp float tmpvar_46;
					  tmpvar_46 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = (c_43.xyz * vec3(tmpvar_46));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  lowp vec3 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_36);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_36);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_36);
					  lowp vec3 tmpvar_38;
					  tmpvar_38 = normalize(worldN_3);
					  worldN_3 = tmpvar_38;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_39;
					  lowp float diff_40;
					  mediump float tmpvar_41;
					  tmpvar_41 = max (0.0, dot (tmpvar_38, tmpvar_2));
					  diff_40 = tmpvar_41;
					  c_39.xyz = ((tmpvar_9 * tmpvar_1) * diff_40);
					  c_39.w = tmpvar_10;
					  highp float tmpvar_42;
					  tmpvar_42 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = (c_39.xyz * vec3(tmpvar_42));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  lowp vec3 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_36);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_36);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_36);
					  lowp vec3 tmpvar_38;
					  tmpvar_38 = normalize(worldN_3);
					  worldN_3 = tmpvar_38;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_39;
					  lowp float diff_40;
					  mediump float tmpvar_41;
					  tmpvar_41 = max (0.0, dot (tmpvar_38, tmpvar_2));
					  diff_40 = tmpvar_41;
					  c_39.xyz = ((tmpvar_9 * tmpvar_1) * diff_40);
					  c_39.w = tmpvar_10;
					  highp float tmpvar_42;
					  tmpvar_42 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = (c_39.xyz * vec3(tmpvar_42));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  lowp vec3 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  lowp vec3 lightDir_7;
					  mediump vec3 tmpvar_8;
					  tmpvar_8 = _WorldSpaceLightPos0.xyz;
					  lightDir_7 = tmpvar_8;
					  tmpvar_5 = vec3(0.0, 0.0, 0.0);
					  tmpvar_6 = 0.0;
					  lowp vec3 tmpvar_9;
					  lowp float tmpvar_10;
					  tmpvar_9 = tmpvar_5;
					  tmpvar_10 = tmpvar_6;
					  highp vec4 norm2_11;
					  highp vec4 norm_12;
					  highp vec4 dest_13;
					  highp vec4 tex2_14;
					  highp vec4 tex_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_15 = tmpvar_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_14 = tmpvar_17;
					  xlat_mutable_Opacity = (_Opacity * tex_15.w);
					  bvec3 tmpvar_18;
					  tmpvar_18 = lessThanEqual (tex2_14.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_19;
					  b_19 = ((2.0 * tex_15.xyz) * tex2_14.xyz);
					  highp vec3 c_20;
					  c_20 = (1.0 - ((2.0 * 
					    (1.0 - tex_15.xyz)
					  ) * (1.0 - tex2_14.xyz)));
					  highp float tmpvar_21;
					  if (tmpvar_18.x) {
					    tmpvar_21 = b_19.x;
					  } else {
					    tmpvar_21 = c_20.x;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_18.y) {
					    tmpvar_22 = b_19.y;
					  } else {
					    tmpvar_22 = c_20.y;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_18.z) {
					    tmpvar_23 = b_19.z;
					  } else {
					    tmpvar_23 = c_20.z;
					  };
					  highp vec3 tmpvar_24;
					  tmpvar_24.x = tmpvar_21;
					  tmpvar_24.y = tmpvar_22;
					  tmpvar_24.z = tmpvar_23;
					  dest_13.xyz = mix (tex2_14.xyz, tmpvar_24, vec3(xlat_mutable_Opacity));
					  dest_13.xyz = (dest_13.xyz * _Color.xyz);
					  tmpvar_9 = dest_13.xyz;
					  tmpvar_10 = (tex2_14.w * _Color.w);
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_12 = tmpvar_25;
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_11 = tmpvar_26;
					  bvec4 tmpvar_27;
					  tmpvar_27 = lessThanEqual (norm2_11, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_28;
					  b_28 = ((2.0 * norm_12) * norm2_11);
					  highp vec4 c_29;
					  c_29 = (1.0 - ((2.0 * 
					    (1.0 - norm_12)
					  ) * (1.0 - norm2_11)));
					  highp float tmpvar_30;
					  if (tmpvar_27.x) {
					    tmpvar_30 = b_28.x;
					  } else {
					    tmpvar_30 = c_29.x;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_27.y) {
					    tmpvar_31 = b_28.y;
					  } else {
					    tmpvar_31 = c_29.y;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_27.z) {
					    tmpvar_32 = b_28.z;
					  } else {
					    tmpvar_32 = c_29.z;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_27.w) {
					    tmpvar_33 = b_28.w;
					  } else {
					    tmpvar_33 = c_29.w;
					  };
					  highp vec4 tmpvar_34;
					  tmpvar_34.x = tmpvar_30;
					  tmpvar_34.y = tmpvar_31;
					  tmpvar_34.z = tmpvar_32;
					  tmpvar_34.w = tmpvar_33;
					  highp vec4 tmpvar_35;
					  tmpvar_35 = mix (norm2_11, tmpvar_34, vec4(xlat_mutable_Opacity));
					  dest_13 = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  lowp vec4 packednormal_37;
					  packednormal_37 = tmpvar_35;
					  tmpvar_36 = ((packednormal_37.xyz * 2.0) - 1.0);
					  tmpvar_5 = tmpvar_9;
					  tmpvar_6 = tmpvar_10;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_36);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_36);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_36);
					  lowp vec3 tmpvar_38;
					  tmpvar_38 = normalize(worldN_3);
					  worldN_3 = tmpvar_38;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_7;
					  lowp vec4 c_39;
					  lowp float diff_40;
					  mediump float tmpvar_41;
					  tmpvar_41 = max (0.0, dot (tmpvar_38, tmpvar_2));
					  diff_40 = tmpvar_41;
					  c_39.xyz = ((tmpvar_9 * tmpvar_1) * diff_40);
					  c_39.w = tmpvar_10;
					  highp float tmpvar_42;
					  tmpvar_42 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = (c_39.xyz * vec3(tmpvar_42));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "SPOT" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  lowp vec3 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp float atten_5;
					  highp vec4 lightCoord_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD5));
					  lightDir_9 = tmpvar_10;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_11;
					  lowp float tmpvar_12;
					  tmpvar_11 = tmpvar_7;
					  tmpvar_12 = tmpvar_8;
					  highp vec4 norm2_13;
					  highp vec4 norm_14;
					  highp vec4 dest_15;
					  highp vec4 tex2_16;
					  highp vec4 tex_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_17 = tmpvar_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_16 = tmpvar_19;
					  xlat_mutable_Opacity = (_Opacity * tex_17.w);
					  bvec3 tmpvar_20;
					  tmpvar_20 = lessThanEqual (tex2_16.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_21;
					  b_21 = ((2.0 * tex_17.xyz) * tex2_16.xyz);
					  highp vec3 c_22;
					  c_22 = (1.0 - ((2.0 * 
					    (1.0 - tex_17.xyz)
					  ) * (1.0 - tex2_16.xyz)));
					  highp float tmpvar_23;
					  if (tmpvar_20.x) {
					    tmpvar_23 = b_21.x;
					  } else {
					    tmpvar_23 = c_22.x;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_20.y) {
					    tmpvar_24 = b_21.y;
					  } else {
					    tmpvar_24 = c_22.y;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_20.z) {
					    tmpvar_25 = b_21.z;
					  } else {
					    tmpvar_25 = c_22.z;
					  };
					  highp vec3 tmpvar_26;
					  tmpvar_26.x = tmpvar_23;
					  tmpvar_26.y = tmpvar_24;
					  tmpvar_26.z = tmpvar_25;
					  dest_15.xyz = mix (tex2_16.xyz, tmpvar_26, vec3(xlat_mutable_Opacity));
					  dest_15.xyz = (dest_15.xyz * _Color.xyz);
					  tmpvar_11 = dest_15.xyz;
					  tmpvar_12 = (tex2_16.w * _Color.w);
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_14 = tmpvar_27;
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_13 = tmpvar_28;
					  bvec4 tmpvar_29;
					  tmpvar_29 = lessThanEqual (norm2_13, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_30;
					  b_30 = ((2.0 * norm_14) * norm2_13);
					  highp vec4 c_31;
					  c_31 = (1.0 - ((2.0 * 
					    (1.0 - norm_14)
					  ) * (1.0 - norm2_13)));
					  highp float tmpvar_32;
					  if (tmpvar_29.x) {
					    tmpvar_32 = b_30.x;
					  } else {
					    tmpvar_32 = c_31.x;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_29.y) {
					    tmpvar_33 = b_30.y;
					  } else {
					    tmpvar_33 = c_31.y;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_29.z) {
					    tmpvar_34 = b_30.z;
					  } else {
					    tmpvar_34 = c_31.z;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_29.w) {
					    tmpvar_35 = b_30.w;
					  } else {
					    tmpvar_35 = c_31.w;
					  };
					  highp vec4 tmpvar_36;
					  tmpvar_36.x = tmpvar_32;
					  tmpvar_36.y = tmpvar_33;
					  tmpvar_36.z = tmpvar_34;
					  tmpvar_36.w = tmpvar_35;
					  highp vec4 tmpvar_37;
					  tmpvar_37 = mix (norm2_13, tmpvar_36, vec4(xlat_mutable_Opacity));
					  dest_15 = tmpvar_37;
					  lowp vec3 tmpvar_38;
					  lowp vec4 packednormal_39;
					  packednormal_39 = tmpvar_37;
					  tmpvar_38 = ((packednormal_39.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_11;
					  tmpvar_8 = tmpvar_12;
					  highp vec4 tmpvar_40;
					  tmpvar_40.w = 1.0;
					  tmpvar_40.xyz = xlv_TEXCOORD5;
					  lightCoord_6 = (unity_WorldToLight * tmpvar_40);
					  lowp vec4 tmpvar_41;
					  highp vec2 P_42;
					  P_42 = ((lightCoord_6.xy / lightCoord_6.w) + 0.5);
					  tmpvar_41 = texture2D (_LightTexture0, P_42);
					  highp float tmpvar_43;
					  tmpvar_43 = dot (lightCoord_6.xyz, lightCoord_6.xyz);
					  lowp vec4 tmpvar_44;
					  tmpvar_44 = texture2D (_LightTextureB0, vec2(tmpvar_43));
					  highp float tmpvar_45;
					  tmpvar_45 = ((float(
					    (lightCoord_6.z > 0.0)
					  ) * tmpvar_41.w) * tmpvar_44.w);
					  atten_5 = tmpvar_45;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_38);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_38);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_38);
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = normalize(worldN_3);
					  worldN_3 = tmpvar_46;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_9;
					  tmpvar_1 = (tmpvar_1 * atten_5);
					  lowp vec4 c_47;
					  lowp float diff_48;
					  mediump float tmpvar_49;
					  tmpvar_49 = max (0.0, dot (tmpvar_46, tmpvar_2));
					  diff_48 = tmpvar_49;
					  c_47.xyz = ((tmpvar_11 * tmpvar_1) * diff_48);
					  c_47.w = tmpvar_12;
					  highp float tmpvar_50;
					  tmpvar_50 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = (c_47.xyz * vec3(tmpvar_50));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "SPOT" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  lowp vec3 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp float atten_5;
					  highp vec4 lightCoord_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD5));
					  lightDir_9 = tmpvar_10;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_11;
					  lowp float tmpvar_12;
					  tmpvar_11 = tmpvar_7;
					  tmpvar_12 = tmpvar_8;
					  highp vec4 norm2_13;
					  highp vec4 norm_14;
					  highp vec4 dest_15;
					  highp vec4 tex2_16;
					  highp vec4 tex_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_17 = tmpvar_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_16 = tmpvar_19;
					  xlat_mutable_Opacity = (_Opacity * tex_17.w);
					  bvec3 tmpvar_20;
					  tmpvar_20 = lessThanEqual (tex2_16.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_21;
					  b_21 = ((2.0 * tex_17.xyz) * tex2_16.xyz);
					  highp vec3 c_22;
					  c_22 = (1.0 - ((2.0 * 
					    (1.0 - tex_17.xyz)
					  ) * (1.0 - tex2_16.xyz)));
					  highp float tmpvar_23;
					  if (tmpvar_20.x) {
					    tmpvar_23 = b_21.x;
					  } else {
					    tmpvar_23 = c_22.x;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_20.y) {
					    tmpvar_24 = b_21.y;
					  } else {
					    tmpvar_24 = c_22.y;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_20.z) {
					    tmpvar_25 = b_21.z;
					  } else {
					    tmpvar_25 = c_22.z;
					  };
					  highp vec3 tmpvar_26;
					  tmpvar_26.x = tmpvar_23;
					  tmpvar_26.y = tmpvar_24;
					  tmpvar_26.z = tmpvar_25;
					  dest_15.xyz = mix (tex2_16.xyz, tmpvar_26, vec3(xlat_mutable_Opacity));
					  dest_15.xyz = (dest_15.xyz * _Color.xyz);
					  tmpvar_11 = dest_15.xyz;
					  tmpvar_12 = (tex2_16.w * _Color.w);
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_14 = tmpvar_27;
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_13 = tmpvar_28;
					  bvec4 tmpvar_29;
					  tmpvar_29 = lessThanEqual (norm2_13, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_30;
					  b_30 = ((2.0 * norm_14) * norm2_13);
					  highp vec4 c_31;
					  c_31 = (1.0 - ((2.0 * 
					    (1.0 - norm_14)
					  ) * (1.0 - norm2_13)));
					  highp float tmpvar_32;
					  if (tmpvar_29.x) {
					    tmpvar_32 = b_30.x;
					  } else {
					    tmpvar_32 = c_31.x;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_29.y) {
					    tmpvar_33 = b_30.y;
					  } else {
					    tmpvar_33 = c_31.y;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_29.z) {
					    tmpvar_34 = b_30.z;
					  } else {
					    tmpvar_34 = c_31.z;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_29.w) {
					    tmpvar_35 = b_30.w;
					  } else {
					    tmpvar_35 = c_31.w;
					  };
					  highp vec4 tmpvar_36;
					  tmpvar_36.x = tmpvar_32;
					  tmpvar_36.y = tmpvar_33;
					  tmpvar_36.z = tmpvar_34;
					  tmpvar_36.w = tmpvar_35;
					  highp vec4 tmpvar_37;
					  tmpvar_37 = mix (norm2_13, tmpvar_36, vec4(xlat_mutable_Opacity));
					  dest_15 = tmpvar_37;
					  lowp vec3 tmpvar_38;
					  lowp vec4 packednormal_39;
					  packednormal_39 = tmpvar_37;
					  tmpvar_38 = ((packednormal_39.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_11;
					  tmpvar_8 = tmpvar_12;
					  highp vec4 tmpvar_40;
					  tmpvar_40.w = 1.0;
					  tmpvar_40.xyz = xlv_TEXCOORD5;
					  lightCoord_6 = (unity_WorldToLight * tmpvar_40);
					  lowp vec4 tmpvar_41;
					  highp vec2 P_42;
					  P_42 = ((lightCoord_6.xy / lightCoord_6.w) + 0.5);
					  tmpvar_41 = texture2D (_LightTexture0, P_42);
					  highp float tmpvar_43;
					  tmpvar_43 = dot (lightCoord_6.xyz, lightCoord_6.xyz);
					  lowp vec4 tmpvar_44;
					  tmpvar_44 = texture2D (_LightTextureB0, vec2(tmpvar_43));
					  highp float tmpvar_45;
					  tmpvar_45 = ((float(
					    (lightCoord_6.z > 0.0)
					  ) * tmpvar_41.w) * tmpvar_44.w);
					  atten_5 = tmpvar_45;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_38);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_38);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_38);
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = normalize(worldN_3);
					  worldN_3 = tmpvar_46;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_9;
					  tmpvar_1 = (tmpvar_1 * atten_5);
					  lowp vec4 c_47;
					  lowp float diff_48;
					  mediump float tmpvar_49;
					  tmpvar_49 = max (0.0, dot (tmpvar_46, tmpvar_2));
					  diff_48 = tmpvar_49;
					  c_47.xyz = ((tmpvar_11 * tmpvar_1) * diff_48);
					  c_47.w = tmpvar_12;
					  highp float tmpvar_50;
					  tmpvar_50 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = (c_47.xyz * vec3(tmpvar_50));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "SPOT" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  lowp vec3 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  lowp float atten_5;
					  highp vec4 lightCoord_6;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  lowp vec3 lightDir_9;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD5));
					  lightDir_9 = tmpvar_10;
					  tmpvar_7 = vec3(0.0, 0.0, 0.0);
					  tmpvar_8 = 0.0;
					  lowp vec3 tmpvar_11;
					  lowp float tmpvar_12;
					  tmpvar_11 = tmpvar_7;
					  tmpvar_12 = tmpvar_8;
					  highp vec4 norm2_13;
					  highp vec4 norm_14;
					  highp vec4 dest_15;
					  highp vec4 tex2_16;
					  highp vec4 tex_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_17 = tmpvar_18;
					  lowp vec4 tmpvar_19;
					  tmpvar_19 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_16 = tmpvar_19;
					  xlat_mutable_Opacity = (_Opacity * tex_17.w);
					  bvec3 tmpvar_20;
					  tmpvar_20 = lessThanEqual (tex2_16.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_21;
					  b_21 = ((2.0 * tex_17.xyz) * tex2_16.xyz);
					  highp vec3 c_22;
					  c_22 = (1.0 - ((2.0 * 
					    (1.0 - tex_17.xyz)
					  ) * (1.0 - tex2_16.xyz)));
					  highp float tmpvar_23;
					  if (tmpvar_20.x) {
					    tmpvar_23 = b_21.x;
					  } else {
					    tmpvar_23 = c_22.x;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_20.y) {
					    tmpvar_24 = b_21.y;
					  } else {
					    tmpvar_24 = c_22.y;
					  };
					  highp float tmpvar_25;
					  if (tmpvar_20.z) {
					    tmpvar_25 = b_21.z;
					  } else {
					    tmpvar_25 = c_22.z;
					  };
					  highp vec3 tmpvar_26;
					  tmpvar_26.x = tmpvar_23;
					  tmpvar_26.y = tmpvar_24;
					  tmpvar_26.z = tmpvar_25;
					  dest_15.xyz = mix (tex2_16.xyz, tmpvar_26, vec3(xlat_mutable_Opacity));
					  dest_15.xyz = (dest_15.xyz * _Color.xyz);
					  tmpvar_11 = dest_15.xyz;
					  tmpvar_12 = (tex2_16.w * _Color.w);
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_14 = tmpvar_27;
					  lowp vec4 tmpvar_28;
					  tmpvar_28 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_13 = tmpvar_28;
					  bvec4 tmpvar_29;
					  tmpvar_29 = lessThanEqual (norm2_13, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_30;
					  b_30 = ((2.0 * norm_14) * norm2_13);
					  highp vec4 c_31;
					  c_31 = (1.0 - ((2.0 * 
					    (1.0 - norm_14)
					  ) * (1.0 - norm2_13)));
					  highp float tmpvar_32;
					  if (tmpvar_29.x) {
					    tmpvar_32 = b_30.x;
					  } else {
					    tmpvar_32 = c_31.x;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_29.y) {
					    tmpvar_33 = b_30.y;
					  } else {
					    tmpvar_33 = c_31.y;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_29.z) {
					    tmpvar_34 = b_30.z;
					  } else {
					    tmpvar_34 = c_31.z;
					  };
					  highp float tmpvar_35;
					  if (tmpvar_29.w) {
					    tmpvar_35 = b_30.w;
					  } else {
					    tmpvar_35 = c_31.w;
					  };
					  highp vec4 tmpvar_36;
					  tmpvar_36.x = tmpvar_32;
					  tmpvar_36.y = tmpvar_33;
					  tmpvar_36.z = tmpvar_34;
					  tmpvar_36.w = tmpvar_35;
					  highp vec4 tmpvar_37;
					  tmpvar_37 = mix (norm2_13, tmpvar_36, vec4(xlat_mutable_Opacity));
					  dest_15 = tmpvar_37;
					  lowp vec3 tmpvar_38;
					  lowp vec4 packednormal_39;
					  packednormal_39 = tmpvar_37;
					  tmpvar_38 = ((packednormal_39.xyz * 2.0) - 1.0);
					  tmpvar_7 = tmpvar_11;
					  tmpvar_8 = tmpvar_12;
					  highp vec4 tmpvar_40;
					  tmpvar_40.w = 1.0;
					  tmpvar_40.xyz = xlv_TEXCOORD5;
					  lightCoord_6 = (unity_WorldToLight * tmpvar_40);
					  lowp vec4 tmpvar_41;
					  highp vec2 P_42;
					  P_42 = ((lightCoord_6.xy / lightCoord_6.w) + 0.5);
					  tmpvar_41 = texture2D (_LightTexture0, P_42);
					  highp float tmpvar_43;
					  tmpvar_43 = dot (lightCoord_6.xyz, lightCoord_6.xyz);
					  lowp vec4 tmpvar_44;
					  tmpvar_44 = texture2D (_LightTextureB0, vec2(tmpvar_43));
					  highp float tmpvar_45;
					  tmpvar_45 = ((float(
					    (lightCoord_6.z > 0.0)
					  ) * tmpvar_41.w) * tmpvar_44.w);
					  atten_5 = tmpvar_45;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_38);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_38);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_38);
					  lowp vec3 tmpvar_46;
					  tmpvar_46 = normalize(worldN_3);
					  worldN_3 = tmpvar_46;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_9;
					  tmpvar_1 = (tmpvar_1 * atten_5);
					  lowp vec4 c_47;
					  lowp float diff_48;
					  mediump float tmpvar_49;
					  tmpvar_49 = max (0.0, dot (tmpvar_46, tmpvar_2));
					  diff_48 = tmpvar_49;
					  c_47.xyz = ((tmpvar_11 * tmpvar_1) * diff_48);
					  c_47.w = tmpvar_12;
					  highp float tmpvar_50;
					  tmpvar_50 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = (c_47.xyz * vec3(tmpvar_50));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "POINT_COOKIE" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  lowp vec3 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp samplerCube _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  highp vec3 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp float tmpvar_7;
					  lowp vec3 lightDir_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD5));
					  lightDir_8 = tmpvar_9;
					  tmpvar_6 = vec3(0.0, 0.0, 0.0);
					  tmpvar_7 = 0.0;
					  lowp vec3 tmpvar_10;
					  lowp float tmpvar_11;
					  tmpvar_10 = tmpvar_6;
					  tmpvar_11 = tmpvar_7;
					  highp vec4 norm2_12;
					  highp vec4 norm_13;
					  highp vec4 dest_14;
					  highp vec4 tex2_15;
					  highp vec4 tex_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_16 = tmpvar_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_15 = tmpvar_18;
					  xlat_mutable_Opacity = (_Opacity * tex_16.w);
					  bvec3 tmpvar_19;
					  tmpvar_19 = lessThanEqual (tex2_15.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_20;
					  b_20 = ((2.0 * tex_16.xyz) * tex2_15.xyz);
					  highp vec3 c_21;
					  c_21 = (1.0 - ((2.0 * 
					    (1.0 - tex_16.xyz)
					  ) * (1.0 - tex2_15.xyz)));
					  highp float tmpvar_22;
					  if (tmpvar_19.x) {
					    tmpvar_22 = b_20.x;
					  } else {
					    tmpvar_22 = c_21.x;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_19.y) {
					    tmpvar_23 = b_20.y;
					  } else {
					    tmpvar_23 = c_21.y;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_19.z) {
					    tmpvar_24 = b_20.z;
					  } else {
					    tmpvar_24 = c_21.z;
					  };
					  highp vec3 tmpvar_25;
					  tmpvar_25.x = tmpvar_22;
					  tmpvar_25.y = tmpvar_23;
					  tmpvar_25.z = tmpvar_24;
					  dest_14.xyz = mix (tex2_15.xyz, tmpvar_25, vec3(xlat_mutable_Opacity));
					  dest_14.xyz = (dest_14.xyz * _Color.xyz);
					  tmpvar_10 = dest_14.xyz;
					  tmpvar_11 = (tex2_15.w * _Color.w);
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_13 = tmpvar_26;
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_12 = tmpvar_27;
					  bvec4 tmpvar_28;
					  tmpvar_28 = lessThanEqual (norm2_12, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_29;
					  b_29 = ((2.0 * norm_13) * norm2_12);
					  highp vec4 c_30;
					  c_30 = (1.0 - ((2.0 * 
					    (1.0 - norm_13)
					  ) * (1.0 - norm2_12)));
					  highp float tmpvar_31;
					  if (tmpvar_28.x) {
					    tmpvar_31 = b_29.x;
					  } else {
					    tmpvar_31 = c_30.x;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_28.y) {
					    tmpvar_32 = b_29.y;
					  } else {
					    tmpvar_32 = c_30.y;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_28.z) {
					    tmpvar_33 = b_29.z;
					  } else {
					    tmpvar_33 = c_30.z;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_28.w) {
					    tmpvar_34 = b_29.w;
					  } else {
					    tmpvar_34 = c_30.w;
					  };
					  highp vec4 tmpvar_35;
					  tmpvar_35.x = tmpvar_31;
					  tmpvar_35.y = tmpvar_32;
					  tmpvar_35.z = tmpvar_33;
					  tmpvar_35.w = tmpvar_34;
					  highp vec4 tmpvar_36;
					  tmpvar_36 = mix (norm2_12, tmpvar_35, vec4(xlat_mutable_Opacity));
					  dest_14 = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  lowp vec4 packednormal_38;
					  packednormal_38 = tmpvar_36;
					  tmpvar_37 = ((packednormal_38.xyz * 2.0) - 1.0);
					  tmpvar_6 = tmpvar_10;
					  tmpvar_7 = tmpvar_11;
					  highp vec4 tmpvar_39;
					  tmpvar_39.w = 1.0;
					  tmpvar_39.xyz = xlv_TEXCOORD5;
					  lightCoord_5 = (unity_WorldToLight * tmpvar_39).xyz;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (lightCoord_5, lightCoord_5);
					  lowp float tmpvar_41;
					  tmpvar_41 = (texture2D (_LightTextureB0, vec2(tmpvar_40)).w * textureCube (_LightTexture0, lightCoord_5).w);
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_37);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_37);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_37);
					  lowp vec3 tmpvar_42;
					  tmpvar_42 = normalize(worldN_3);
					  worldN_3 = tmpvar_42;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * tmpvar_41);
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_42, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_10 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_11;
					  highp float tmpvar_46;
					  tmpvar_46 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = (c_43.xyz * vec3(tmpvar_46));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "POINT_COOKIE" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  lowp vec3 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp samplerCube _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  highp vec3 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp float tmpvar_7;
					  lowp vec3 lightDir_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD5));
					  lightDir_8 = tmpvar_9;
					  tmpvar_6 = vec3(0.0, 0.0, 0.0);
					  tmpvar_7 = 0.0;
					  lowp vec3 tmpvar_10;
					  lowp float tmpvar_11;
					  tmpvar_10 = tmpvar_6;
					  tmpvar_11 = tmpvar_7;
					  highp vec4 norm2_12;
					  highp vec4 norm_13;
					  highp vec4 dest_14;
					  highp vec4 tex2_15;
					  highp vec4 tex_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_16 = tmpvar_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_15 = tmpvar_18;
					  xlat_mutable_Opacity = (_Opacity * tex_16.w);
					  bvec3 tmpvar_19;
					  tmpvar_19 = lessThanEqual (tex2_15.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_20;
					  b_20 = ((2.0 * tex_16.xyz) * tex2_15.xyz);
					  highp vec3 c_21;
					  c_21 = (1.0 - ((2.0 * 
					    (1.0 - tex_16.xyz)
					  ) * (1.0 - tex2_15.xyz)));
					  highp float tmpvar_22;
					  if (tmpvar_19.x) {
					    tmpvar_22 = b_20.x;
					  } else {
					    tmpvar_22 = c_21.x;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_19.y) {
					    tmpvar_23 = b_20.y;
					  } else {
					    tmpvar_23 = c_21.y;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_19.z) {
					    tmpvar_24 = b_20.z;
					  } else {
					    tmpvar_24 = c_21.z;
					  };
					  highp vec3 tmpvar_25;
					  tmpvar_25.x = tmpvar_22;
					  tmpvar_25.y = tmpvar_23;
					  tmpvar_25.z = tmpvar_24;
					  dest_14.xyz = mix (tex2_15.xyz, tmpvar_25, vec3(xlat_mutable_Opacity));
					  dest_14.xyz = (dest_14.xyz * _Color.xyz);
					  tmpvar_10 = dest_14.xyz;
					  tmpvar_11 = (tex2_15.w * _Color.w);
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_13 = tmpvar_26;
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_12 = tmpvar_27;
					  bvec4 tmpvar_28;
					  tmpvar_28 = lessThanEqual (norm2_12, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_29;
					  b_29 = ((2.0 * norm_13) * norm2_12);
					  highp vec4 c_30;
					  c_30 = (1.0 - ((2.0 * 
					    (1.0 - norm_13)
					  ) * (1.0 - norm2_12)));
					  highp float tmpvar_31;
					  if (tmpvar_28.x) {
					    tmpvar_31 = b_29.x;
					  } else {
					    tmpvar_31 = c_30.x;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_28.y) {
					    tmpvar_32 = b_29.y;
					  } else {
					    tmpvar_32 = c_30.y;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_28.z) {
					    tmpvar_33 = b_29.z;
					  } else {
					    tmpvar_33 = c_30.z;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_28.w) {
					    tmpvar_34 = b_29.w;
					  } else {
					    tmpvar_34 = c_30.w;
					  };
					  highp vec4 tmpvar_35;
					  tmpvar_35.x = tmpvar_31;
					  tmpvar_35.y = tmpvar_32;
					  tmpvar_35.z = tmpvar_33;
					  tmpvar_35.w = tmpvar_34;
					  highp vec4 tmpvar_36;
					  tmpvar_36 = mix (norm2_12, tmpvar_35, vec4(xlat_mutable_Opacity));
					  dest_14 = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  lowp vec4 packednormal_38;
					  packednormal_38 = tmpvar_36;
					  tmpvar_37 = ((packednormal_38.xyz * 2.0) - 1.0);
					  tmpvar_6 = tmpvar_10;
					  tmpvar_7 = tmpvar_11;
					  highp vec4 tmpvar_39;
					  tmpvar_39.w = 1.0;
					  tmpvar_39.xyz = xlv_TEXCOORD5;
					  lightCoord_5 = (unity_WorldToLight * tmpvar_39).xyz;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (lightCoord_5, lightCoord_5);
					  lowp float tmpvar_41;
					  tmpvar_41 = (texture2D (_LightTextureB0, vec2(tmpvar_40)).w * textureCube (_LightTexture0, lightCoord_5).w);
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_37);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_37);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_37);
					  lowp vec3 tmpvar_42;
					  tmpvar_42 = normalize(worldN_3);
					  worldN_3 = tmpvar_42;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * tmpvar_41);
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_42, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_10 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_11;
					  highp float tmpvar_46;
					  tmpvar_46 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = (c_43.xyz * vec3(tmpvar_46));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "POINT_COOKIE" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  lowp vec3 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform highp vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform lowp samplerCube _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _LightTextureB0;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  highp vec3 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp float tmpvar_7;
					  lowp vec3 lightDir_8;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD5));
					  lightDir_8 = tmpvar_9;
					  tmpvar_6 = vec3(0.0, 0.0, 0.0);
					  tmpvar_7 = 0.0;
					  lowp vec3 tmpvar_10;
					  lowp float tmpvar_11;
					  tmpvar_10 = tmpvar_6;
					  tmpvar_11 = tmpvar_7;
					  highp vec4 norm2_12;
					  highp vec4 norm_13;
					  highp vec4 dest_14;
					  highp vec4 tex2_15;
					  highp vec4 tex_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_16 = tmpvar_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_15 = tmpvar_18;
					  xlat_mutable_Opacity = (_Opacity * tex_16.w);
					  bvec3 tmpvar_19;
					  tmpvar_19 = lessThanEqual (tex2_15.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_20;
					  b_20 = ((2.0 * tex_16.xyz) * tex2_15.xyz);
					  highp vec3 c_21;
					  c_21 = (1.0 - ((2.0 * 
					    (1.0 - tex_16.xyz)
					  ) * (1.0 - tex2_15.xyz)));
					  highp float tmpvar_22;
					  if (tmpvar_19.x) {
					    tmpvar_22 = b_20.x;
					  } else {
					    tmpvar_22 = c_21.x;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_19.y) {
					    tmpvar_23 = b_20.y;
					  } else {
					    tmpvar_23 = c_21.y;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_19.z) {
					    tmpvar_24 = b_20.z;
					  } else {
					    tmpvar_24 = c_21.z;
					  };
					  highp vec3 tmpvar_25;
					  tmpvar_25.x = tmpvar_22;
					  tmpvar_25.y = tmpvar_23;
					  tmpvar_25.z = tmpvar_24;
					  dest_14.xyz = mix (tex2_15.xyz, tmpvar_25, vec3(xlat_mutable_Opacity));
					  dest_14.xyz = (dest_14.xyz * _Color.xyz);
					  tmpvar_10 = dest_14.xyz;
					  tmpvar_11 = (tex2_15.w * _Color.w);
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_13 = tmpvar_26;
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_12 = tmpvar_27;
					  bvec4 tmpvar_28;
					  tmpvar_28 = lessThanEqual (norm2_12, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_29;
					  b_29 = ((2.0 * norm_13) * norm2_12);
					  highp vec4 c_30;
					  c_30 = (1.0 - ((2.0 * 
					    (1.0 - norm_13)
					  ) * (1.0 - norm2_12)));
					  highp float tmpvar_31;
					  if (tmpvar_28.x) {
					    tmpvar_31 = b_29.x;
					  } else {
					    tmpvar_31 = c_30.x;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_28.y) {
					    tmpvar_32 = b_29.y;
					  } else {
					    tmpvar_32 = c_30.y;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_28.z) {
					    tmpvar_33 = b_29.z;
					  } else {
					    tmpvar_33 = c_30.z;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_28.w) {
					    tmpvar_34 = b_29.w;
					  } else {
					    tmpvar_34 = c_30.w;
					  };
					  highp vec4 tmpvar_35;
					  tmpvar_35.x = tmpvar_31;
					  tmpvar_35.y = tmpvar_32;
					  tmpvar_35.z = tmpvar_33;
					  tmpvar_35.w = tmpvar_34;
					  highp vec4 tmpvar_36;
					  tmpvar_36 = mix (norm2_12, tmpvar_35, vec4(xlat_mutable_Opacity));
					  dest_14 = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  lowp vec4 packednormal_38;
					  packednormal_38 = tmpvar_36;
					  tmpvar_37 = ((packednormal_38.xyz * 2.0) - 1.0);
					  tmpvar_6 = tmpvar_10;
					  tmpvar_7 = tmpvar_11;
					  highp vec4 tmpvar_39;
					  tmpvar_39.w = 1.0;
					  tmpvar_39.xyz = xlv_TEXCOORD5;
					  lightCoord_5 = (unity_WorldToLight * tmpvar_39).xyz;
					  highp float tmpvar_40;
					  tmpvar_40 = dot (lightCoord_5, lightCoord_5);
					  lowp float tmpvar_41;
					  tmpvar_41 = (texture2D (_LightTextureB0, vec2(tmpvar_40)).w * textureCube (_LightTexture0, lightCoord_5).w);
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_37);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_37);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_37);
					  lowp vec3 tmpvar_42;
					  tmpvar_42 = normalize(worldN_3);
					  worldN_3 = tmpvar_42;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * tmpvar_41);
					  lowp vec4 c_43;
					  lowp float diff_44;
					  mediump float tmpvar_45;
					  tmpvar_45 = max (0.0, dot (tmpvar_42, tmpvar_2));
					  diff_44 = tmpvar_45;
					  c_43.xyz = ((tmpvar_10 * tmpvar_1) * diff_44);
					  c_43.w = tmpvar_11;
					  highp float tmpvar_46;
					  tmpvar_46 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = (c_43.xyz * vec3(tmpvar_46));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  lowp vec3 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  highp vec2 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp float tmpvar_7;
					  lowp vec3 lightDir_8;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_8 = tmpvar_9;
					  tmpvar_6 = vec3(0.0, 0.0, 0.0);
					  tmpvar_7 = 0.0;
					  lowp vec3 tmpvar_10;
					  lowp float tmpvar_11;
					  tmpvar_10 = tmpvar_6;
					  tmpvar_11 = tmpvar_7;
					  highp vec4 norm2_12;
					  highp vec4 norm_13;
					  highp vec4 dest_14;
					  highp vec4 tex2_15;
					  highp vec4 tex_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_16 = tmpvar_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_15 = tmpvar_18;
					  xlat_mutable_Opacity = (_Opacity * tex_16.w);
					  bvec3 tmpvar_19;
					  tmpvar_19 = lessThanEqual (tex2_15.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_20;
					  b_20 = ((2.0 * tex_16.xyz) * tex2_15.xyz);
					  highp vec3 c_21;
					  c_21 = (1.0 - ((2.0 * 
					    (1.0 - tex_16.xyz)
					  ) * (1.0 - tex2_15.xyz)));
					  highp float tmpvar_22;
					  if (tmpvar_19.x) {
					    tmpvar_22 = b_20.x;
					  } else {
					    tmpvar_22 = c_21.x;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_19.y) {
					    tmpvar_23 = b_20.y;
					  } else {
					    tmpvar_23 = c_21.y;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_19.z) {
					    tmpvar_24 = b_20.z;
					  } else {
					    tmpvar_24 = c_21.z;
					  };
					  highp vec3 tmpvar_25;
					  tmpvar_25.x = tmpvar_22;
					  tmpvar_25.y = tmpvar_23;
					  tmpvar_25.z = tmpvar_24;
					  dest_14.xyz = mix (tex2_15.xyz, tmpvar_25, vec3(xlat_mutable_Opacity));
					  dest_14.xyz = (dest_14.xyz * _Color.xyz);
					  tmpvar_10 = dest_14.xyz;
					  tmpvar_11 = (tex2_15.w * _Color.w);
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_13 = tmpvar_26;
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_12 = tmpvar_27;
					  bvec4 tmpvar_28;
					  tmpvar_28 = lessThanEqual (norm2_12, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_29;
					  b_29 = ((2.0 * norm_13) * norm2_12);
					  highp vec4 c_30;
					  c_30 = (1.0 - ((2.0 * 
					    (1.0 - norm_13)
					  ) * (1.0 - norm2_12)));
					  highp float tmpvar_31;
					  if (tmpvar_28.x) {
					    tmpvar_31 = b_29.x;
					  } else {
					    tmpvar_31 = c_30.x;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_28.y) {
					    tmpvar_32 = b_29.y;
					  } else {
					    tmpvar_32 = c_30.y;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_28.z) {
					    tmpvar_33 = b_29.z;
					  } else {
					    tmpvar_33 = c_30.z;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_28.w) {
					    tmpvar_34 = b_29.w;
					  } else {
					    tmpvar_34 = c_30.w;
					  };
					  highp vec4 tmpvar_35;
					  tmpvar_35.x = tmpvar_31;
					  tmpvar_35.y = tmpvar_32;
					  tmpvar_35.z = tmpvar_33;
					  tmpvar_35.w = tmpvar_34;
					  highp vec4 tmpvar_36;
					  tmpvar_36 = mix (norm2_12, tmpvar_35, vec4(xlat_mutable_Opacity));
					  dest_14 = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  lowp vec4 packednormal_38;
					  packednormal_38 = tmpvar_36;
					  tmpvar_37 = ((packednormal_38.xyz * 2.0) - 1.0);
					  tmpvar_6 = tmpvar_10;
					  tmpvar_7 = tmpvar_11;
					  highp vec4 tmpvar_39;
					  tmpvar_39.w = 1.0;
					  tmpvar_39.xyz = xlv_TEXCOORD5;
					  lightCoord_5 = (unity_WorldToLight * tmpvar_39).xy;
					  lowp float tmpvar_40;
					  tmpvar_40 = texture2D (_LightTexture0, lightCoord_5).w;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_37);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_37);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_37);
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * tmpvar_40);
					  lowp vec4 c_42;
					  lowp float diff_43;
					  mediump float tmpvar_44;
					  tmpvar_44 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_43 = tmpvar_44;
					  c_42.xyz = ((tmpvar_10 * tmpvar_1) * diff_43);
					  c_42.w = tmpvar_11;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = (c_42.xyz * vec3(tmpvar_45));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  lowp vec3 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  highp vec2 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp float tmpvar_7;
					  lowp vec3 lightDir_8;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_8 = tmpvar_9;
					  tmpvar_6 = vec3(0.0, 0.0, 0.0);
					  tmpvar_7 = 0.0;
					  lowp vec3 tmpvar_10;
					  lowp float tmpvar_11;
					  tmpvar_10 = tmpvar_6;
					  tmpvar_11 = tmpvar_7;
					  highp vec4 norm2_12;
					  highp vec4 norm_13;
					  highp vec4 dest_14;
					  highp vec4 tex2_15;
					  highp vec4 tex_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_16 = tmpvar_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_15 = tmpvar_18;
					  xlat_mutable_Opacity = (_Opacity * tex_16.w);
					  bvec3 tmpvar_19;
					  tmpvar_19 = lessThanEqual (tex2_15.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_20;
					  b_20 = ((2.0 * tex_16.xyz) * tex2_15.xyz);
					  highp vec3 c_21;
					  c_21 = (1.0 - ((2.0 * 
					    (1.0 - tex_16.xyz)
					  ) * (1.0 - tex2_15.xyz)));
					  highp float tmpvar_22;
					  if (tmpvar_19.x) {
					    tmpvar_22 = b_20.x;
					  } else {
					    tmpvar_22 = c_21.x;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_19.y) {
					    tmpvar_23 = b_20.y;
					  } else {
					    tmpvar_23 = c_21.y;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_19.z) {
					    tmpvar_24 = b_20.z;
					  } else {
					    tmpvar_24 = c_21.z;
					  };
					  highp vec3 tmpvar_25;
					  tmpvar_25.x = tmpvar_22;
					  tmpvar_25.y = tmpvar_23;
					  tmpvar_25.z = tmpvar_24;
					  dest_14.xyz = mix (tex2_15.xyz, tmpvar_25, vec3(xlat_mutable_Opacity));
					  dest_14.xyz = (dest_14.xyz * _Color.xyz);
					  tmpvar_10 = dest_14.xyz;
					  tmpvar_11 = (tex2_15.w * _Color.w);
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_13 = tmpvar_26;
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_12 = tmpvar_27;
					  bvec4 tmpvar_28;
					  tmpvar_28 = lessThanEqual (norm2_12, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_29;
					  b_29 = ((2.0 * norm_13) * norm2_12);
					  highp vec4 c_30;
					  c_30 = (1.0 - ((2.0 * 
					    (1.0 - norm_13)
					  ) * (1.0 - norm2_12)));
					  highp float tmpvar_31;
					  if (tmpvar_28.x) {
					    tmpvar_31 = b_29.x;
					  } else {
					    tmpvar_31 = c_30.x;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_28.y) {
					    tmpvar_32 = b_29.y;
					  } else {
					    tmpvar_32 = c_30.y;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_28.z) {
					    tmpvar_33 = b_29.z;
					  } else {
					    tmpvar_33 = c_30.z;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_28.w) {
					    tmpvar_34 = b_29.w;
					  } else {
					    tmpvar_34 = c_30.w;
					  };
					  highp vec4 tmpvar_35;
					  tmpvar_35.x = tmpvar_31;
					  tmpvar_35.y = tmpvar_32;
					  tmpvar_35.z = tmpvar_33;
					  tmpvar_35.w = tmpvar_34;
					  highp vec4 tmpvar_36;
					  tmpvar_36 = mix (norm2_12, tmpvar_35, vec4(xlat_mutable_Opacity));
					  dest_14 = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  lowp vec4 packednormal_38;
					  packednormal_38 = tmpvar_36;
					  tmpvar_37 = ((packednormal_38.xyz * 2.0) - 1.0);
					  tmpvar_6 = tmpvar_10;
					  tmpvar_7 = tmpvar_11;
					  highp vec4 tmpvar_39;
					  tmpvar_39.w = 1.0;
					  tmpvar_39.xyz = xlv_TEXCOORD5;
					  lightCoord_5 = (unity_WorldToLight * tmpvar_39).xy;
					  lowp float tmpvar_40;
					  tmpvar_40 = texture2D (_LightTexture0, lightCoord_5).w;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_37);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_37);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_37);
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * tmpvar_40);
					  lowp vec4 c_42;
					  lowp float diff_43;
					  mediump float tmpvar_44;
					  tmpvar_44 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_43 = tmpvar_44;
					  c_42.xyz = ((tmpvar_10 * tmpvar_1) * diff_43);
					  c_42.w = tmpvar_11;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = (c_42.xyz * vec3(tmpvar_45));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp mat3 tmpvar_8;
					  tmpvar_8[0] = unity_WorldToObject[0].xyz;
					  tmpvar_8[1] = unity_WorldToObject[1].xyz;
					  tmpvar_8[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_9;
					  tmpvar_9 = normalize((_glesNormal * tmpvar_8));
					  worldNormal_3 = tmpvar_9;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_11;
					  highp float tmpvar_12;
					  tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_12;
					  lowp vec3 tmpvar_13;
					  tmpvar_13 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  lowp vec3 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.x;
					  tmpvar_14.y = tmpvar_13.x;
					  tmpvar_14.z = worldNormal_3.x;
					  lowp vec3 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.y;
					  tmpvar_15.y = tmpvar_13.y;
					  tmpvar_15.z = worldNormal_3.y;
					  lowp vec3 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.z;
					  tmpvar_16.y = tmpvar_13.z;
					  tmpvar_16.z = worldNormal_3.z;
					  gl_Position = tmpvar_6;
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_14;
					  xlv_TEXCOORD3 = tmpvar_15;
					  xlv_TEXCOORD4 = tmpvar_16;
					  xlv_TEXCOORD5 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform mediump vec4 _WorldSpaceLightPos0;
					uniform lowp vec4 _LightColor0;
					uniform sampler2D _LightTexture0;
					uniform highp mat4 unity_WorldToLight;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying lowp vec3 xlv_TEXCOORD2;
					varying lowp vec3 xlv_TEXCOORD3;
					varying lowp vec3 xlv_TEXCOORD4;
					varying highp vec3 xlv_TEXCOORD5;
					varying highp float xlv_TEXCOORD7;
					void main ()
					{
					  mediump vec3 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 worldN_3;
					  lowp vec4 c_4;
					  highp vec2 lightCoord_5;
					  lowp vec3 tmpvar_6;
					  lowp float tmpvar_7;
					  lowp vec3 lightDir_8;
					  mediump vec3 tmpvar_9;
					  tmpvar_9 = _WorldSpaceLightPos0.xyz;
					  lightDir_8 = tmpvar_9;
					  tmpvar_6 = vec3(0.0, 0.0, 0.0);
					  tmpvar_7 = 0.0;
					  lowp vec3 tmpvar_10;
					  lowp float tmpvar_11;
					  tmpvar_10 = tmpvar_6;
					  tmpvar_11 = tmpvar_7;
					  highp vec4 norm2_12;
					  highp vec4 norm_13;
					  highp vec4 dest_14;
					  highp vec4 tex2_15;
					  highp vec4 tex_16;
					  lowp vec4 tmpvar_17;
					  tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_16 = tmpvar_17;
					  lowp vec4 tmpvar_18;
					  tmpvar_18 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_15 = tmpvar_18;
					  xlat_mutable_Opacity = (_Opacity * tex_16.w);
					  bvec3 tmpvar_19;
					  tmpvar_19 = lessThanEqual (tex2_15.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_20;
					  b_20 = ((2.0 * tex_16.xyz) * tex2_15.xyz);
					  highp vec3 c_21;
					  c_21 = (1.0 - ((2.0 * 
					    (1.0 - tex_16.xyz)
					  ) * (1.0 - tex2_15.xyz)));
					  highp float tmpvar_22;
					  if (tmpvar_19.x) {
					    tmpvar_22 = b_20.x;
					  } else {
					    tmpvar_22 = c_21.x;
					  };
					  highp float tmpvar_23;
					  if (tmpvar_19.y) {
					    tmpvar_23 = b_20.y;
					  } else {
					    tmpvar_23 = c_21.y;
					  };
					  highp float tmpvar_24;
					  if (tmpvar_19.z) {
					    tmpvar_24 = b_20.z;
					  } else {
					    tmpvar_24 = c_21.z;
					  };
					  highp vec3 tmpvar_25;
					  tmpvar_25.x = tmpvar_22;
					  tmpvar_25.y = tmpvar_23;
					  tmpvar_25.z = tmpvar_24;
					  dest_14.xyz = mix (tex2_15.xyz, tmpvar_25, vec3(xlat_mutable_Opacity));
					  dest_14.xyz = (dest_14.xyz * _Color.xyz);
					  tmpvar_10 = dest_14.xyz;
					  tmpvar_11 = (tex2_15.w * _Color.w);
					  lowp vec4 tmpvar_26;
					  tmpvar_26 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_13 = tmpvar_26;
					  lowp vec4 tmpvar_27;
					  tmpvar_27 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_12 = tmpvar_27;
					  bvec4 tmpvar_28;
					  tmpvar_28 = lessThanEqual (norm2_12, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_29;
					  b_29 = ((2.0 * norm_13) * norm2_12);
					  highp vec4 c_30;
					  c_30 = (1.0 - ((2.0 * 
					    (1.0 - norm_13)
					  ) * (1.0 - norm2_12)));
					  highp float tmpvar_31;
					  if (tmpvar_28.x) {
					    tmpvar_31 = b_29.x;
					  } else {
					    tmpvar_31 = c_30.x;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_28.y) {
					    tmpvar_32 = b_29.y;
					  } else {
					    tmpvar_32 = c_30.y;
					  };
					  highp float tmpvar_33;
					  if (tmpvar_28.z) {
					    tmpvar_33 = b_29.z;
					  } else {
					    tmpvar_33 = c_30.z;
					  };
					  highp float tmpvar_34;
					  if (tmpvar_28.w) {
					    tmpvar_34 = b_29.w;
					  } else {
					    tmpvar_34 = c_30.w;
					  };
					  highp vec4 tmpvar_35;
					  tmpvar_35.x = tmpvar_31;
					  tmpvar_35.y = tmpvar_32;
					  tmpvar_35.z = tmpvar_33;
					  tmpvar_35.w = tmpvar_34;
					  highp vec4 tmpvar_36;
					  tmpvar_36 = mix (norm2_12, tmpvar_35, vec4(xlat_mutable_Opacity));
					  dest_14 = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  lowp vec4 packednormal_38;
					  packednormal_38 = tmpvar_36;
					  tmpvar_37 = ((packednormal_38.xyz * 2.0) - 1.0);
					  tmpvar_6 = tmpvar_10;
					  tmpvar_7 = tmpvar_11;
					  highp vec4 tmpvar_39;
					  tmpvar_39.w = 1.0;
					  tmpvar_39.xyz = xlv_TEXCOORD5;
					  lightCoord_5 = (unity_WorldToLight * tmpvar_39).xy;
					  lowp float tmpvar_40;
					  tmpvar_40 = texture2D (_LightTexture0, lightCoord_5).w;
					  worldN_3.x = dot (xlv_TEXCOORD2, tmpvar_37);
					  worldN_3.y = dot (xlv_TEXCOORD3, tmpvar_37);
					  worldN_3.z = dot (xlv_TEXCOORD4, tmpvar_37);
					  lowp vec3 tmpvar_41;
					  tmpvar_41 = normalize(worldN_3);
					  worldN_3 = tmpvar_41;
					  tmpvar_1 = _LightColor0.xyz;
					  tmpvar_2 = lightDir_8;
					  tmpvar_1 = (tmpvar_1 * tmpvar_40);
					  lowp vec4 c_42;
					  lowp float diff_43;
					  mediump float tmpvar_44;
					  tmpvar_44 = max (0.0, dot (tmpvar_41, tmpvar_2));
					  diff_43 = tmpvar_44;
					  c_42.xyz = ((tmpvar_10 * tmpvar_1) * diff_43);
					  c_42.w = tmpvar_11;
					  highp float tmpvar_45;
					  tmpvar_45 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
					  c_4.xyz = (c_42.xyz * vec3(tmpvar_45));
					  c_4.w = 1.0;
					  gl_FragData[0] = c_4;
					}
					
					
					#endif"
				}
			}
			Program "fp" {
				SubProgram "gles hw_tier00 " {
					Keywords { "POINT" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "POINT" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "POINT" }
					"!!GLES"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" }
					"!!GLES"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "SPOT" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "SPOT" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "SPOT" }
					"!!GLES"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "POINT_COOKIE" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "POINT_COOKIE" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "POINT_COOKIE" }
					"!!GLES"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!GLES"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "POINT" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "POINT" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "POINT" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "SPOT" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "SPOT" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "SPOT" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "POINT_COOKIE" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "POINT_COOKIE" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "POINT_COOKIE" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
					"!!GLES"
				}
			}
		}
		Pass {
			Name "PREPASS"
			LOD 400
			Tags { "LIGHTMODE" = "PREPASSBASE" "RenderType" = "Opaque" }
			GpuProgramID 179150
			Program "vp" {
				SubProgram "gles hw_tier00 " {
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec2 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  highp vec3 tmpvar_6;
					  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_7;
					  tmpvar_7[0] = unity_WorldToObject[0].xyz;
					  tmpvar_7[1] = unity_WorldToObject[1].xyz;
					  tmpvar_7[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
					  worldNormal_3 = tmpvar_8;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_11;
					  lowp vec3 tmpvar_12;
					  tmpvar_12 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_13;
					  tmpvar_13.x = worldTangent_2.x;
					  tmpvar_13.y = tmpvar_12.x;
					  tmpvar_13.z = worldNormal_3.x;
					  tmpvar_13.w = tmpvar_6.x;
					  highp vec4 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.y;
					  tmpvar_14.y = tmpvar_12.y;
					  tmpvar_14.z = worldNormal_3.y;
					  tmpvar_14.w = tmpvar_6.y;
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.z;
					  tmpvar_15.y = tmpvar_12.z;
					  tmpvar_15.z = worldNormal_3.z;
					  tmpvar_15.w = tmpvar_6.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  xlv_TEXCOORD2 = tmpvar_13;
					  xlv_TEXCOORD3 = tmpvar_14;
					  xlv_TEXCOORD4 = tmpvar_15;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec2 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 res_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  lowp float tmpvar_4;
					  highp vec2 tmpvar_5;
					  tmpvar_5.x = 1.0;
					  tmpvar_3 = vec3(0.0, 0.0, 0.0);
					  tmpvar_4 = 0.0;
					  lowp vec3 tmpvar_6;
					  lowp float tmpvar_7;
					  tmpvar_6 = tmpvar_3;
					  tmpvar_7 = tmpvar_4;
					  highp vec4 norm2_8;
					  highp vec4 norm_9;
					  highp vec4 dest_10;
					  highp vec4 tex2_11;
					  highp vec4 tex_12;
					  lowp vec4 tmpvar_13;
					  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_12 = tmpvar_13;
					  lowp vec4 tmpvar_14;
					  tmpvar_14 = texture2D (_MainTex2, tmpvar_5);
					  tex2_11 = tmpvar_14;
					  xlat_mutable_Opacity = (_Opacity * tex_12.w);
					  bvec3 tmpvar_15;
					  tmpvar_15 = lessThanEqual (tex2_11.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_16;
					  b_16 = ((2.0 * tex_12.xyz) * tex2_11.xyz);
					  highp vec3 c_17;
					  c_17 = (1.0 - ((2.0 * 
					    (1.0 - tex_12.xyz)
					  ) * (1.0 - tex2_11.xyz)));
					  highp float tmpvar_18;
					  if (tmpvar_15.x) {
					    tmpvar_18 = b_16.x;
					  } else {
					    tmpvar_18 = c_17.x;
					  };
					  highp float tmpvar_19;
					  if (tmpvar_15.y) {
					    tmpvar_19 = b_16.y;
					  } else {
					    tmpvar_19 = c_17.y;
					  };
					  highp float tmpvar_20;
					  if (tmpvar_15.z) {
					    tmpvar_20 = b_16.z;
					  } else {
					    tmpvar_20 = c_17.z;
					  };
					  highp vec3 tmpvar_21;
					  tmpvar_21.x = tmpvar_18;
					  tmpvar_21.y = tmpvar_19;
					  tmpvar_21.z = tmpvar_20;
					  dest_10.xyz = mix (tex2_11.xyz, tmpvar_21, vec3(xlat_mutable_Opacity));
					  dest_10.xyz = (dest_10.xyz * _Color.xyz);
					  tmpvar_6 = dest_10.xyz;
					  tmpvar_7 = (tex2_11.w * _Color.w);
					  lowp vec4 tmpvar_22;
					  tmpvar_22 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_9 = tmpvar_22;
					  lowp vec4 tmpvar_23;
					  tmpvar_23 = texture2D (_BumpMap2, xlv_TEXCOORD1);
					  norm2_8 = tmpvar_23;
					  bvec4 tmpvar_24;
					  tmpvar_24 = lessThanEqual (norm2_8, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_25;
					  b_25 = ((2.0 * norm_9) * norm2_8);
					  highp vec4 c_26;
					  c_26 = (1.0 - ((2.0 * 
					    (1.0 - norm_9)
					  ) * (1.0 - norm2_8)));
					  highp float tmpvar_27;
					  if (tmpvar_24.x) {
					    tmpvar_27 = b_25.x;
					  } else {
					    tmpvar_27 = c_26.x;
					  };
					  highp float tmpvar_28;
					  if (tmpvar_24.y) {
					    tmpvar_28 = b_25.y;
					  } else {
					    tmpvar_28 = c_26.y;
					  };
					  highp float tmpvar_29;
					  if (tmpvar_24.z) {
					    tmpvar_29 = b_25.z;
					  } else {
					    tmpvar_29 = c_26.z;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_24.w) {
					    tmpvar_30 = b_25.w;
					  } else {
					    tmpvar_30 = c_26.w;
					  };
					  highp vec4 tmpvar_31;
					  tmpvar_31.x = tmpvar_27;
					  tmpvar_31.y = tmpvar_28;
					  tmpvar_31.z = tmpvar_29;
					  tmpvar_31.w = tmpvar_30;
					  highp vec4 tmpvar_32;
					  tmpvar_32 = mix (norm2_8, tmpvar_31, vec4(xlat_mutable_Opacity));
					  dest_10 = tmpvar_32;
					  lowp vec3 tmpvar_33;
					  lowp vec4 packednormal_34;
					  packednormal_34 = tmpvar_32;
					  tmpvar_33 = ((packednormal_34.xyz * 2.0) - 1.0);
					  tmpvar_3 = tmpvar_6;
					  tmpvar_4 = tmpvar_7;
					  highp float tmpvar_35;
					  tmpvar_35 = dot (xlv_TEXCOORD2.xyz, tmpvar_33);
					  worldN_2.x = tmpvar_35;
					  highp float tmpvar_36;
					  tmpvar_36 = dot (xlv_TEXCOORD3.xyz, tmpvar_33);
					  worldN_2.y = tmpvar_36;
					  highp float tmpvar_37;
					  tmpvar_37 = dot (xlv_TEXCOORD4.xyz, tmpvar_33);
					  worldN_2.z = tmpvar_37;
					  lowp vec3 tmpvar_38;
					  tmpvar_38 = normalize(worldN_2);
					  worldN_2 = tmpvar_38;
					  res_1.xyz = ((tmpvar_38 * 0.5) + 0.5);
					  res_1.w = 0.0;
					  gl_FragData[0] = res_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec2 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  highp vec3 tmpvar_6;
					  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_7;
					  tmpvar_7[0] = unity_WorldToObject[0].xyz;
					  tmpvar_7[1] = unity_WorldToObject[1].xyz;
					  tmpvar_7[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
					  worldNormal_3 = tmpvar_8;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_11;
					  lowp vec3 tmpvar_12;
					  tmpvar_12 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_13;
					  tmpvar_13.x = worldTangent_2.x;
					  tmpvar_13.y = tmpvar_12.x;
					  tmpvar_13.z = worldNormal_3.x;
					  tmpvar_13.w = tmpvar_6.x;
					  highp vec4 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.y;
					  tmpvar_14.y = tmpvar_12.y;
					  tmpvar_14.z = worldNormal_3.y;
					  tmpvar_14.w = tmpvar_6.y;
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.z;
					  tmpvar_15.y = tmpvar_12.z;
					  tmpvar_15.z = worldNormal_3.z;
					  tmpvar_15.w = tmpvar_6.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  xlv_TEXCOORD2 = tmpvar_13;
					  xlv_TEXCOORD3 = tmpvar_14;
					  xlv_TEXCOORD4 = tmpvar_15;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec2 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 res_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  lowp float tmpvar_4;
					  highp vec2 tmpvar_5;
					  tmpvar_5.x = 1.0;
					  tmpvar_3 = vec3(0.0, 0.0, 0.0);
					  tmpvar_4 = 0.0;
					  lowp vec3 tmpvar_6;
					  lowp float tmpvar_7;
					  tmpvar_6 = tmpvar_3;
					  tmpvar_7 = tmpvar_4;
					  highp vec4 norm2_8;
					  highp vec4 norm_9;
					  highp vec4 dest_10;
					  highp vec4 tex2_11;
					  highp vec4 tex_12;
					  lowp vec4 tmpvar_13;
					  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_12 = tmpvar_13;
					  lowp vec4 tmpvar_14;
					  tmpvar_14 = texture2D (_MainTex2, tmpvar_5);
					  tex2_11 = tmpvar_14;
					  xlat_mutable_Opacity = (_Opacity * tex_12.w);
					  bvec3 tmpvar_15;
					  tmpvar_15 = lessThanEqual (tex2_11.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_16;
					  b_16 = ((2.0 * tex_12.xyz) * tex2_11.xyz);
					  highp vec3 c_17;
					  c_17 = (1.0 - ((2.0 * 
					    (1.0 - tex_12.xyz)
					  ) * (1.0 - tex2_11.xyz)));
					  highp float tmpvar_18;
					  if (tmpvar_15.x) {
					    tmpvar_18 = b_16.x;
					  } else {
					    tmpvar_18 = c_17.x;
					  };
					  highp float tmpvar_19;
					  if (tmpvar_15.y) {
					    tmpvar_19 = b_16.y;
					  } else {
					    tmpvar_19 = c_17.y;
					  };
					  highp float tmpvar_20;
					  if (tmpvar_15.z) {
					    tmpvar_20 = b_16.z;
					  } else {
					    tmpvar_20 = c_17.z;
					  };
					  highp vec3 tmpvar_21;
					  tmpvar_21.x = tmpvar_18;
					  tmpvar_21.y = tmpvar_19;
					  tmpvar_21.z = tmpvar_20;
					  dest_10.xyz = mix (tex2_11.xyz, tmpvar_21, vec3(xlat_mutable_Opacity));
					  dest_10.xyz = (dest_10.xyz * _Color.xyz);
					  tmpvar_6 = dest_10.xyz;
					  tmpvar_7 = (tex2_11.w * _Color.w);
					  lowp vec4 tmpvar_22;
					  tmpvar_22 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_9 = tmpvar_22;
					  lowp vec4 tmpvar_23;
					  tmpvar_23 = texture2D (_BumpMap2, xlv_TEXCOORD1);
					  norm2_8 = tmpvar_23;
					  bvec4 tmpvar_24;
					  tmpvar_24 = lessThanEqual (norm2_8, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_25;
					  b_25 = ((2.0 * norm_9) * norm2_8);
					  highp vec4 c_26;
					  c_26 = (1.0 - ((2.0 * 
					    (1.0 - norm_9)
					  ) * (1.0 - norm2_8)));
					  highp float tmpvar_27;
					  if (tmpvar_24.x) {
					    tmpvar_27 = b_25.x;
					  } else {
					    tmpvar_27 = c_26.x;
					  };
					  highp float tmpvar_28;
					  if (tmpvar_24.y) {
					    tmpvar_28 = b_25.y;
					  } else {
					    tmpvar_28 = c_26.y;
					  };
					  highp float tmpvar_29;
					  if (tmpvar_24.z) {
					    tmpvar_29 = b_25.z;
					  } else {
					    tmpvar_29 = c_26.z;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_24.w) {
					    tmpvar_30 = b_25.w;
					  } else {
					    tmpvar_30 = c_26.w;
					  };
					  highp vec4 tmpvar_31;
					  tmpvar_31.x = tmpvar_27;
					  tmpvar_31.y = tmpvar_28;
					  tmpvar_31.z = tmpvar_29;
					  tmpvar_31.w = tmpvar_30;
					  highp vec4 tmpvar_32;
					  tmpvar_32 = mix (norm2_8, tmpvar_31, vec4(xlat_mutable_Opacity));
					  dest_10 = tmpvar_32;
					  lowp vec3 tmpvar_33;
					  lowp vec4 packednormal_34;
					  packednormal_34 = tmpvar_32;
					  tmpvar_33 = ((packednormal_34.xyz * 2.0) - 1.0);
					  tmpvar_3 = tmpvar_6;
					  tmpvar_4 = tmpvar_7;
					  highp float tmpvar_35;
					  tmpvar_35 = dot (xlv_TEXCOORD2.xyz, tmpvar_33);
					  worldN_2.x = tmpvar_35;
					  highp float tmpvar_36;
					  tmpvar_36 = dot (xlv_TEXCOORD3.xyz, tmpvar_33);
					  worldN_2.y = tmpvar_36;
					  highp float tmpvar_37;
					  tmpvar_37 = dot (xlv_TEXCOORD4.xyz, tmpvar_33);
					  worldN_2.z = tmpvar_37;
					  lowp vec3 tmpvar_38;
					  tmpvar_38 = normalize(worldN_2);
					  worldN_2 = tmpvar_38;
					  res_1.xyz = ((tmpvar_38 * 0.5) + 0.5);
					  res_1.w = 0.0;
					  gl_FragData[0] = res_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec2 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  highp vec3 tmpvar_6;
					  tmpvar_6 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_7;
					  tmpvar_7[0] = unity_WorldToObject[0].xyz;
					  tmpvar_7[1] = unity_WorldToObject[1].xyz;
					  tmpvar_7[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_8;
					  tmpvar_8 = normalize((_glesNormal * tmpvar_7));
					  worldNormal_3 = tmpvar_8;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_10;
					  highp float tmpvar_11;
					  tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_11;
					  lowp vec3 tmpvar_12;
					  tmpvar_12 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_13;
					  tmpvar_13.x = worldTangent_2.x;
					  tmpvar_13.y = tmpvar_12.x;
					  tmpvar_13.z = worldNormal_3.x;
					  tmpvar_13.w = tmpvar_6.x;
					  highp vec4 tmpvar_14;
					  tmpvar_14.x = worldTangent_2.y;
					  tmpvar_14.y = tmpvar_12.y;
					  tmpvar_14.z = worldNormal_3.y;
					  tmpvar_14.w = tmpvar_6.y;
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.z;
					  tmpvar_15.y = tmpvar_12.z;
					  tmpvar_15.z = worldNormal_3.z;
					  tmpvar_15.w = tmpvar_6.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  xlv_TEXCOORD2 = tmpvar_13;
					  xlv_TEXCOORD3 = tmpvar_14;
					  xlv_TEXCOORD4 = tmpvar_15;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec2 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 res_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  lowp float tmpvar_4;
					  highp vec2 tmpvar_5;
					  tmpvar_5.x = 1.0;
					  tmpvar_3 = vec3(0.0, 0.0, 0.0);
					  tmpvar_4 = 0.0;
					  lowp vec3 tmpvar_6;
					  lowp float tmpvar_7;
					  tmpvar_6 = tmpvar_3;
					  tmpvar_7 = tmpvar_4;
					  highp vec4 norm2_8;
					  highp vec4 norm_9;
					  highp vec4 dest_10;
					  highp vec4 tex2_11;
					  highp vec4 tex_12;
					  lowp vec4 tmpvar_13;
					  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_12 = tmpvar_13;
					  lowp vec4 tmpvar_14;
					  tmpvar_14 = texture2D (_MainTex2, tmpvar_5);
					  tex2_11 = tmpvar_14;
					  xlat_mutable_Opacity = (_Opacity * tex_12.w);
					  bvec3 tmpvar_15;
					  tmpvar_15 = lessThanEqual (tex2_11.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_16;
					  b_16 = ((2.0 * tex_12.xyz) * tex2_11.xyz);
					  highp vec3 c_17;
					  c_17 = (1.0 - ((2.0 * 
					    (1.0 - tex_12.xyz)
					  ) * (1.0 - tex2_11.xyz)));
					  highp float tmpvar_18;
					  if (tmpvar_15.x) {
					    tmpvar_18 = b_16.x;
					  } else {
					    tmpvar_18 = c_17.x;
					  };
					  highp float tmpvar_19;
					  if (tmpvar_15.y) {
					    tmpvar_19 = b_16.y;
					  } else {
					    tmpvar_19 = c_17.y;
					  };
					  highp float tmpvar_20;
					  if (tmpvar_15.z) {
					    tmpvar_20 = b_16.z;
					  } else {
					    tmpvar_20 = c_17.z;
					  };
					  highp vec3 tmpvar_21;
					  tmpvar_21.x = tmpvar_18;
					  tmpvar_21.y = tmpvar_19;
					  tmpvar_21.z = tmpvar_20;
					  dest_10.xyz = mix (tex2_11.xyz, tmpvar_21, vec3(xlat_mutable_Opacity));
					  dest_10.xyz = (dest_10.xyz * _Color.xyz);
					  tmpvar_6 = dest_10.xyz;
					  tmpvar_7 = (tex2_11.w * _Color.w);
					  lowp vec4 tmpvar_22;
					  tmpvar_22 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_9 = tmpvar_22;
					  lowp vec4 tmpvar_23;
					  tmpvar_23 = texture2D (_BumpMap2, xlv_TEXCOORD1);
					  norm2_8 = tmpvar_23;
					  bvec4 tmpvar_24;
					  tmpvar_24 = lessThanEqual (norm2_8, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_25;
					  b_25 = ((2.0 * norm_9) * norm2_8);
					  highp vec4 c_26;
					  c_26 = (1.0 - ((2.0 * 
					    (1.0 - norm_9)
					  ) * (1.0 - norm2_8)));
					  highp float tmpvar_27;
					  if (tmpvar_24.x) {
					    tmpvar_27 = b_25.x;
					  } else {
					    tmpvar_27 = c_26.x;
					  };
					  highp float tmpvar_28;
					  if (tmpvar_24.y) {
					    tmpvar_28 = b_25.y;
					  } else {
					    tmpvar_28 = c_26.y;
					  };
					  highp float tmpvar_29;
					  if (tmpvar_24.z) {
					    tmpvar_29 = b_25.z;
					  } else {
					    tmpvar_29 = c_26.z;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_24.w) {
					    tmpvar_30 = b_25.w;
					  } else {
					    tmpvar_30 = c_26.w;
					  };
					  highp vec4 tmpvar_31;
					  tmpvar_31.x = tmpvar_27;
					  tmpvar_31.y = tmpvar_28;
					  tmpvar_31.z = tmpvar_29;
					  tmpvar_31.w = tmpvar_30;
					  highp vec4 tmpvar_32;
					  tmpvar_32 = mix (norm2_8, tmpvar_31, vec4(xlat_mutable_Opacity));
					  dest_10 = tmpvar_32;
					  lowp vec3 tmpvar_33;
					  lowp vec4 packednormal_34;
					  packednormal_34 = tmpvar_32;
					  tmpvar_33 = ((packednormal_34.xyz * 2.0) - 1.0);
					  tmpvar_3 = tmpvar_6;
					  tmpvar_4 = tmpvar_7;
					  highp float tmpvar_35;
					  tmpvar_35 = dot (xlv_TEXCOORD2.xyz, tmpvar_33);
					  worldN_2.x = tmpvar_35;
					  highp float tmpvar_36;
					  tmpvar_36 = dot (xlv_TEXCOORD3.xyz, tmpvar_33);
					  worldN_2.y = tmpvar_36;
					  highp float tmpvar_37;
					  tmpvar_37 = dot (xlv_TEXCOORD4.xyz, tmpvar_33);
					  worldN_2.z = tmpvar_37;
					  lowp vec3 tmpvar_38;
					  tmpvar_38 = normalize(worldN_2);
					  worldN_2 = tmpvar_38;
					  res_1.xyz = ((tmpvar_38 * 0.5) + 0.5);
					  res_1.w = 0.0;
					  gl_FragData[0] = res_1;
					}
					
					
					#endif"
				}
			}
			Program "fp" {
				SubProgram "gles hw_tier00 " {
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					"!!GLES"
				}
			}
		}
		Pass {
			Name "PREPASS"
			LOD 400
			Tags { "LIGHTMODE" = "PREPASSFINAL" "RenderType" = "Opaque" }
			ZWrite Off
			GpuProgramID 217626
			Program "vp" {
				SubProgram "gles hw_tier00 " {
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _MainTex2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec4 tmpvar_10;
					  tmpvar_10.w = 1.0;
					  tmpvar_10.xyz = normalize((_glesNormal * tmpvar_9));
					  mediump vec4 normal_11;
					  normal_11 = tmpvar_10;
					  mediump vec3 res_12;
					  mediump vec3 x_13;
					  x_13.x = dot (unity_SHAr, normal_11);
					  x_13.y = dot (unity_SHAg, normal_11);
					  x_13.z = dot (unity_SHAb, normal_11);
					  mediump vec3 x1_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15 = (normal_11.xyzz * normal_11.yzzx);
					  x1_14.x = dot (unity_SHBr, tmpvar_15);
					  x1_14.y = dot (unity_SHBg, tmpvar_15);
					  x1_14.z = dot (unity_SHBb, tmpvar_15);
					  res_12 = (x_13 + (x1_14 + (unity_SHC.xyz * 
					    ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y))
					  )));
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = max (((1.055 * 
					    pow (max (res_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_12 = tmpvar_16;
					  tmpvar_3 = tmpvar_16;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					uniform sampler2D _LightBuffer;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp float tmpvar_5;
					  highp vec2 tmpvar_6;
					  highp vec2 tmpvar_7;
					  tmpvar_6.x = 1.0;
					  tmpvar_7.x = 1.0;
					  tmpvar_4 = vec3(0.0, 0.0, 0.0);
					  tmpvar_5 = 0.0;
					  lowp vec3 tmpvar_8;
					  lowp float tmpvar_9;
					  tmpvar_8 = tmpvar_4;
					  tmpvar_9 = tmpvar_5;
					  highp vec4 norm2_10;
					  highp vec4 norm_11;
					  highp vec4 dest_12;
					  highp vec4 tex2_13;
					  highp vec4 tex_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_14 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex2, xlv_TEXCOORD0.zw);
					  tex2_13 = tmpvar_16;
					  xlat_mutable_Opacity = (_Opacity * tex_14.w);
					  bvec3 tmpvar_17;
					  tmpvar_17 = lessThanEqual (tex2_13.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_18;
					  b_18 = ((2.0 * tex_14.xyz) * tex2_13.xyz);
					  highp vec3 c_19;
					  c_19 = (1.0 - ((2.0 * 
					    (1.0 - tex_14.xyz)
					  ) * (1.0 - tex2_13.xyz)));
					  highp float tmpvar_20;
					  if (tmpvar_17.x) {
					    tmpvar_20 = b_18.x;
					  } else {
					    tmpvar_20 = c_19.x;
					  };
					  highp float tmpvar_21;
					  if (tmpvar_17.y) {
					    tmpvar_21 = b_18.y;
					  } else {
					    tmpvar_21 = c_19.y;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_17.z) {
					    tmpvar_22 = b_18.z;
					  } else {
					    tmpvar_22 = c_19.z;
					  };
					  highp vec3 tmpvar_23;
					  tmpvar_23.x = tmpvar_20;
					  tmpvar_23.y = tmpvar_21;
					  tmpvar_23.z = tmpvar_22;
					  dest_12.xyz = mix (tex2_13.xyz, tmpvar_23, vec3(xlat_mutable_Opacity));
					  dest_12.xyz = (dest_12.xyz * _Color.xyz);
					  tmpvar_8 = dest_12.xyz;
					  tmpvar_9 = (tex2_13.w * _Color.w);
					  lowp vec4 tmpvar_24;
					  tmpvar_24 = texture2D (_BumpMap, tmpvar_6);
					  norm_11 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap2, tmpvar_7);
					  norm2_10 = tmpvar_25;
					  bvec4 tmpvar_26;
					  tmpvar_26 = lessThanEqual (norm2_10, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_27;
					  b_27 = ((2.0 * norm_11) * norm2_10);
					  highp vec4 c_28;
					  c_28 = (1.0 - ((2.0 * 
					    (1.0 - norm_11)
					  ) * (1.0 - norm2_10)));
					  highp float tmpvar_29;
					  if (tmpvar_26.x) {
					    tmpvar_29 = b_27.x;
					  } else {
					    tmpvar_29 = c_28.x;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_26.y) {
					    tmpvar_30 = b_27.y;
					  } else {
					    tmpvar_30 = c_28.y;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_26.z) {
					    tmpvar_31 = b_27.z;
					  } else {
					    tmpvar_31 = c_28.z;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_26.w) {
					    tmpvar_32 = b_27.w;
					  } else {
					    tmpvar_32 = c_28.w;
					  };
					  highp vec4 tmpvar_33;
					  tmpvar_33.x = tmpvar_29;
					  tmpvar_33.y = tmpvar_30;
					  tmpvar_33.z = tmpvar_31;
					  tmpvar_33.w = tmpvar_32;
					  dest_12 = mix (norm2_10, tmpvar_33, vec4(xlat_mutable_Opacity));
					  tmpvar_4 = tmpvar_8;
					  tmpvar_5 = tmpvar_9;
					  lowp vec4 tmpvar_34;
					  tmpvar_34 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_34;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_35;
					  c_35.xyz = (tmpvar_8 * light_3.xyz);
					  c_35.w = tmpvar_9;
					  c_2.xyz = c_35.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _MainTex2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec4 tmpvar_10;
					  tmpvar_10.w = 1.0;
					  tmpvar_10.xyz = normalize((_glesNormal * tmpvar_9));
					  mediump vec4 normal_11;
					  normal_11 = tmpvar_10;
					  mediump vec3 res_12;
					  mediump vec3 x_13;
					  x_13.x = dot (unity_SHAr, normal_11);
					  x_13.y = dot (unity_SHAg, normal_11);
					  x_13.z = dot (unity_SHAb, normal_11);
					  mediump vec3 x1_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15 = (normal_11.xyzz * normal_11.yzzx);
					  x1_14.x = dot (unity_SHBr, tmpvar_15);
					  x1_14.y = dot (unity_SHBg, tmpvar_15);
					  x1_14.z = dot (unity_SHBb, tmpvar_15);
					  res_12 = (x_13 + (x1_14 + (unity_SHC.xyz * 
					    ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y))
					  )));
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = max (((1.055 * 
					    pow (max (res_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_12 = tmpvar_16;
					  tmpvar_3 = tmpvar_16;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					uniform sampler2D _LightBuffer;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp float tmpvar_5;
					  highp vec2 tmpvar_6;
					  highp vec2 tmpvar_7;
					  tmpvar_6.x = 1.0;
					  tmpvar_7.x = 1.0;
					  tmpvar_4 = vec3(0.0, 0.0, 0.0);
					  tmpvar_5 = 0.0;
					  lowp vec3 tmpvar_8;
					  lowp float tmpvar_9;
					  tmpvar_8 = tmpvar_4;
					  tmpvar_9 = tmpvar_5;
					  highp vec4 norm2_10;
					  highp vec4 norm_11;
					  highp vec4 dest_12;
					  highp vec4 tex2_13;
					  highp vec4 tex_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_14 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex2, xlv_TEXCOORD0.zw);
					  tex2_13 = tmpvar_16;
					  xlat_mutable_Opacity = (_Opacity * tex_14.w);
					  bvec3 tmpvar_17;
					  tmpvar_17 = lessThanEqual (tex2_13.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_18;
					  b_18 = ((2.0 * tex_14.xyz) * tex2_13.xyz);
					  highp vec3 c_19;
					  c_19 = (1.0 - ((2.0 * 
					    (1.0 - tex_14.xyz)
					  ) * (1.0 - tex2_13.xyz)));
					  highp float tmpvar_20;
					  if (tmpvar_17.x) {
					    tmpvar_20 = b_18.x;
					  } else {
					    tmpvar_20 = c_19.x;
					  };
					  highp float tmpvar_21;
					  if (tmpvar_17.y) {
					    tmpvar_21 = b_18.y;
					  } else {
					    tmpvar_21 = c_19.y;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_17.z) {
					    tmpvar_22 = b_18.z;
					  } else {
					    tmpvar_22 = c_19.z;
					  };
					  highp vec3 tmpvar_23;
					  tmpvar_23.x = tmpvar_20;
					  tmpvar_23.y = tmpvar_21;
					  tmpvar_23.z = tmpvar_22;
					  dest_12.xyz = mix (tex2_13.xyz, tmpvar_23, vec3(xlat_mutable_Opacity));
					  dest_12.xyz = (dest_12.xyz * _Color.xyz);
					  tmpvar_8 = dest_12.xyz;
					  tmpvar_9 = (tex2_13.w * _Color.w);
					  lowp vec4 tmpvar_24;
					  tmpvar_24 = texture2D (_BumpMap, tmpvar_6);
					  norm_11 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap2, tmpvar_7);
					  norm2_10 = tmpvar_25;
					  bvec4 tmpvar_26;
					  tmpvar_26 = lessThanEqual (norm2_10, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_27;
					  b_27 = ((2.0 * norm_11) * norm2_10);
					  highp vec4 c_28;
					  c_28 = (1.0 - ((2.0 * 
					    (1.0 - norm_11)
					  ) * (1.0 - norm2_10)));
					  highp float tmpvar_29;
					  if (tmpvar_26.x) {
					    tmpvar_29 = b_27.x;
					  } else {
					    tmpvar_29 = c_28.x;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_26.y) {
					    tmpvar_30 = b_27.y;
					  } else {
					    tmpvar_30 = c_28.y;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_26.z) {
					    tmpvar_31 = b_27.z;
					  } else {
					    tmpvar_31 = c_28.z;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_26.w) {
					    tmpvar_32 = b_27.w;
					  } else {
					    tmpvar_32 = c_28.w;
					  };
					  highp vec4 tmpvar_33;
					  tmpvar_33.x = tmpvar_29;
					  tmpvar_33.y = tmpvar_30;
					  tmpvar_33.z = tmpvar_31;
					  tmpvar_33.w = tmpvar_32;
					  dest_12 = mix (norm2_10, tmpvar_33, vec4(xlat_mutable_Opacity));
					  tmpvar_4 = tmpvar_8;
					  tmpvar_5 = tmpvar_9;
					  lowp vec4 tmpvar_34;
					  tmpvar_34 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_34;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_35;
					  c_35.xyz = (tmpvar_8 * light_3.xyz);
					  c_35.w = tmpvar_9;
					  c_2.xyz = c_35.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _MainTex2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec4 tmpvar_10;
					  tmpvar_10.w = 1.0;
					  tmpvar_10.xyz = normalize((_glesNormal * tmpvar_9));
					  mediump vec4 normal_11;
					  normal_11 = tmpvar_10;
					  mediump vec3 res_12;
					  mediump vec3 x_13;
					  x_13.x = dot (unity_SHAr, normal_11);
					  x_13.y = dot (unity_SHAg, normal_11);
					  x_13.z = dot (unity_SHAb, normal_11);
					  mediump vec3 x1_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15 = (normal_11.xyzz * normal_11.yzzx);
					  x1_14.x = dot (unity_SHBr, tmpvar_15);
					  x1_14.y = dot (unity_SHBg, tmpvar_15);
					  x1_14.z = dot (unity_SHBb, tmpvar_15);
					  res_12 = (x_13 + (x1_14 + (unity_SHC.xyz * 
					    ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y))
					  )));
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = max (((1.055 * 
					    pow (max (res_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_12 = tmpvar_16;
					  tmpvar_3 = tmpvar_16;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					uniform sampler2D _LightBuffer;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp float tmpvar_5;
					  highp vec2 tmpvar_6;
					  highp vec2 tmpvar_7;
					  tmpvar_6.x = 1.0;
					  tmpvar_7.x = 1.0;
					  tmpvar_4 = vec3(0.0, 0.0, 0.0);
					  tmpvar_5 = 0.0;
					  lowp vec3 tmpvar_8;
					  lowp float tmpvar_9;
					  tmpvar_8 = tmpvar_4;
					  tmpvar_9 = tmpvar_5;
					  highp vec4 norm2_10;
					  highp vec4 norm_11;
					  highp vec4 dest_12;
					  highp vec4 tex2_13;
					  highp vec4 tex_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_14 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex2, xlv_TEXCOORD0.zw);
					  tex2_13 = tmpvar_16;
					  xlat_mutable_Opacity = (_Opacity * tex_14.w);
					  bvec3 tmpvar_17;
					  tmpvar_17 = lessThanEqual (tex2_13.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_18;
					  b_18 = ((2.0 * tex_14.xyz) * tex2_13.xyz);
					  highp vec3 c_19;
					  c_19 = (1.0 - ((2.0 * 
					    (1.0 - tex_14.xyz)
					  ) * (1.0 - tex2_13.xyz)));
					  highp float tmpvar_20;
					  if (tmpvar_17.x) {
					    tmpvar_20 = b_18.x;
					  } else {
					    tmpvar_20 = c_19.x;
					  };
					  highp float tmpvar_21;
					  if (tmpvar_17.y) {
					    tmpvar_21 = b_18.y;
					  } else {
					    tmpvar_21 = c_19.y;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_17.z) {
					    tmpvar_22 = b_18.z;
					  } else {
					    tmpvar_22 = c_19.z;
					  };
					  highp vec3 tmpvar_23;
					  tmpvar_23.x = tmpvar_20;
					  tmpvar_23.y = tmpvar_21;
					  tmpvar_23.z = tmpvar_22;
					  dest_12.xyz = mix (tex2_13.xyz, tmpvar_23, vec3(xlat_mutable_Opacity));
					  dest_12.xyz = (dest_12.xyz * _Color.xyz);
					  tmpvar_8 = dest_12.xyz;
					  tmpvar_9 = (tex2_13.w * _Color.w);
					  lowp vec4 tmpvar_24;
					  tmpvar_24 = texture2D (_BumpMap, tmpvar_6);
					  norm_11 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap2, tmpvar_7);
					  norm2_10 = tmpvar_25;
					  bvec4 tmpvar_26;
					  tmpvar_26 = lessThanEqual (norm2_10, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_27;
					  b_27 = ((2.0 * norm_11) * norm2_10);
					  highp vec4 c_28;
					  c_28 = (1.0 - ((2.0 * 
					    (1.0 - norm_11)
					  ) * (1.0 - norm2_10)));
					  highp float tmpvar_29;
					  if (tmpvar_26.x) {
					    tmpvar_29 = b_27.x;
					  } else {
					    tmpvar_29 = c_28.x;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_26.y) {
					    tmpvar_30 = b_27.y;
					  } else {
					    tmpvar_30 = c_28.y;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_26.z) {
					    tmpvar_31 = b_27.z;
					  } else {
					    tmpvar_31 = c_28.z;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_26.w) {
					    tmpvar_32 = b_27.w;
					  } else {
					    tmpvar_32 = c_28.w;
					  };
					  highp vec4 tmpvar_33;
					  tmpvar_33.x = tmpvar_29;
					  tmpvar_33.y = tmpvar_30;
					  tmpvar_33.z = tmpvar_31;
					  tmpvar_33.w = tmpvar_32;
					  dest_12 = mix (norm2_10, tmpvar_33, vec4(xlat_mutable_Opacity));
					  tmpvar_4 = tmpvar_8;
					  tmpvar_5 = tmpvar_9;
					  lowp vec4 tmpvar_34;
					  tmpvar_34 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_34;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_35;
					  c_35.xyz = (tmpvar_8 * light_3.xyz);
					  c_35.w = tmpvar_9;
					  c_2.xyz = c_35.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _MainTex2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec4 tmpvar_10;
					  tmpvar_10.w = 1.0;
					  tmpvar_10.xyz = normalize((_glesNormal * tmpvar_9));
					  mediump vec4 normal_11;
					  normal_11 = tmpvar_10;
					  mediump vec3 res_12;
					  mediump vec3 x_13;
					  x_13.x = dot (unity_SHAr, normal_11);
					  x_13.y = dot (unity_SHAg, normal_11);
					  x_13.z = dot (unity_SHAb, normal_11);
					  mediump vec3 x1_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15 = (normal_11.xyzz * normal_11.yzzx);
					  x1_14.x = dot (unity_SHBr, tmpvar_15);
					  x1_14.y = dot (unity_SHBg, tmpvar_15);
					  x1_14.z = dot (unity_SHBb, tmpvar_15);
					  res_12 = (x_13 + (x1_14 + (unity_SHC.xyz * 
					    ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y))
					  )));
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = max (((1.055 * 
					    pow (max (res_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_12 = tmpvar_16;
					  tmpvar_3 = tmpvar_16;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					uniform sampler2D _LightBuffer;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp float tmpvar_5;
					  highp vec2 tmpvar_6;
					  highp vec2 tmpvar_7;
					  tmpvar_6.x = 1.0;
					  tmpvar_7.x = 1.0;
					  tmpvar_4 = vec3(0.0, 0.0, 0.0);
					  tmpvar_5 = 0.0;
					  lowp vec3 tmpvar_8;
					  lowp float tmpvar_9;
					  tmpvar_8 = tmpvar_4;
					  tmpvar_9 = tmpvar_5;
					  highp vec4 norm2_10;
					  highp vec4 norm_11;
					  highp vec4 dest_12;
					  highp vec4 tex2_13;
					  highp vec4 tex_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_14 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex2, xlv_TEXCOORD0.zw);
					  tex2_13 = tmpvar_16;
					  xlat_mutable_Opacity = (_Opacity * tex_14.w);
					  bvec3 tmpvar_17;
					  tmpvar_17 = lessThanEqual (tex2_13.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_18;
					  b_18 = ((2.0 * tex_14.xyz) * tex2_13.xyz);
					  highp vec3 c_19;
					  c_19 = (1.0 - ((2.0 * 
					    (1.0 - tex_14.xyz)
					  ) * (1.0 - tex2_13.xyz)));
					  highp float tmpvar_20;
					  if (tmpvar_17.x) {
					    tmpvar_20 = b_18.x;
					  } else {
					    tmpvar_20 = c_19.x;
					  };
					  highp float tmpvar_21;
					  if (tmpvar_17.y) {
					    tmpvar_21 = b_18.y;
					  } else {
					    tmpvar_21 = c_19.y;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_17.z) {
					    tmpvar_22 = b_18.z;
					  } else {
					    tmpvar_22 = c_19.z;
					  };
					  highp vec3 tmpvar_23;
					  tmpvar_23.x = tmpvar_20;
					  tmpvar_23.y = tmpvar_21;
					  tmpvar_23.z = tmpvar_22;
					  dest_12.xyz = mix (tex2_13.xyz, tmpvar_23, vec3(xlat_mutable_Opacity));
					  dest_12.xyz = (dest_12.xyz * _Color.xyz);
					  tmpvar_8 = dest_12.xyz;
					  tmpvar_9 = (tex2_13.w * _Color.w);
					  lowp vec4 tmpvar_24;
					  tmpvar_24 = texture2D (_BumpMap, tmpvar_6);
					  norm_11 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap2, tmpvar_7);
					  norm2_10 = tmpvar_25;
					  bvec4 tmpvar_26;
					  tmpvar_26 = lessThanEqual (norm2_10, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_27;
					  b_27 = ((2.0 * norm_11) * norm2_10);
					  highp vec4 c_28;
					  c_28 = (1.0 - ((2.0 * 
					    (1.0 - norm_11)
					  ) * (1.0 - norm2_10)));
					  highp float tmpvar_29;
					  if (tmpvar_26.x) {
					    tmpvar_29 = b_27.x;
					  } else {
					    tmpvar_29 = c_28.x;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_26.y) {
					    tmpvar_30 = b_27.y;
					  } else {
					    tmpvar_30 = c_28.y;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_26.z) {
					    tmpvar_31 = b_27.z;
					  } else {
					    tmpvar_31 = c_28.z;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_26.w) {
					    tmpvar_32 = b_27.w;
					  } else {
					    tmpvar_32 = c_28.w;
					  };
					  highp vec4 tmpvar_33;
					  tmpvar_33.x = tmpvar_29;
					  tmpvar_33.y = tmpvar_30;
					  tmpvar_33.z = tmpvar_31;
					  tmpvar_33.w = tmpvar_32;
					  dest_12 = mix (norm2_10, tmpvar_33, vec4(xlat_mutable_Opacity));
					  tmpvar_4 = tmpvar_8;
					  tmpvar_5 = tmpvar_9;
					  lowp vec4 tmpvar_34;
					  tmpvar_34 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_34;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_35;
					  c_35.xyz = (tmpvar_8 * light_3.xyz);
					  c_35.w = tmpvar_9;
					  c_2.xyz = c_35.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _MainTex2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec4 tmpvar_10;
					  tmpvar_10.w = 1.0;
					  tmpvar_10.xyz = normalize((_glesNormal * tmpvar_9));
					  mediump vec4 normal_11;
					  normal_11 = tmpvar_10;
					  mediump vec3 res_12;
					  mediump vec3 x_13;
					  x_13.x = dot (unity_SHAr, normal_11);
					  x_13.y = dot (unity_SHAg, normal_11);
					  x_13.z = dot (unity_SHAb, normal_11);
					  mediump vec3 x1_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15 = (normal_11.xyzz * normal_11.yzzx);
					  x1_14.x = dot (unity_SHBr, tmpvar_15);
					  x1_14.y = dot (unity_SHBg, tmpvar_15);
					  x1_14.z = dot (unity_SHBb, tmpvar_15);
					  res_12 = (x_13 + (x1_14 + (unity_SHC.xyz * 
					    ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y))
					  )));
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = max (((1.055 * 
					    pow (max (res_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_12 = tmpvar_16;
					  tmpvar_3 = tmpvar_16;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					uniform sampler2D _LightBuffer;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp float tmpvar_5;
					  highp vec2 tmpvar_6;
					  highp vec2 tmpvar_7;
					  tmpvar_6.x = 1.0;
					  tmpvar_7.x = 1.0;
					  tmpvar_4 = vec3(0.0, 0.0, 0.0);
					  tmpvar_5 = 0.0;
					  lowp vec3 tmpvar_8;
					  lowp float tmpvar_9;
					  tmpvar_8 = tmpvar_4;
					  tmpvar_9 = tmpvar_5;
					  highp vec4 norm2_10;
					  highp vec4 norm_11;
					  highp vec4 dest_12;
					  highp vec4 tex2_13;
					  highp vec4 tex_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_14 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex2, xlv_TEXCOORD0.zw);
					  tex2_13 = tmpvar_16;
					  xlat_mutable_Opacity = (_Opacity * tex_14.w);
					  bvec3 tmpvar_17;
					  tmpvar_17 = lessThanEqual (tex2_13.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_18;
					  b_18 = ((2.0 * tex_14.xyz) * tex2_13.xyz);
					  highp vec3 c_19;
					  c_19 = (1.0 - ((2.0 * 
					    (1.0 - tex_14.xyz)
					  ) * (1.0 - tex2_13.xyz)));
					  highp float tmpvar_20;
					  if (tmpvar_17.x) {
					    tmpvar_20 = b_18.x;
					  } else {
					    tmpvar_20 = c_19.x;
					  };
					  highp float tmpvar_21;
					  if (tmpvar_17.y) {
					    tmpvar_21 = b_18.y;
					  } else {
					    tmpvar_21 = c_19.y;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_17.z) {
					    tmpvar_22 = b_18.z;
					  } else {
					    tmpvar_22 = c_19.z;
					  };
					  highp vec3 tmpvar_23;
					  tmpvar_23.x = tmpvar_20;
					  tmpvar_23.y = tmpvar_21;
					  tmpvar_23.z = tmpvar_22;
					  dest_12.xyz = mix (tex2_13.xyz, tmpvar_23, vec3(xlat_mutable_Opacity));
					  dest_12.xyz = (dest_12.xyz * _Color.xyz);
					  tmpvar_8 = dest_12.xyz;
					  tmpvar_9 = (tex2_13.w * _Color.w);
					  lowp vec4 tmpvar_24;
					  tmpvar_24 = texture2D (_BumpMap, tmpvar_6);
					  norm_11 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap2, tmpvar_7);
					  norm2_10 = tmpvar_25;
					  bvec4 tmpvar_26;
					  tmpvar_26 = lessThanEqual (norm2_10, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_27;
					  b_27 = ((2.0 * norm_11) * norm2_10);
					  highp vec4 c_28;
					  c_28 = (1.0 - ((2.0 * 
					    (1.0 - norm_11)
					  ) * (1.0 - norm2_10)));
					  highp float tmpvar_29;
					  if (tmpvar_26.x) {
					    tmpvar_29 = b_27.x;
					  } else {
					    tmpvar_29 = c_28.x;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_26.y) {
					    tmpvar_30 = b_27.y;
					  } else {
					    tmpvar_30 = c_28.y;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_26.z) {
					    tmpvar_31 = b_27.z;
					  } else {
					    tmpvar_31 = c_28.z;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_26.w) {
					    tmpvar_32 = b_27.w;
					  } else {
					    tmpvar_32 = c_28.w;
					  };
					  highp vec4 tmpvar_33;
					  tmpvar_33.x = tmpvar_29;
					  tmpvar_33.y = tmpvar_30;
					  tmpvar_33.z = tmpvar_31;
					  tmpvar_33.w = tmpvar_32;
					  dest_12 = mix (norm2_10, tmpvar_33, vec4(xlat_mutable_Opacity));
					  tmpvar_4 = tmpvar_8;
					  tmpvar_5 = tmpvar_9;
					  lowp vec4 tmpvar_34;
					  tmpvar_34 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_34;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_35;
					  c_35.xyz = (tmpvar_8 * light_3.xyz);
					  c_35.w = tmpvar_9;
					  c_2.xyz = c_35.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _MainTex2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec4 tmpvar_10;
					  tmpvar_10.w = 1.0;
					  tmpvar_10.xyz = normalize((_glesNormal * tmpvar_9));
					  mediump vec4 normal_11;
					  normal_11 = tmpvar_10;
					  mediump vec3 res_12;
					  mediump vec3 x_13;
					  x_13.x = dot (unity_SHAr, normal_11);
					  x_13.y = dot (unity_SHAg, normal_11);
					  x_13.z = dot (unity_SHAb, normal_11);
					  mediump vec3 x1_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15 = (normal_11.xyzz * normal_11.yzzx);
					  x1_14.x = dot (unity_SHBr, tmpvar_15);
					  x1_14.y = dot (unity_SHBg, tmpvar_15);
					  x1_14.z = dot (unity_SHBb, tmpvar_15);
					  res_12 = (x_13 + (x1_14 + (unity_SHC.xyz * 
					    ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y))
					  )));
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = max (((1.055 * 
					    pow (max (res_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_12 = tmpvar_16;
					  tmpvar_3 = tmpvar_16;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					uniform sampler2D _LightBuffer;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp float tmpvar_5;
					  highp vec2 tmpvar_6;
					  highp vec2 tmpvar_7;
					  tmpvar_6.x = 1.0;
					  tmpvar_7.x = 1.0;
					  tmpvar_4 = vec3(0.0, 0.0, 0.0);
					  tmpvar_5 = 0.0;
					  lowp vec3 tmpvar_8;
					  lowp float tmpvar_9;
					  tmpvar_8 = tmpvar_4;
					  tmpvar_9 = tmpvar_5;
					  highp vec4 norm2_10;
					  highp vec4 norm_11;
					  highp vec4 dest_12;
					  highp vec4 tex2_13;
					  highp vec4 tex_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_14 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex2, xlv_TEXCOORD0.zw);
					  tex2_13 = tmpvar_16;
					  xlat_mutable_Opacity = (_Opacity * tex_14.w);
					  bvec3 tmpvar_17;
					  tmpvar_17 = lessThanEqual (tex2_13.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_18;
					  b_18 = ((2.0 * tex_14.xyz) * tex2_13.xyz);
					  highp vec3 c_19;
					  c_19 = (1.0 - ((2.0 * 
					    (1.0 - tex_14.xyz)
					  ) * (1.0 - tex2_13.xyz)));
					  highp float tmpvar_20;
					  if (tmpvar_17.x) {
					    tmpvar_20 = b_18.x;
					  } else {
					    tmpvar_20 = c_19.x;
					  };
					  highp float tmpvar_21;
					  if (tmpvar_17.y) {
					    tmpvar_21 = b_18.y;
					  } else {
					    tmpvar_21 = c_19.y;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_17.z) {
					    tmpvar_22 = b_18.z;
					  } else {
					    tmpvar_22 = c_19.z;
					  };
					  highp vec3 tmpvar_23;
					  tmpvar_23.x = tmpvar_20;
					  tmpvar_23.y = tmpvar_21;
					  tmpvar_23.z = tmpvar_22;
					  dest_12.xyz = mix (tex2_13.xyz, tmpvar_23, vec3(xlat_mutable_Opacity));
					  dest_12.xyz = (dest_12.xyz * _Color.xyz);
					  tmpvar_8 = dest_12.xyz;
					  tmpvar_9 = (tex2_13.w * _Color.w);
					  lowp vec4 tmpvar_24;
					  tmpvar_24 = texture2D (_BumpMap, tmpvar_6);
					  norm_11 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap2, tmpvar_7);
					  norm2_10 = tmpvar_25;
					  bvec4 tmpvar_26;
					  tmpvar_26 = lessThanEqual (norm2_10, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_27;
					  b_27 = ((2.0 * norm_11) * norm2_10);
					  highp vec4 c_28;
					  c_28 = (1.0 - ((2.0 * 
					    (1.0 - norm_11)
					  ) * (1.0 - norm2_10)));
					  highp float tmpvar_29;
					  if (tmpvar_26.x) {
					    tmpvar_29 = b_27.x;
					  } else {
					    tmpvar_29 = c_28.x;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_26.y) {
					    tmpvar_30 = b_27.y;
					  } else {
					    tmpvar_30 = c_28.y;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_26.z) {
					    tmpvar_31 = b_27.z;
					  } else {
					    tmpvar_31 = c_28.z;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_26.w) {
					    tmpvar_32 = b_27.w;
					  } else {
					    tmpvar_32 = c_28.w;
					  };
					  highp vec4 tmpvar_33;
					  tmpvar_33.x = tmpvar_29;
					  tmpvar_33.y = tmpvar_30;
					  tmpvar_33.z = tmpvar_31;
					  tmpvar_33.w = tmpvar_32;
					  dest_12 = mix (norm2_10, tmpvar_33, vec4(xlat_mutable_Opacity));
					  tmpvar_4 = tmpvar_8;
					  tmpvar_5 = tmpvar_9;
					  lowp vec4 tmpvar_34;
					  tmpvar_34 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_34;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_35;
					  c_35.xyz = (tmpvar_8 * light_3.xyz);
					  c_35.w = tmpvar_9;
					  c_2.xyz = c_35.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _MainTex2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec4 tmpvar_10;
					  tmpvar_10.w = 1.0;
					  tmpvar_10.xyz = normalize((_glesNormal * tmpvar_9));
					  mediump vec4 normal_11;
					  normal_11 = tmpvar_10;
					  mediump vec3 res_12;
					  mediump vec3 x_13;
					  x_13.x = dot (unity_SHAr, normal_11);
					  x_13.y = dot (unity_SHAg, normal_11);
					  x_13.z = dot (unity_SHAb, normal_11);
					  mediump vec3 x1_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15 = (normal_11.xyzz * normal_11.yzzx);
					  x1_14.x = dot (unity_SHBr, tmpvar_15);
					  x1_14.y = dot (unity_SHBg, tmpvar_15);
					  x1_14.z = dot (unity_SHBb, tmpvar_15);
					  res_12 = (x_13 + (x1_14 + (unity_SHC.xyz * 
					    ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y))
					  )));
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = max (((1.055 * 
					    pow (max (res_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_12 = tmpvar_16;
					  tmpvar_3 = tmpvar_16;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					uniform sampler2D _LightBuffer;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp float tmpvar_5;
					  highp vec2 tmpvar_6;
					  highp vec2 tmpvar_7;
					  tmpvar_6.x = 1.0;
					  tmpvar_7.x = 1.0;
					  tmpvar_4 = vec3(0.0, 0.0, 0.0);
					  tmpvar_5 = 0.0;
					  lowp vec3 tmpvar_8;
					  lowp float tmpvar_9;
					  tmpvar_8 = tmpvar_4;
					  tmpvar_9 = tmpvar_5;
					  highp vec4 norm2_10;
					  highp vec4 norm_11;
					  highp vec4 dest_12;
					  highp vec4 tex2_13;
					  highp vec4 tex_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_14 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex2, xlv_TEXCOORD0.zw);
					  tex2_13 = tmpvar_16;
					  xlat_mutable_Opacity = (_Opacity * tex_14.w);
					  bvec3 tmpvar_17;
					  tmpvar_17 = lessThanEqual (tex2_13.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_18;
					  b_18 = ((2.0 * tex_14.xyz) * tex2_13.xyz);
					  highp vec3 c_19;
					  c_19 = (1.0 - ((2.0 * 
					    (1.0 - tex_14.xyz)
					  ) * (1.0 - tex2_13.xyz)));
					  highp float tmpvar_20;
					  if (tmpvar_17.x) {
					    tmpvar_20 = b_18.x;
					  } else {
					    tmpvar_20 = c_19.x;
					  };
					  highp float tmpvar_21;
					  if (tmpvar_17.y) {
					    tmpvar_21 = b_18.y;
					  } else {
					    tmpvar_21 = c_19.y;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_17.z) {
					    tmpvar_22 = b_18.z;
					  } else {
					    tmpvar_22 = c_19.z;
					  };
					  highp vec3 tmpvar_23;
					  tmpvar_23.x = tmpvar_20;
					  tmpvar_23.y = tmpvar_21;
					  tmpvar_23.z = tmpvar_22;
					  dest_12.xyz = mix (tex2_13.xyz, tmpvar_23, vec3(xlat_mutable_Opacity));
					  dest_12.xyz = (dest_12.xyz * _Color.xyz);
					  tmpvar_8 = dest_12.xyz;
					  tmpvar_9 = (tex2_13.w * _Color.w);
					  lowp vec4 tmpvar_24;
					  tmpvar_24 = texture2D (_BumpMap, tmpvar_6);
					  norm_11 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap2, tmpvar_7);
					  norm2_10 = tmpvar_25;
					  bvec4 tmpvar_26;
					  tmpvar_26 = lessThanEqual (norm2_10, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_27;
					  b_27 = ((2.0 * norm_11) * norm2_10);
					  highp vec4 c_28;
					  c_28 = (1.0 - ((2.0 * 
					    (1.0 - norm_11)
					  ) * (1.0 - norm2_10)));
					  highp float tmpvar_29;
					  if (tmpvar_26.x) {
					    tmpvar_29 = b_27.x;
					  } else {
					    tmpvar_29 = c_28.x;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_26.y) {
					    tmpvar_30 = b_27.y;
					  } else {
					    tmpvar_30 = c_28.y;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_26.z) {
					    tmpvar_31 = b_27.z;
					  } else {
					    tmpvar_31 = c_28.z;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_26.w) {
					    tmpvar_32 = b_27.w;
					  } else {
					    tmpvar_32 = c_28.w;
					  };
					  highp vec4 tmpvar_33;
					  tmpvar_33.x = tmpvar_29;
					  tmpvar_33.y = tmpvar_30;
					  tmpvar_33.z = tmpvar_31;
					  tmpvar_33.w = tmpvar_32;
					  dest_12 = mix (norm2_10, tmpvar_33, vec4(xlat_mutable_Opacity));
					  tmpvar_4 = tmpvar_8;
					  tmpvar_5 = tmpvar_9;
					  lowp vec4 tmpvar_34;
					  tmpvar_34 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_34;
					  mediump vec4 tmpvar_35;
					  tmpvar_35 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_35.w;
					  light_3.xyz = (tmpvar_35.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_36;
					  c_36.xyz = (tmpvar_8 * light_3.xyz);
					  c_36.w = tmpvar_9;
					  c_2.xyz = c_36.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _MainTex2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec4 tmpvar_10;
					  tmpvar_10.w = 1.0;
					  tmpvar_10.xyz = normalize((_glesNormal * tmpvar_9));
					  mediump vec4 normal_11;
					  normal_11 = tmpvar_10;
					  mediump vec3 res_12;
					  mediump vec3 x_13;
					  x_13.x = dot (unity_SHAr, normal_11);
					  x_13.y = dot (unity_SHAg, normal_11);
					  x_13.z = dot (unity_SHAb, normal_11);
					  mediump vec3 x1_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15 = (normal_11.xyzz * normal_11.yzzx);
					  x1_14.x = dot (unity_SHBr, tmpvar_15);
					  x1_14.y = dot (unity_SHBg, tmpvar_15);
					  x1_14.z = dot (unity_SHBb, tmpvar_15);
					  res_12 = (x_13 + (x1_14 + (unity_SHC.xyz * 
					    ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y))
					  )));
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = max (((1.055 * 
					    pow (max (res_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_12 = tmpvar_16;
					  tmpvar_3 = tmpvar_16;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					uniform sampler2D _LightBuffer;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp float tmpvar_5;
					  highp vec2 tmpvar_6;
					  highp vec2 tmpvar_7;
					  tmpvar_6.x = 1.0;
					  tmpvar_7.x = 1.0;
					  tmpvar_4 = vec3(0.0, 0.0, 0.0);
					  tmpvar_5 = 0.0;
					  lowp vec3 tmpvar_8;
					  lowp float tmpvar_9;
					  tmpvar_8 = tmpvar_4;
					  tmpvar_9 = tmpvar_5;
					  highp vec4 norm2_10;
					  highp vec4 norm_11;
					  highp vec4 dest_12;
					  highp vec4 tex2_13;
					  highp vec4 tex_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_14 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex2, xlv_TEXCOORD0.zw);
					  tex2_13 = tmpvar_16;
					  xlat_mutable_Opacity = (_Opacity * tex_14.w);
					  bvec3 tmpvar_17;
					  tmpvar_17 = lessThanEqual (tex2_13.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_18;
					  b_18 = ((2.0 * tex_14.xyz) * tex2_13.xyz);
					  highp vec3 c_19;
					  c_19 = (1.0 - ((2.0 * 
					    (1.0 - tex_14.xyz)
					  ) * (1.0 - tex2_13.xyz)));
					  highp float tmpvar_20;
					  if (tmpvar_17.x) {
					    tmpvar_20 = b_18.x;
					  } else {
					    tmpvar_20 = c_19.x;
					  };
					  highp float tmpvar_21;
					  if (tmpvar_17.y) {
					    tmpvar_21 = b_18.y;
					  } else {
					    tmpvar_21 = c_19.y;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_17.z) {
					    tmpvar_22 = b_18.z;
					  } else {
					    tmpvar_22 = c_19.z;
					  };
					  highp vec3 tmpvar_23;
					  tmpvar_23.x = tmpvar_20;
					  tmpvar_23.y = tmpvar_21;
					  tmpvar_23.z = tmpvar_22;
					  dest_12.xyz = mix (tex2_13.xyz, tmpvar_23, vec3(xlat_mutable_Opacity));
					  dest_12.xyz = (dest_12.xyz * _Color.xyz);
					  tmpvar_8 = dest_12.xyz;
					  tmpvar_9 = (tex2_13.w * _Color.w);
					  lowp vec4 tmpvar_24;
					  tmpvar_24 = texture2D (_BumpMap, tmpvar_6);
					  norm_11 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap2, tmpvar_7);
					  norm2_10 = tmpvar_25;
					  bvec4 tmpvar_26;
					  tmpvar_26 = lessThanEqual (norm2_10, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_27;
					  b_27 = ((2.0 * norm_11) * norm2_10);
					  highp vec4 c_28;
					  c_28 = (1.0 - ((2.0 * 
					    (1.0 - norm_11)
					  ) * (1.0 - norm2_10)));
					  highp float tmpvar_29;
					  if (tmpvar_26.x) {
					    tmpvar_29 = b_27.x;
					  } else {
					    tmpvar_29 = c_28.x;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_26.y) {
					    tmpvar_30 = b_27.y;
					  } else {
					    tmpvar_30 = c_28.y;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_26.z) {
					    tmpvar_31 = b_27.z;
					  } else {
					    tmpvar_31 = c_28.z;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_26.w) {
					    tmpvar_32 = b_27.w;
					  } else {
					    tmpvar_32 = c_28.w;
					  };
					  highp vec4 tmpvar_33;
					  tmpvar_33.x = tmpvar_29;
					  tmpvar_33.y = tmpvar_30;
					  tmpvar_33.z = tmpvar_31;
					  tmpvar_33.w = tmpvar_32;
					  dest_12 = mix (norm2_10, tmpvar_33, vec4(xlat_mutable_Opacity));
					  tmpvar_4 = tmpvar_8;
					  tmpvar_5 = tmpvar_9;
					  lowp vec4 tmpvar_34;
					  tmpvar_34 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_34;
					  mediump vec4 tmpvar_35;
					  tmpvar_35 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_35.w;
					  light_3.xyz = (tmpvar_35.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_36;
					  c_36.xyz = (tmpvar_8 * light_3.xyz);
					  c_36.w = tmpvar_9;
					  c_2.xyz = c_36.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _MainTex2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec4 tmpvar_10;
					  tmpvar_10.w = 1.0;
					  tmpvar_10.xyz = normalize((_glesNormal * tmpvar_9));
					  mediump vec4 normal_11;
					  normal_11 = tmpvar_10;
					  mediump vec3 res_12;
					  mediump vec3 x_13;
					  x_13.x = dot (unity_SHAr, normal_11);
					  x_13.y = dot (unity_SHAg, normal_11);
					  x_13.z = dot (unity_SHAb, normal_11);
					  mediump vec3 x1_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15 = (normal_11.xyzz * normal_11.yzzx);
					  x1_14.x = dot (unity_SHBr, tmpvar_15);
					  x1_14.y = dot (unity_SHBg, tmpvar_15);
					  x1_14.z = dot (unity_SHBb, tmpvar_15);
					  res_12 = (x_13 + (x1_14 + (unity_SHC.xyz * 
					    ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y))
					  )));
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = max (((1.055 * 
					    pow (max (res_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_12 = tmpvar_16;
					  tmpvar_3 = tmpvar_16;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					uniform sampler2D _LightBuffer;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp float tmpvar_5;
					  highp vec2 tmpvar_6;
					  highp vec2 tmpvar_7;
					  tmpvar_6.x = 1.0;
					  tmpvar_7.x = 1.0;
					  tmpvar_4 = vec3(0.0, 0.0, 0.0);
					  tmpvar_5 = 0.0;
					  lowp vec3 tmpvar_8;
					  lowp float tmpvar_9;
					  tmpvar_8 = tmpvar_4;
					  tmpvar_9 = tmpvar_5;
					  highp vec4 norm2_10;
					  highp vec4 norm_11;
					  highp vec4 dest_12;
					  highp vec4 tex2_13;
					  highp vec4 tex_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_14 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex2, xlv_TEXCOORD0.zw);
					  tex2_13 = tmpvar_16;
					  xlat_mutable_Opacity = (_Opacity * tex_14.w);
					  bvec3 tmpvar_17;
					  tmpvar_17 = lessThanEqual (tex2_13.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_18;
					  b_18 = ((2.0 * tex_14.xyz) * tex2_13.xyz);
					  highp vec3 c_19;
					  c_19 = (1.0 - ((2.0 * 
					    (1.0 - tex_14.xyz)
					  ) * (1.0 - tex2_13.xyz)));
					  highp float tmpvar_20;
					  if (tmpvar_17.x) {
					    tmpvar_20 = b_18.x;
					  } else {
					    tmpvar_20 = c_19.x;
					  };
					  highp float tmpvar_21;
					  if (tmpvar_17.y) {
					    tmpvar_21 = b_18.y;
					  } else {
					    tmpvar_21 = c_19.y;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_17.z) {
					    tmpvar_22 = b_18.z;
					  } else {
					    tmpvar_22 = c_19.z;
					  };
					  highp vec3 tmpvar_23;
					  tmpvar_23.x = tmpvar_20;
					  tmpvar_23.y = tmpvar_21;
					  tmpvar_23.z = tmpvar_22;
					  dest_12.xyz = mix (tex2_13.xyz, tmpvar_23, vec3(xlat_mutable_Opacity));
					  dest_12.xyz = (dest_12.xyz * _Color.xyz);
					  tmpvar_8 = dest_12.xyz;
					  tmpvar_9 = (tex2_13.w * _Color.w);
					  lowp vec4 tmpvar_24;
					  tmpvar_24 = texture2D (_BumpMap, tmpvar_6);
					  norm_11 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap2, tmpvar_7);
					  norm2_10 = tmpvar_25;
					  bvec4 tmpvar_26;
					  tmpvar_26 = lessThanEqual (norm2_10, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_27;
					  b_27 = ((2.0 * norm_11) * norm2_10);
					  highp vec4 c_28;
					  c_28 = (1.0 - ((2.0 * 
					    (1.0 - norm_11)
					  ) * (1.0 - norm2_10)));
					  highp float tmpvar_29;
					  if (tmpvar_26.x) {
					    tmpvar_29 = b_27.x;
					  } else {
					    tmpvar_29 = c_28.x;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_26.y) {
					    tmpvar_30 = b_27.y;
					  } else {
					    tmpvar_30 = c_28.y;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_26.z) {
					    tmpvar_31 = b_27.z;
					  } else {
					    tmpvar_31 = c_28.z;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_26.w) {
					    tmpvar_32 = b_27.w;
					  } else {
					    tmpvar_32 = c_28.w;
					  };
					  highp vec4 tmpvar_33;
					  tmpvar_33.x = tmpvar_29;
					  tmpvar_33.y = tmpvar_30;
					  tmpvar_33.z = tmpvar_31;
					  tmpvar_33.w = tmpvar_32;
					  dest_12 = mix (norm2_10, tmpvar_33, vec4(xlat_mutable_Opacity));
					  tmpvar_4 = tmpvar_8;
					  tmpvar_5 = tmpvar_9;
					  lowp vec4 tmpvar_34;
					  tmpvar_34 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_34;
					  mediump vec4 tmpvar_35;
					  tmpvar_35 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_35.w;
					  light_3.xyz = (tmpvar_35.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_36;
					  c_36.xyz = (tmpvar_8 * light_3.xyz);
					  c_36.w = tmpvar_9;
					  c_2.xyz = c_36.xyz;
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _MainTex2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec4 tmpvar_10;
					  tmpvar_10.w = 1.0;
					  tmpvar_10.xyz = normalize((_glesNormal * tmpvar_9));
					  mediump vec4 normal_11;
					  normal_11 = tmpvar_10;
					  mediump vec3 res_12;
					  mediump vec3 x_13;
					  x_13.x = dot (unity_SHAr, normal_11);
					  x_13.y = dot (unity_SHAg, normal_11);
					  x_13.z = dot (unity_SHAb, normal_11);
					  mediump vec3 x1_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15 = (normal_11.xyzz * normal_11.yzzx);
					  x1_14.x = dot (unity_SHBr, tmpvar_15);
					  x1_14.y = dot (unity_SHBg, tmpvar_15);
					  x1_14.z = dot (unity_SHBb, tmpvar_15);
					  res_12 = (x_13 + (x1_14 + (unity_SHC.xyz * 
					    ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y))
					  )));
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = max (((1.055 * 
					    pow (max (res_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_12 = tmpvar_16;
					  tmpvar_3 = tmpvar_16;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					uniform sampler2D _LightBuffer;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp float tmpvar_5;
					  highp vec2 tmpvar_6;
					  highp vec2 tmpvar_7;
					  tmpvar_6.x = 1.0;
					  tmpvar_7.x = 1.0;
					  tmpvar_4 = vec3(0.0, 0.0, 0.0);
					  tmpvar_5 = 0.0;
					  lowp vec3 tmpvar_8;
					  lowp float tmpvar_9;
					  tmpvar_8 = tmpvar_4;
					  tmpvar_9 = tmpvar_5;
					  highp vec4 norm2_10;
					  highp vec4 norm_11;
					  highp vec4 dest_12;
					  highp vec4 tex2_13;
					  highp vec4 tex_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_14 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex2, xlv_TEXCOORD0.zw);
					  tex2_13 = tmpvar_16;
					  xlat_mutable_Opacity = (_Opacity * tex_14.w);
					  bvec3 tmpvar_17;
					  tmpvar_17 = lessThanEqual (tex2_13.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_18;
					  b_18 = ((2.0 * tex_14.xyz) * tex2_13.xyz);
					  highp vec3 c_19;
					  c_19 = (1.0 - ((2.0 * 
					    (1.0 - tex_14.xyz)
					  ) * (1.0 - tex2_13.xyz)));
					  highp float tmpvar_20;
					  if (tmpvar_17.x) {
					    tmpvar_20 = b_18.x;
					  } else {
					    tmpvar_20 = c_19.x;
					  };
					  highp float tmpvar_21;
					  if (tmpvar_17.y) {
					    tmpvar_21 = b_18.y;
					  } else {
					    tmpvar_21 = c_19.y;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_17.z) {
					    tmpvar_22 = b_18.z;
					  } else {
					    tmpvar_22 = c_19.z;
					  };
					  highp vec3 tmpvar_23;
					  tmpvar_23.x = tmpvar_20;
					  tmpvar_23.y = tmpvar_21;
					  tmpvar_23.z = tmpvar_22;
					  dest_12.xyz = mix (tex2_13.xyz, tmpvar_23, vec3(xlat_mutable_Opacity));
					  dest_12.xyz = (dest_12.xyz * _Color.xyz);
					  tmpvar_8 = dest_12.xyz;
					  tmpvar_9 = (tex2_13.w * _Color.w);
					  lowp vec4 tmpvar_24;
					  tmpvar_24 = texture2D (_BumpMap, tmpvar_6);
					  norm_11 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap2, tmpvar_7);
					  norm2_10 = tmpvar_25;
					  bvec4 tmpvar_26;
					  tmpvar_26 = lessThanEqual (norm2_10, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_27;
					  b_27 = ((2.0 * norm_11) * norm2_10);
					  highp vec4 c_28;
					  c_28 = (1.0 - ((2.0 * 
					    (1.0 - norm_11)
					  ) * (1.0 - norm2_10)));
					  highp float tmpvar_29;
					  if (tmpvar_26.x) {
					    tmpvar_29 = b_27.x;
					  } else {
					    tmpvar_29 = c_28.x;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_26.y) {
					    tmpvar_30 = b_27.y;
					  } else {
					    tmpvar_30 = c_28.y;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_26.z) {
					    tmpvar_31 = b_27.z;
					  } else {
					    tmpvar_31 = c_28.z;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_26.w) {
					    tmpvar_32 = b_27.w;
					  } else {
					    tmpvar_32 = c_28.w;
					  };
					  highp vec4 tmpvar_33;
					  tmpvar_33.x = tmpvar_29;
					  tmpvar_33.y = tmpvar_30;
					  tmpvar_33.z = tmpvar_31;
					  tmpvar_33.w = tmpvar_32;
					  dest_12 = mix (norm2_10, tmpvar_33, vec4(xlat_mutable_Opacity));
					  tmpvar_4 = tmpvar_8;
					  tmpvar_5 = tmpvar_9;
					  lowp vec4 tmpvar_34;
					  tmpvar_34 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_34;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_35;
					  c_35.xyz = (tmpvar_8 * light_3.xyz);
					  c_35.w = tmpvar_9;
					  c_2 = c_35;
					  highp float tmpvar_36;
					  tmpvar_36 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_36));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _MainTex2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec4 tmpvar_10;
					  tmpvar_10.w = 1.0;
					  tmpvar_10.xyz = normalize((_glesNormal * tmpvar_9));
					  mediump vec4 normal_11;
					  normal_11 = tmpvar_10;
					  mediump vec3 res_12;
					  mediump vec3 x_13;
					  x_13.x = dot (unity_SHAr, normal_11);
					  x_13.y = dot (unity_SHAg, normal_11);
					  x_13.z = dot (unity_SHAb, normal_11);
					  mediump vec3 x1_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15 = (normal_11.xyzz * normal_11.yzzx);
					  x1_14.x = dot (unity_SHBr, tmpvar_15);
					  x1_14.y = dot (unity_SHBg, tmpvar_15);
					  x1_14.z = dot (unity_SHBb, tmpvar_15);
					  res_12 = (x_13 + (x1_14 + (unity_SHC.xyz * 
					    ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y))
					  )));
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = max (((1.055 * 
					    pow (max (res_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_12 = tmpvar_16;
					  tmpvar_3 = tmpvar_16;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					uniform sampler2D _LightBuffer;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp float tmpvar_5;
					  highp vec2 tmpvar_6;
					  highp vec2 tmpvar_7;
					  tmpvar_6.x = 1.0;
					  tmpvar_7.x = 1.0;
					  tmpvar_4 = vec3(0.0, 0.0, 0.0);
					  tmpvar_5 = 0.0;
					  lowp vec3 tmpvar_8;
					  lowp float tmpvar_9;
					  tmpvar_8 = tmpvar_4;
					  tmpvar_9 = tmpvar_5;
					  highp vec4 norm2_10;
					  highp vec4 norm_11;
					  highp vec4 dest_12;
					  highp vec4 tex2_13;
					  highp vec4 tex_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_14 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex2, xlv_TEXCOORD0.zw);
					  tex2_13 = tmpvar_16;
					  xlat_mutable_Opacity = (_Opacity * tex_14.w);
					  bvec3 tmpvar_17;
					  tmpvar_17 = lessThanEqual (tex2_13.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_18;
					  b_18 = ((2.0 * tex_14.xyz) * tex2_13.xyz);
					  highp vec3 c_19;
					  c_19 = (1.0 - ((2.0 * 
					    (1.0 - tex_14.xyz)
					  ) * (1.0 - tex2_13.xyz)));
					  highp float tmpvar_20;
					  if (tmpvar_17.x) {
					    tmpvar_20 = b_18.x;
					  } else {
					    tmpvar_20 = c_19.x;
					  };
					  highp float tmpvar_21;
					  if (tmpvar_17.y) {
					    tmpvar_21 = b_18.y;
					  } else {
					    tmpvar_21 = c_19.y;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_17.z) {
					    tmpvar_22 = b_18.z;
					  } else {
					    tmpvar_22 = c_19.z;
					  };
					  highp vec3 tmpvar_23;
					  tmpvar_23.x = tmpvar_20;
					  tmpvar_23.y = tmpvar_21;
					  tmpvar_23.z = tmpvar_22;
					  dest_12.xyz = mix (tex2_13.xyz, tmpvar_23, vec3(xlat_mutable_Opacity));
					  dest_12.xyz = (dest_12.xyz * _Color.xyz);
					  tmpvar_8 = dest_12.xyz;
					  tmpvar_9 = (tex2_13.w * _Color.w);
					  lowp vec4 tmpvar_24;
					  tmpvar_24 = texture2D (_BumpMap, tmpvar_6);
					  norm_11 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap2, tmpvar_7);
					  norm2_10 = tmpvar_25;
					  bvec4 tmpvar_26;
					  tmpvar_26 = lessThanEqual (norm2_10, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_27;
					  b_27 = ((2.0 * norm_11) * norm2_10);
					  highp vec4 c_28;
					  c_28 = (1.0 - ((2.0 * 
					    (1.0 - norm_11)
					  ) * (1.0 - norm2_10)));
					  highp float tmpvar_29;
					  if (tmpvar_26.x) {
					    tmpvar_29 = b_27.x;
					  } else {
					    tmpvar_29 = c_28.x;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_26.y) {
					    tmpvar_30 = b_27.y;
					  } else {
					    tmpvar_30 = c_28.y;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_26.z) {
					    tmpvar_31 = b_27.z;
					  } else {
					    tmpvar_31 = c_28.z;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_26.w) {
					    tmpvar_32 = b_27.w;
					  } else {
					    tmpvar_32 = c_28.w;
					  };
					  highp vec4 tmpvar_33;
					  tmpvar_33.x = tmpvar_29;
					  tmpvar_33.y = tmpvar_30;
					  tmpvar_33.z = tmpvar_31;
					  tmpvar_33.w = tmpvar_32;
					  dest_12 = mix (norm2_10, tmpvar_33, vec4(xlat_mutable_Opacity));
					  tmpvar_4 = tmpvar_8;
					  tmpvar_5 = tmpvar_9;
					  lowp vec4 tmpvar_34;
					  tmpvar_34 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_34;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_35;
					  c_35.xyz = (tmpvar_8 * light_3.xyz);
					  c_35.w = tmpvar_9;
					  c_2 = c_35;
					  highp float tmpvar_36;
					  tmpvar_36 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_36));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _MainTex2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec4 tmpvar_10;
					  tmpvar_10.w = 1.0;
					  tmpvar_10.xyz = normalize((_glesNormal * tmpvar_9));
					  mediump vec4 normal_11;
					  normal_11 = tmpvar_10;
					  mediump vec3 res_12;
					  mediump vec3 x_13;
					  x_13.x = dot (unity_SHAr, normal_11);
					  x_13.y = dot (unity_SHAg, normal_11);
					  x_13.z = dot (unity_SHAb, normal_11);
					  mediump vec3 x1_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15 = (normal_11.xyzz * normal_11.yzzx);
					  x1_14.x = dot (unity_SHBr, tmpvar_15);
					  x1_14.y = dot (unity_SHBg, tmpvar_15);
					  x1_14.z = dot (unity_SHBb, tmpvar_15);
					  res_12 = (x_13 + (x1_14 + (unity_SHC.xyz * 
					    ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y))
					  )));
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = max (((1.055 * 
					    pow (max (res_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_12 = tmpvar_16;
					  tmpvar_3 = tmpvar_16;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					uniform sampler2D _LightBuffer;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp float tmpvar_5;
					  highp vec2 tmpvar_6;
					  highp vec2 tmpvar_7;
					  tmpvar_6.x = 1.0;
					  tmpvar_7.x = 1.0;
					  tmpvar_4 = vec3(0.0, 0.0, 0.0);
					  tmpvar_5 = 0.0;
					  lowp vec3 tmpvar_8;
					  lowp float tmpvar_9;
					  tmpvar_8 = tmpvar_4;
					  tmpvar_9 = tmpvar_5;
					  highp vec4 norm2_10;
					  highp vec4 norm_11;
					  highp vec4 dest_12;
					  highp vec4 tex2_13;
					  highp vec4 tex_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_14 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex2, xlv_TEXCOORD0.zw);
					  tex2_13 = tmpvar_16;
					  xlat_mutable_Opacity = (_Opacity * tex_14.w);
					  bvec3 tmpvar_17;
					  tmpvar_17 = lessThanEqual (tex2_13.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_18;
					  b_18 = ((2.0 * tex_14.xyz) * tex2_13.xyz);
					  highp vec3 c_19;
					  c_19 = (1.0 - ((2.0 * 
					    (1.0 - tex_14.xyz)
					  ) * (1.0 - tex2_13.xyz)));
					  highp float tmpvar_20;
					  if (tmpvar_17.x) {
					    tmpvar_20 = b_18.x;
					  } else {
					    tmpvar_20 = c_19.x;
					  };
					  highp float tmpvar_21;
					  if (tmpvar_17.y) {
					    tmpvar_21 = b_18.y;
					  } else {
					    tmpvar_21 = c_19.y;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_17.z) {
					    tmpvar_22 = b_18.z;
					  } else {
					    tmpvar_22 = c_19.z;
					  };
					  highp vec3 tmpvar_23;
					  tmpvar_23.x = tmpvar_20;
					  tmpvar_23.y = tmpvar_21;
					  tmpvar_23.z = tmpvar_22;
					  dest_12.xyz = mix (tex2_13.xyz, tmpvar_23, vec3(xlat_mutable_Opacity));
					  dest_12.xyz = (dest_12.xyz * _Color.xyz);
					  tmpvar_8 = dest_12.xyz;
					  tmpvar_9 = (tex2_13.w * _Color.w);
					  lowp vec4 tmpvar_24;
					  tmpvar_24 = texture2D (_BumpMap, tmpvar_6);
					  norm_11 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap2, tmpvar_7);
					  norm2_10 = tmpvar_25;
					  bvec4 tmpvar_26;
					  tmpvar_26 = lessThanEqual (norm2_10, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_27;
					  b_27 = ((2.0 * norm_11) * norm2_10);
					  highp vec4 c_28;
					  c_28 = (1.0 - ((2.0 * 
					    (1.0 - norm_11)
					  ) * (1.0 - norm2_10)));
					  highp float tmpvar_29;
					  if (tmpvar_26.x) {
					    tmpvar_29 = b_27.x;
					  } else {
					    tmpvar_29 = c_28.x;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_26.y) {
					    tmpvar_30 = b_27.y;
					  } else {
					    tmpvar_30 = c_28.y;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_26.z) {
					    tmpvar_31 = b_27.z;
					  } else {
					    tmpvar_31 = c_28.z;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_26.w) {
					    tmpvar_32 = b_27.w;
					  } else {
					    tmpvar_32 = c_28.w;
					  };
					  highp vec4 tmpvar_33;
					  tmpvar_33.x = tmpvar_29;
					  tmpvar_33.y = tmpvar_30;
					  tmpvar_33.z = tmpvar_31;
					  tmpvar_33.w = tmpvar_32;
					  dest_12 = mix (norm2_10, tmpvar_33, vec4(xlat_mutable_Opacity));
					  tmpvar_4 = tmpvar_8;
					  tmpvar_5 = tmpvar_9;
					  lowp vec4 tmpvar_34;
					  tmpvar_34 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_34;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_35;
					  c_35.xyz = (tmpvar_8 * light_3.xyz);
					  c_35.w = tmpvar_9;
					  c_2 = c_35;
					  highp float tmpvar_36;
					  tmpvar_36 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_36));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _MainTex2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec4 tmpvar_10;
					  tmpvar_10.w = 1.0;
					  tmpvar_10.xyz = normalize((_glesNormal * tmpvar_9));
					  mediump vec4 normal_11;
					  normal_11 = tmpvar_10;
					  mediump vec3 res_12;
					  mediump vec3 x_13;
					  x_13.x = dot (unity_SHAr, normal_11);
					  x_13.y = dot (unity_SHAg, normal_11);
					  x_13.z = dot (unity_SHAb, normal_11);
					  mediump vec3 x1_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15 = (normal_11.xyzz * normal_11.yzzx);
					  x1_14.x = dot (unity_SHBr, tmpvar_15);
					  x1_14.y = dot (unity_SHBg, tmpvar_15);
					  x1_14.z = dot (unity_SHBb, tmpvar_15);
					  res_12 = (x_13 + (x1_14 + (unity_SHC.xyz * 
					    ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y))
					  )));
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = max (((1.055 * 
					    pow (max (res_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_12 = tmpvar_16;
					  tmpvar_3 = tmpvar_16;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					uniform sampler2D _LightBuffer;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp float tmpvar_5;
					  highp vec2 tmpvar_6;
					  highp vec2 tmpvar_7;
					  tmpvar_6.x = 1.0;
					  tmpvar_7.x = 1.0;
					  tmpvar_4 = vec3(0.0, 0.0, 0.0);
					  tmpvar_5 = 0.0;
					  lowp vec3 tmpvar_8;
					  lowp float tmpvar_9;
					  tmpvar_8 = tmpvar_4;
					  tmpvar_9 = tmpvar_5;
					  highp vec4 norm2_10;
					  highp vec4 norm_11;
					  highp vec4 dest_12;
					  highp vec4 tex2_13;
					  highp vec4 tex_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_14 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex2, xlv_TEXCOORD0.zw);
					  tex2_13 = tmpvar_16;
					  xlat_mutable_Opacity = (_Opacity * tex_14.w);
					  bvec3 tmpvar_17;
					  tmpvar_17 = lessThanEqual (tex2_13.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_18;
					  b_18 = ((2.0 * tex_14.xyz) * tex2_13.xyz);
					  highp vec3 c_19;
					  c_19 = (1.0 - ((2.0 * 
					    (1.0 - tex_14.xyz)
					  ) * (1.0 - tex2_13.xyz)));
					  highp float tmpvar_20;
					  if (tmpvar_17.x) {
					    tmpvar_20 = b_18.x;
					  } else {
					    tmpvar_20 = c_19.x;
					  };
					  highp float tmpvar_21;
					  if (tmpvar_17.y) {
					    tmpvar_21 = b_18.y;
					  } else {
					    tmpvar_21 = c_19.y;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_17.z) {
					    tmpvar_22 = b_18.z;
					  } else {
					    tmpvar_22 = c_19.z;
					  };
					  highp vec3 tmpvar_23;
					  tmpvar_23.x = tmpvar_20;
					  tmpvar_23.y = tmpvar_21;
					  tmpvar_23.z = tmpvar_22;
					  dest_12.xyz = mix (tex2_13.xyz, tmpvar_23, vec3(xlat_mutable_Opacity));
					  dest_12.xyz = (dest_12.xyz * _Color.xyz);
					  tmpvar_8 = dest_12.xyz;
					  tmpvar_9 = (tex2_13.w * _Color.w);
					  lowp vec4 tmpvar_24;
					  tmpvar_24 = texture2D (_BumpMap, tmpvar_6);
					  norm_11 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap2, tmpvar_7);
					  norm2_10 = tmpvar_25;
					  bvec4 tmpvar_26;
					  tmpvar_26 = lessThanEqual (norm2_10, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_27;
					  b_27 = ((2.0 * norm_11) * norm2_10);
					  highp vec4 c_28;
					  c_28 = (1.0 - ((2.0 * 
					    (1.0 - norm_11)
					  ) * (1.0 - norm2_10)));
					  highp float tmpvar_29;
					  if (tmpvar_26.x) {
					    tmpvar_29 = b_27.x;
					  } else {
					    tmpvar_29 = c_28.x;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_26.y) {
					    tmpvar_30 = b_27.y;
					  } else {
					    tmpvar_30 = c_28.y;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_26.z) {
					    tmpvar_31 = b_27.z;
					  } else {
					    tmpvar_31 = c_28.z;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_26.w) {
					    tmpvar_32 = b_27.w;
					  } else {
					    tmpvar_32 = c_28.w;
					  };
					  highp vec4 tmpvar_33;
					  tmpvar_33.x = tmpvar_29;
					  tmpvar_33.y = tmpvar_30;
					  tmpvar_33.z = tmpvar_31;
					  tmpvar_33.w = tmpvar_32;
					  dest_12 = mix (norm2_10, tmpvar_33, vec4(xlat_mutable_Opacity));
					  tmpvar_4 = tmpvar_8;
					  tmpvar_5 = tmpvar_9;
					  lowp vec4 tmpvar_34;
					  tmpvar_34 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_34;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_35;
					  c_35.xyz = (tmpvar_8 * light_3.xyz);
					  c_35.w = tmpvar_9;
					  c_2 = c_35;
					  highp float tmpvar_36;
					  tmpvar_36 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_36));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _MainTex2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec4 tmpvar_10;
					  tmpvar_10.w = 1.0;
					  tmpvar_10.xyz = normalize((_glesNormal * tmpvar_9));
					  mediump vec4 normal_11;
					  normal_11 = tmpvar_10;
					  mediump vec3 res_12;
					  mediump vec3 x_13;
					  x_13.x = dot (unity_SHAr, normal_11);
					  x_13.y = dot (unity_SHAg, normal_11);
					  x_13.z = dot (unity_SHAb, normal_11);
					  mediump vec3 x1_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15 = (normal_11.xyzz * normal_11.yzzx);
					  x1_14.x = dot (unity_SHBr, tmpvar_15);
					  x1_14.y = dot (unity_SHBg, tmpvar_15);
					  x1_14.z = dot (unity_SHBb, tmpvar_15);
					  res_12 = (x_13 + (x1_14 + (unity_SHC.xyz * 
					    ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y))
					  )));
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = max (((1.055 * 
					    pow (max (res_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_12 = tmpvar_16;
					  tmpvar_3 = tmpvar_16;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					uniform sampler2D _LightBuffer;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp float tmpvar_5;
					  highp vec2 tmpvar_6;
					  highp vec2 tmpvar_7;
					  tmpvar_6.x = 1.0;
					  tmpvar_7.x = 1.0;
					  tmpvar_4 = vec3(0.0, 0.0, 0.0);
					  tmpvar_5 = 0.0;
					  lowp vec3 tmpvar_8;
					  lowp float tmpvar_9;
					  tmpvar_8 = tmpvar_4;
					  tmpvar_9 = tmpvar_5;
					  highp vec4 norm2_10;
					  highp vec4 norm_11;
					  highp vec4 dest_12;
					  highp vec4 tex2_13;
					  highp vec4 tex_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_14 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex2, xlv_TEXCOORD0.zw);
					  tex2_13 = tmpvar_16;
					  xlat_mutable_Opacity = (_Opacity * tex_14.w);
					  bvec3 tmpvar_17;
					  tmpvar_17 = lessThanEqual (tex2_13.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_18;
					  b_18 = ((2.0 * tex_14.xyz) * tex2_13.xyz);
					  highp vec3 c_19;
					  c_19 = (1.0 - ((2.0 * 
					    (1.0 - tex_14.xyz)
					  ) * (1.0 - tex2_13.xyz)));
					  highp float tmpvar_20;
					  if (tmpvar_17.x) {
					    tmpvar_20 = b_18.x;
					  } else {
					    tmpvar_20 = c_19.x;
					  };
					  highp float tmpvar_21;
					  if (tmpvar_17.y) {
					    tmpvar_21 = b_18.y;
					  } else {
					    tmpvar_21 = c_19.y;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_17.z) {
					    tmpvar_22 = b_18.z;
					  } else {
					    tmpvar_22 = c_19.z;
					  };
					  highp vec3 tmpvar_23;
					  tmpvar_23.x = tmpvar_20;
					  tmpvar_23.y = tmpvar_21;
					  tmpvar_23.z = tmpvar_22;
					  dest_12.xyz = mix (tex2_13.xyz, tmpvar_23, vec3(xlat_mutable_Opacity));
					  dest_12.xyz = (dest_12.xyz * _Color.xyz);
					  tmpvar_8 = dest_12.xyz;
					  tmpvar_9 = (tex2_13.w * _Color.w);
					  lowp vec4 tmpvar_24;
					  tmpvar_24 = texture2D (_BumpMap, tmpvar_6);
					  norm_11 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap2, tmpvar_7);
					  norm2_10 = tmpvar_25;
					  bvec4 tmpvar_26;
					  tmpvar_26 = lessThanEqual (norm2_10, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_27;
					  b_27 = ((2.0 * norm_11) * norm2_10);
					  highp vec4 c_28;
					  c_28 = (1.0 - ((2.0 * 
					    (1.0 - norm_11)
					  ) * (1.0 - norm2_10)));
					  highp float tmpvar_29;
					  if (tmpvar_26.x) {
					    tmpvar_29 = b_27.x;
					  } else {
					    tmpvar_29 = c_28.x;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_26.y) {
					    tmpvar_30 = b_27.y;
					  } else {
					    tmpvar_30 = c_28.y;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_26.z) {
					    tmpvar_31 = b_27.z;
					  } else {
					    tmpvar_31 = c_28.z;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_26.w) {
					    tmpvar_32 = b_27.w;
					  } else {
					    tmpvar_32 = c_28.w;
					  };
					  highp vec4 tmpvar_33;
					  tmpvar_33.x = tmpvar_29;
					  tmpvar_33.y = tmpvar_30;
					  tmpvar_33.z = tmpvar_31;
					  tmpvar_33.w = tmpvar_32;
					  dest_12 = mix (norm2_10, tmpvar_33, vec4(xlat_mutable_Opacity));
					  tmpvar_4 = tmpvar_8;
					  tmpvar_5 = tmpvar_9;
					  lowp vec4 tmpvar_34;
					  tmpvar_34 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_34;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_35;
					  c_35.xyz = (tmpvar_8 * light_3.xyz);
					  c_35.w = tmpvar_9;
					  c_2 = c_35;
					  highp float tmpvar_36;
					  tmpvar_36 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_36));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _MainTex2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec4 tmpvar_10;
					  tmpvar_10.w = 1.0;
					  tmpvar_10.xyz = normalize((_glesNormal * tmpvar_9));
					  mediump vec4 normal_11;
					  normal_11 = tmpvar_10;
					  mediump vec3 res_12;
					  mediump vec3 x_13;
					  x_13.x = dot (unity_SHAr, normal_11);
					  x_13.y = dot (unity_SHAg, normal_11);
					  x_13.z = dot (unity_SHAb, normal_11);
					  mediump vec3 x1_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15 = (normal_11.xyzz * normal_11.yzzx);
					  x1_14.x = dot (unity_SHBr, tmpvar_15);
					  x1_14.y = dot (unity_SHBg, tmpvar_15);
					  x1_14.z = dot (unity_SHBb, tmpvar_15);
					  res_12 = (x_13 + (x1_14 + (unity_SHC.xyz * 
					    ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y))
					  )));
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = max (((1.055 * 
					    pow (max (res_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_12 = tmpvar_16;
					  tmpvar_3 = tmpvar_16;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					uniform sampler2D _LightBuffer;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp float tmpvar_5;
					  highp vec2 tmpvar_6;
					  highp vec2 tmpvar_7;
					  tmpvar_6.x = 1.0;
					  tmpvar_7.x = 1.0;
					  tmpvar_4 = vec3(0.0, 0.0, 0.0);
					  tmpvar_5 = 0.0;
					  lowp vec3 tmpvar_8;
					  lowp float tmpvar_9;
					  tmpvar_8 = tmpvar_4;
					  tmpvar_9 = tmpvar_5;
					  highp vec4 norm2_10;
					  highp vec4 norm_11;
					  highp vec4 dest_12;
					  highp vec4 tex2_13;
					  highp vec4 tex_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_14 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex2, xlv_TEXCOORD0.zw);
					  tex2_13 = tmpvar_16;
					  xlat_mutable_Opacity = (_Opacity * tex_14.w);
					  bvec3 tmpvar_17;
					  tmpvar_17 = lessThanEqual (tex2_13.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_18;
					  b_18 = ((2.0 * tex_14.xyz) * tex2_13.xyz);
					  highp vec3 c_19;
					  c_19 = (1.0 - ((2.0 * 
					    (1.0 - tex_14.xyz)
					  ) * (1.0 - tex2_13.xyz)));
					  highp float tmpvar_20;
					  if (tmpvar_17.x) {
					    tmpvar_20 = b_18.x;
					  } else {
					    tmpvar_20 = c_19.x;
					  };
					  highp float tmpvar_21;
					  if (tmpvar_17.y) {
					    tmpvar_21 = b_18.y;
					  } else {
					    tmpvar_21 = c_19.y;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_17.z) {
					    tmpvar_22 = b_18.z;
					  } else {
					    tmpvar_22 = c_19.z;
					  };
					  highp vec3 tmpvar_23;
					  tmpvar_23.x = tmpvar_20;
					  tmpvar_23.y = tmpvar_21;
					  tmpvar_23.z = tmpvar_22;
					  dest_12.xyz = mix (tex2_13.xyz, tmpvar_23, vec3(xlat_mutable_Opacity));
					  dest_12.xyz = (dest_12.xyz * _Color.xyz);
					  tmpvar_8 = dest_12.xyz;
					  tmpvar_9 = (tex2_13.w * _Color.w);
					  lowp vec4 tmpvar_24;
					  tmpvar_24 = texture2D (_BumpMap, tmpvar_6);
					  norm_11 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap2, tmpvar_7);
					  norm2_10 = tmpvar_25;
					  bvec4 tmpvar_26;
					  tmpvar_26 = lessThanEqual (norm2_10, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_27;
					  b_27 = ((2.0 * norm_11) * norm2_10);
					  highp vec4 c_28;
					  c_28 = (1.0 - ((2.0 * 
					    (1.0 - norm_11)
					  ) * (1.0 - norm2_10)));
					  highp float tmpvar_29;
					  if (tmpvar_26.x) {
					    tmpvar_29 = b_27.x;
					  } else {
					    tmpvar_29 = c_28.x;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_26.y) {
					    tmpvar_30 = b_27.y;
					  } else {
					    tmpvar_30 = c_28.y;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_26.z) {
					    tmpvar_31 = b_27.z;
					  } else {
					    tmpvar_31 = c_28.z;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_26.w) {
					    tmpvar_32 = b_27.w;
					  } else {
					    tmpvar_32 = c_28.w;
					  };
					  highp vec4 tmpvar_33;
					  tmpvar_33.x = tmpvar_29;
					  tmpvar_33.y = tmpvar_30;
					  tmpvar_33.z = tmpvar_31;
					  tmpvar_33.w = tmpvar_32;
					  dest_12 = mix (norm2_10, tmpvar_33, vec4(xlat_mutable_Opacity));
					  tmpvar_4 = tmpvar_8;
					  tmpvar_5 = tmpvar_9;
					  lowp vec4 tmpvar_34;
					  tmpvar_34 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_34;
					  light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
					  light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_35;
					  c_35.xyz = (tmpvar_8 * light_3.xyz);
					  c_35.w = tmpvar_9;
					  c_2 = c_35;
					  highp float tmpvar_36;
					  tmpvar_36 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_36));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _MainTex2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec4 tmpvar_10;
					  tmpvar_10.w = 1.0;
					  tmpvar_10.xyz = normalize((_glesNormal * tmpvar_9));
					  mediump vec4 normal_11;
					  normal_11 = tmpvar_10;
					  mediump vec3 res_12;
					  mediump vec3 x_13;
					  x_13.x = dot (unity_SHAr, normal_11);
					  x_13.y = dot (unity_SHAg, normal_11);
					  x_13.z = dot (unity_SHAb, normal_11);
					  mediump vec3 x1_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15 = (normal_11.xyzz * normal_11.yzzx);
					  x1_14.x = dot (unity_SHBr, tmpvar_15);
					  x1_14.y = dot (unity_SHBg, tmpvar_15);
					  x1_14.z = dot (unity_SHBb, tmpvar_15);
					  res_12 = (x_13 + (x1_14 + (unity_SHC.xyz * 
					    ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y))
					  )));
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = max (((1.055 * 
					    pow (max (res_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_12 = tmpvar_16;
					  tmpvar_3 = tmpvar_16;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					uniform sampler2D _LightBuffer;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp float tmpvar_5;
					  highp vec2 tmpvar_6;
					  highp vec2 tmpvar_7;
					  tmpvar_6.x = 1.0;
					  tmpvar_7.x = 1.0;
					  tmpvar_4 = vec3(0.0, 0.0, 0.0);
					  tmpvar_5 = 0.0;
					  lowp vec3 tmpvar_8;
					  lowp float tmpvar_9;
					  tmpvar_8 = tmpvar_4;
					  tmpvar_9 = tmpvar_5;
					  highp vec4 norm2_10;
					  highp vec4 norm_11;
					  highp vec4 dest_12;
					  highp vec4 tex2_13;
					  highp vec4 tex_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_14 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex2, xlv_TEXCOORD0.zw);
					  tex2_13 = tmpvar_16;
					  xlat_mutable_Opacity = (_Opacity * tex_14.w);
					  bvec3 tmpvar_17;
					  tmpvar_17 = lessThanEqual (tex2_13.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_18;
					  b_18 = ((2.0 * tex_14.xyz) * tex2_13.xyz);
					  highp vec3 c_19;
					  c_19 = (1.0 - ((2.0 * 
					    (1.0 - tex_14.xyz)
					  ) * (1.0 - tex2_13.xyz)));
					  highp float tmpvar_20;
					  if (tmpvar_17.x) {
					    tmpvar_20 = b_18.x;
					  } else {
					    tmpvar_20 = c_19.x;
					  };
					  highp float tmpvar_21;
					  if (tmpvar_17.y) {
					    tmpvar_21 = b_18.y;
					  } else {
					    tmpvar_21 = c_19.y;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_17.z) {
					    tmpvar_22 = b_18.z;
					  } else {
					    tmpvar_22 = c_19.z;
					  };
					  highp vec3 tmpvar_23;
					  tmpvar_23.x = tmpvar_20;
					  tmpvar_23.y = tmpvar_21;
					  tmpvar_23.z = tmpvar_22;
					  dest_12.xyz = mix (tex2_13.xyz, tmpvar_23, vec3(xlat_mutable_Opacity));
					  dest_12.xyz = (dest_12.xyz * _Color.xyz);
					  tmpvar_8 = dest_12.xyz;
					  tmpvar_9 = (tex2_13.w * _Color.w);
					  lowp vec4 tmpvar_24;
					  tmpvar_24 = texture2D (_BumpMap, tmpvar_6);
					  norm_11 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap2, tmpvar_7);
					  norm2_10 = tmpvar_25;
					  bvec4 tmpvar_26;
					  tmpvar_26 = lessThanEqual (norm2_10, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_27;
					  b_27 = ((2.0 * norm_11) * norm2_10);
					  highp vec4 c_28;
					  c_28 = (1.0 - ((2.0 * 
					    (1.0 - norm_11)
					  ) * (1.0 - norm2_10)));
					  highp float tmpvar_29;
					  if (tmpvar_26.x) {
					    tmpvar_29 = b_27.x;
					  } else {
					    tmpvar_29 = c_28.x;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_26.y) {
					    tmpvar_30 = b_27.y;
					  } else {
					    tmpvar_30 = c_28.y;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_26.z) {
					    tmpvar_31 = b_27.z;
					  } else {
					    tmpvar_31 = c_28.z;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_26.w) {
					    tmpvar_32 = b_27.w;
					  } else {
					    tmpvar_32 = c_28.w;
					  };
					  highp vec4 tmpvar_33;
					  tmpvar_33.x = tmpvar_29;
					  tmpvar_33.y = tmpvar_30;
					  tmpvar_33.z = tmpvar_31;
					  tmpvar_33.w = tmpvar_32;
					  dest_12 = mix (norm2_10, tmpvar_33, vec4(xlat_mutable_Opacity));
					  tmpvar_4 = tmpvar_8;
					  tmpvar_5 = tmpvar_9;
					  lowp vec4 tmpvar_34;
					  tmpvar_34 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_34;
					  mediump vec4 tmpvar_35;
					  tmpvar_35 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_35.w;
					  light_3.xyz = (tmpvar_35.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_36;
					  c_36.xyz = (tmpvar_8 * light_3.xyz);
					  c_36.w = tmpvar_9;
					  c_2 = c_36;
					  highp float tmpvar_37;
					  tmpvar_37 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_37));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _MainTex2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec4 tmpvar_10;
					  tmpvar_10.w = 1.0;
					  tmpvar_10.xyz = normalize((_glesNormal * tmpvar_9));
					  mediump vec4 normal_11;
					  normal_11 = tmpvar_10;
					  mediump vec3 res_12;
					  mediump vec3 x_13;
					  x_13.x = dot (unity_SHAr, normal_11);
					  x_13.y = dot (unity_SHAg, normal_11);
					  x_13.z = dot (unity_SHAb, normal_11);
					  mediump vec3 x1_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15 = (normal_11.xyzz * normal_11.yzzx);
					  x1_14.x = dot (unity_SHBr, tmpvar_15);
					  x1_14.y = dot (unity_SHBg, tmpvar_15);
					  x1_14.z = dot (unity_SHBb, tmpvar_15);
					  res_12 = (x_13 + (x1_14 + (unity_SHC.xyz * 
					    ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y))
					  )));
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = max (((1.055 * 
					    pow (max (res_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_12 = tmpvar_16;
					  tmpvar_3 = tmpvar_16;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					uniform sampler2D _LightBuffer;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp float tmpvar_5;
					  highp vec2 tmpvar_6;
					  highp vec2 tmpvar_7;
					  tmpvar_6.x = 1.0;
					  tmpvar_7.x = 1.0;
					  tmpvar_4 = vec3(0.0, 0.0, 0.0);
					  tmpvar_5 = 0.0;
					  lowp vec3 tmpvar_8;
					  lowp float tmpvar_9;
					  tmpvar_8 = tmpvar_4;
					  tmpvar_9 = tmpvar_5;
					  highp vec4 norm2_10;
					  highp vec4 norm_11;
					  highp vec4 dest_12;
					  highp vec4 tex2_13;
					  highp vec4 tex_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_14 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex2, xlv_TEXCOORD0.zw);
					  tex2_13 = tmpvar_16;
					  xlat_mutable_Opacity = (_Opacity * tex_14.w);
					  bvec3 tmpvar_17;
					  tmpvar_17 = lessThanEqual (tex2_13.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_18;
					  b_18 = ((2.0 * tex_14.xyz) * tex2_13.xyz);
					  highp vec3 c_19;
					  c_19 = (1.0 - ((2.0 * 
					    (1.0 - tex_14.xyz)
					  ) * (1.0 - tex2_13.xyz)));
					  highp float tmpvar_20;
					  if (tmpvar_17.x) {
					    tmpvar_20 = b_18.x;
					  } else {
					    tmpvar_20 = c_19.x;
					  };
					  highp float tmpvar_21;
					  if (tmpvar_17.y) {
					    tmpvar_21 = b_18.y;
					  } else {
					    tmpvar_21 = c_19.y;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_17.z) {
					    tmpvar_22 = b_18.z;
					  } else {
					    tmpvar_22 = c_19.z;
					  };
					  highp vec3 tmpvar_23;
					  tmpvar_23.x = tmpvar_20;
					  tmpvar_23.y = tmpvar_21;
					  tmpvar_23.z = tmpvar_22;
					  dest_12.xyz = mix (tex2_13.xyz, tmpvar_23, vec3(xlat_mutable_Opacity));
					  dest_12.xyz = (dest_12.xyz * _Color.xyz);
					  tmpvar_8 = dest_12.xyz;
					  tmpvar_9 = (tex2_13.w * _Color.w);
					  lowp vec4 tmpvar_24;
					  tmpvar_24 = texture2D (_BumpMap, tmpvar_6);
					  norm_11 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap2, tmpvar_7);
					  norm2_10 = tmpvar_25;
					  bvec4 tmpvar_26;
					  tmpvar_26 = lessThanEqual (norm2_10, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_27;
					  b_27 = ((2.0 * norm_11) * norm2_10);
					  highp vec4 c_28;
					  c_28 = (1.0 - ((2.0 * 
					    (1.0 - norm_11)
					  ) * (1.0 - norm2_10)));
					  highp float tmpvar_29;
					  if (tmpvar_26.x) {
					    tmpvar_29 = b_27.x;
					  } else {
					    tmpvar_29 = c_28.x;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_26.y) {
					    tmpvar_30 = b_27.y;
					  } else {
					    tmpvar_30 = c_28.y;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_26.z) {
					    tmpvar_31 = b_27.z;
					  } else {
					    tmpvar_31 = c_28.z;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_26.w) {
					    tmpvar_32 = b_27.w;
					  } else {
					    tmpvar_32 = c_28.w;
					  };
					  highp vec4 tmpvar_33;
					  tmpvar_33.x = tmpvar_29;
					  tmpvar_33.y = tmpvar_30;
					  tmpvar_33.z = tmpvar_31;
					  tmpvar_33.w = tmpvar_32;
					  dest_12 = mix (norm2_10, tmpvar_33, vec4(xlat_mutable_Opacity));
					  tmpvar_4 = tmpvar_8;
					  tmpvar_5 = tmpvar_9;
					  lowp vec4 tmpvar_34;
					  tmpvar_34 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_34;
					  mediump vec4 tmpvar_35;
					  tmpvar_35 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_35.w;
					  light_3.xyz = (tmpvar_35.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_36;
					  c_36.xyz = (tmpvar_8 * light_3.xyz);
					  c_36.w = tmpvar_9;
					  c_2 = c_36;
					  highp float tmpvar_37;
					  tmpvar_37 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_37));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp vec4 _ProjectionParams;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_FogParams;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _MainTex2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec3 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  highp vec4 tmpvar_1;
					  highp vec4 tmpvar_2;
					  highp vec3 tmpvar_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  tmpvar_5.w = 1.0;
					  tmpvar_5.xyz = _glesVertex.xyz;
					  tmpvar_4 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_5));
					  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  highp vec4 o_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7 = (tmpvar_4 * 0.5);
					  highp vec2 tmpvar_8;
					  tmpvar_8.x = tmpvar_7.x;
					  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
					  o_6.xy = (tmpvar_8 + tmpvar_7.w);
					  o_6.zw = tmpvar_4.zw;
					  tmpvar_2.zw = vec2(0.0, 0.0);
					  tmpvar_2.xy = vec2(0.0, 0.0);
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec4 tmpvar_10;
					  tmpvar_10.w = 1.0;
					  tmpvar_10.xyz = normalize((_glesNormal * tmpvar_9));
					  mediump vec4 normal_11;
					  normal_11 = tmpvar_10;
					  mediump vec3 res_12;
					  mediump vec3 x_13;
					  x_13.x = dot (unity_SHAr, normal_11);
					  x_13.y = dot (unity_SHAg, normal_11);
					  x_13.z = dot (unity_SHAb, normal_11);
					  mediump vec3 x1_14;
					  mediump vec4 tmpvar_15;
					  tmpvar_15 = (normal_11.xyzz * normal_11.yzzx);
					  x1_14.x = dot (unity_SHBr, tmpvar_15);
					  x1_14.y = dot (unity_SHBg, tmpvar_15);
					  x1_14.z = dot (unity_SHBb, tmpvar_15);
					  res_12 = (x_13 + (x1_14 + (unity_SHC.xyz * 
					    ((normal_11.x * normal_11.x) - (normal_11.y * normal_11.y))
					  )));
					  mediump vec3 tmpvar_16;
					  tmpvar_16 = max (((1.055 * 
					    pow (max (res_12, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_12 = tmpvar_16;
					  tmpvar_3 = tmpvar_16;
					  gl_Position = tmpvar_4;
					  xlv_TEXCOORD0 = tmpvar_1;
					  xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
					  xlv_TEXCOORD2 = o_6;
					  xlv_TEXCOORD3 = tmpvar_2;
					  xlv_TEXCOORD4 = tmpvar_3;
					  xlv_TEXCOORD5 = ((tmpvar_4.z * unity_FogParams.z) + unity_FogParams.w);
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform lowp vec4 unity_FogColor;
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					uniform sampler2D _LightBuffer;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec3 xlv_TEXCOORD4;
					varying highp float xlv_TEXCOORD5;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec4 c_2;
					  mediump vec4 light_3;
					  lowp vec3 tmpvar_4;
					  lowp float tmpvar_5;
					  highp vec2 tmpvar_6;
					  highp vec2 tmpvar_7;
					  tmpvar_6.x = 1.0;
					  tmpvar_7.x = 1.0;
					  tmpvar_4 = vec3(0.0, 0.0, 0.0);
					  tmpvar_5 = 0.0;
					  lowp vec3 tmpvar_8;
					  lowp float tmpvar_9;
					  tmpvar_8 = tmpvar_4;
					  tmpvar_9 = tmpvar_5;
					  highp vec4 norm2_10;
					  highp vec4 norm_11;
					  highp vec4 dest_12;
					  highp vec4 tex2_13;
					  highp vec4 tex_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_14 = tmpvar_15;
					  lowp vec4 tmpvar_16;
					  tmpvar_16 = texture2D (_MainTex2, xlv_TEXCOORD0.zw);
					  tex2_13 = tmpvar_16;
					  xlat_mutable_Opacity = (_Opacity * tex_14.w);
					  bvec3 tmpvar_17;
					  tmpvar_17 = lessThanEqual (tex2_13.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_18;
					  b_18 = ((2.0 * tex_14.xyz) * tex2_13.xyz);
					  highp vec3 c_19;
					  c_19 = (1.0 - ((2.0 * 
					    (1.0 - tex_14.xyz)
					  ) * (1.0 - tex2_13.xyz)));
					  highp float tmpvar_20;
					  if (tmpvar_17.x) {
					    tmpvar_20 = b_18.x;
					  } else {
					    tmpvar_20 = c_19.x;
					  };
					  highp float tmpvar_21;
					  if (tmpvar_17.y) {
					    tmpvar_21 = b_18.y;
					  } else {
					    tmpvar_21 = c_19.y;
					  };
					  highp float tmpvar_22;
					  if (tmpvar_17.z) {
					    tmpvar_22 = b_18.z;
					  } else {
					    tmpvar_22 = c_19.z;
					  };
					  highp vec3 tmpvar_23;
					  tmpvar_23.x = tmpvar_20;
					  tmpvar_23.y = tmpvar_21;
					  tmpvar_23.z = tmpvar_22;
					  dest_12.xyz = mix (tex2_13.xyz, tmpvar_23, vec3(xlat_mutable_Opacity));
					  dest_12.xyz = (dest_12.xyz * _Color.xyz);
					  tmpvar_8 = dest_12.xyz;
					  tmpvar_9 = (tex2_13.w * _Color.w);
					  lowp vec4 tmpvar_24;
					  tmpvar_24 = texture2D (_BumpMap, tmpvar_6);
					  norm_11 = tmpvar_24;
					  lowp vec4 tmpvar_25;
					  tmpvar_25 = texture2D (_BumpMap2, tmpvar_7);
					  norm2_10 = tmpvar_25;
					  bvec4 tmpvar_26;
					  tmpvar_26 = lessThanEqual (norm2_10, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_27;
					  b_27 = ((2.0 * norm_11) * norm2_10);
					  highp vec4 c_28;
					  c_28 = (1.0 - ((2.0 * 
					    (1.0 - norm_11)
					  ) * (1.0 - norm2_10)));
					  highp float tmpvar_29;
					  if (tmpvar_26.x) {
					    tmpvar_29 = b_27.x;
					  } else {
					    tmpvar_29 = c_28.x;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_26.y) {
					    tmpvar_30 = b_27.y;
					  } else {
					    tmpvar_30 = c_28.y;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_26.z) {
					    tmpvar_31 = b_27.z;
					  } else {
					    tmpvar_31 = c_28.z;
					  };
					  highp float tmpvar_32;
					  if (tmpvar_26.w) {
					    tmpvar_32 = b_27.w;
					  } else {
					    tmpvar_32 = c_28.w;
					  };
					  highp vec4 tmpvar_33;
					  tmpvar_33.x = tmpvar_29;
					  tmpvar_33.y = tmpvar_30;
					  tmpvar_33.z = tmpvar_31;
					  tmpvar_33.w = tmpvar_32;
					  dest_12 = mix (norm2_10, tmpvar_33, vec4(xlat_mutable_Opacity));
					  tmpvar_4 = tmpvar_8;
					  tmpvar_5 = tmpvar_9;
					  lowp vec4 tmpvar_34;
					  tmpvar_34 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
					  light_3 = tmpvar_34;
					  mediump vec4 tmpvar_35;
					  tmpvar_35 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
					  light_3.w = tmpvar_35.w;
					  light_3.xyz = (tmpvar_35.xyz + xlv_TEXCOORD4);
					  lowp vec4 c_36;
					  c_36.xyz = (tmpvar_8 * light_3.xyz);
					  c_36.w = tmpvar_9;
					  c_2 = c_36;
					  highp float tmpvar_37;
					  tmpvar_37 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
					  c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_37));
					  c_2.w = 1.0;
					  tmpvar_1 = c_2;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
				}
			}
			Program "fp" {
				SubProgram "gles hw_tier00 " {
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					"!!GLES"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!GLES"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!GLES"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
					"!!GLES"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
					"!!GLES"
				}
			}
		}
		Pass {
			Name "DEFERRED"
			LOD 400
			Tags { "LIGHTMODE" = "DEFERRED" "RenderType" = "Opaque" }
			GpuProgramID 311405
			Program "vp" {
				SubProgram "gles hw_tier00 " {
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_glesNormal * tmpvar_9));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_8.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_8.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_8.z;
					  tmpvar_6.zw = vec2(0.0, 0.0);
					  tmpvar_6.xy = vec2(0.0, 0.0);
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					  xlv_TEXCOORD4 = tmpvar_17;
					  xlv_TEXCOORD5 = tmpvar_6;
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec4 outEmission_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  lowp float tmpvar_4;
					  tmpvar_3 = vec3(0.0, 0.0, 0.0);
					  tmpvar_4 = 0.0;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  tmpvar_5 = tmpvar_3;
					  tmpvar_6 = tmpvar_4;
					  highp vec4 norm2_7;
					  highp vec4 norm_8;
					  highp vec4 dest_9;
					  highp vec4 tex2_10;
					  highp vec4 tex_11;
					  lowp vec4 tmpvar_12;
					  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_11 = tmpvar_12;
					  lowp vec4 tmpvar_13;
					  tmpvar_13 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_10 = tmpvar_13;
					  xlat_mutable_Opacity = (_Opacity * tex_11.w);
					  bvec3 tmpvar_14;
					  tmpvar_14 = lessThanEqual (tex2_10.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_15;
					  b_15 = ((2.0 * tex_11.xyz) * tex2_10.xyz);
					  highp vec3 c_16;
					  c_16 = (1.0 - ((2.0 * 
					    (1.0 - tex_11.xyz)
					  ) * (1.0 - tex2_10.xyz)));
					  highp float tmpvar_17;
					  if (tmpvar_14.x) {
					    tmpvar_17 = b_15.x;
					  } else {
					    tmpvar_17 = c_16.x;
					  };
					  highp float tmpvar_18;
					  if (tmpvar_14.y) {
					    tmpvar_18 = b_15.y;
					  } else {
					    tmpvar_18 = c_16.y;
					  };
					  highp float tmpvar_19;
					  if (tmpvar_14.z) {
					    tmpvar_19 = b_15.z;
					  } else {
					    tmpvar_19 = c_16.z;
					  };
					  highp vec3 tmpvar_20;
					  tmpvar_20.x = tmpvar_17;
					  tmpvar_20.y = tmpvar_18;
					  tmpvar_20.z = tmpvar_19;
					  dest_9.xyz = mix (tex2_10.xyz, tmpvar_20, vec3(xlat_mutable_Opacity));
					  dest_9.xyz = (dest_9.xyz * _Color.xyz);
					  tmpvar_5 = dest_9.xyz;
					  tmpvar_6 = (tex2_10.w * _Color.w);
					  lowp vec4 tmpvar_21;
					  tmpvar_21 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_8 = tmpvar_21;
					  lowp vec4 tmpvar_22;
					  tmpvar_22 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_7 = tmpvar_22;
					  bvec4 tmpvar_23;
					  tmpvar_23 = lessThanEqual (norm2_7, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_24;
					  b_24 = ((2.0 * norm_8) * norm2_7);
					  highp vec4 c_25;
					  c_25 = (1.0 - ((2.0 * 
					    (1.0 - norm_8)
					  ) * (1.0 - norm2_7)));
					  highp float tmpvar_26;
					  if (tmpvar_23.x) {
					    tmpvar_26 = b_24.x;
					  } else {
					    tmpvar_26 = c_25.x;
					  };
					  highp float tmpvar_27;
					  if (tmpvar_23.y) {
					    tmpvar_27 = b_24.y;
					  } else {
					    tmpvar_27 = c_25.y;
					  };
					  highp float tmpvar_28;
					  if (tmpvar_23.z) {
					    tmpvar_28 = b_24.z;
					  } else {
					    tmpvar_28 = c_25.z;
					  };
					  highp float tmpvar_29;
					  if (tmpvar_23.w) {
					    tmpvar_29 = b_24.w;
					  } else {
					    tmpvar_29 = c_25.w;
					  };
					  highp vec4 tmpvar_30;
					  tmpvar_30.x = tmpvar_26;
					  tmpvar_30.y = tmpvar_27;
					  tmpvar_30.z = tmpvar_28;
					  tmpvar_30.w = tmpvar_29;
					  highp vec4 tmpvar_31;
					  tmpvar_31 = mix (norm2_7, tmpvar_30, vec4(xlat_mutable_Opacity));
					  dest_9 = tmpvar_31;
					  lowp vec3 tmpvar_32;
					  lowp vec4 packednormal_33;
					  packednormal_33 = tmpvar_31;
					  tmpvar_32 = ((packednormal_33.xyz * 2.0) - 1.0);
					  tmpvar_3 = tmpvar_5;
					  tmpvar_4 = tmpvar_6;
					  highp float tmpvar_34;
					  tmpvar_34 = dot (xlv_TEXCOORD2.xyz, tmpvar_32);
					  worldN_2.x = tmpvar_34;
					  highp float tmpvar_35;
					  tmpvar_35 = dot (xlv_TEXCOORD3.xyz, tmpvar_32);
					  worldN_2.y = tmpvar_35;
					  highp float tmpvar_36;
					  tmpvar_36 = dot (xlv_TEXCOORD4.xyz, tmpvar_32);
					  worldN_2.z = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  tmpvar_37 = normalize(worldN_2);
					  worldN_2 = tmpvar_37;
					  mediump vec4 emission_38;
					  mediump vec3 tmpvar_39;
					  mediump vec3 tmpvar_40;
					  tmpvar_39 = tmpvar_5;
					  tmpvar_40 = tmpvar_37;
					  mediump vec4 tmpvar_41;
					  tmpvar_41.xyz = tmpvar_39;
					  tmpvar_41.w = 1.0;
					  mediump vec4 tmpvar_42;
					  tmpvar_42.xyz = vec3(0.0, 0.0, 0.0);
					  tmpvar_42.w = 0.0;
					  mediump vec4 tmpvar_43;
					  tmpvar_43.w = 1.0;
					  tmpvar_43.xyz = ((tmpvar_40 * 0.5) + 0.5);
					  lowp vec4 tmpvar_44;
					  tmpvar_44.w = 1.0;
					  tmpvar_44.xyz = vec3(0.0, 0.0, 0.0);
					  emission_38 = tmpvar_44;
					  emission_38.xyz = emission_38.xyz;
					  outEmission_1.w = emission_38.w;
					  outEmission_1.xyz = exp2(-(emission_38.xyz));
					  gl_FragData[0] = tmpvar_41;
					  gl_FragData[1] = tmpvar_42;
					  gl_FragData[2] = tmpvar_43;
					  gl_FragData[3] = outEmission_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_glesNormal * tmpvar_9));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_8.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_8.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_8.z;
					  tmpvar_6.zw = vec2(0.0, 0.0);
					  tmpvar_6.xy = vec2(0.0, 0.0);
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					  xlv_TEXCOORD4 = tmpvar_17;
					  xlv_TEXCOORD5 = tmpvar_6;
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec4 outEmission_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  lowp float tmpvar_4;
					  tmpvar_3 = vec3(0.0, 0.0, 0.0);
					  tmpvar_4 = 0.0;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  tmpvar_5 = tmpvar_3;
					  tmpvar_6 = tmpvar_4;
					  highp vec4 norm2_7;
					  highp vec4 norm_8;
					  highp vec4 dest_9;
					  highp vec4 tex2_10;
					  highp vec4 tex_11;
					  lowp vec4 tmpvar_12;
					  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_11 = tmpvar_12;
					  lowp vec4 tmpvar_13;
					  tmpvar_13 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_10 = tmpvar_13;
					  xlat_mutable_Opacity = (_Opacity * tex_11.w);
					  bvec3 tmpvar_14;
					  tmpvar_14 = lessThanEqual (tex2_10.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_15;
					  b_15 = ((2.0 * tex_11.xyz) * tex2_10.xyz);
					  highp vec3 c_16;
					  c_16 = (1.0 - ((2.0 * 
					    (1.0 - tex_11.xyz)
					  ) * (1.0 - tex2_10.xyz)));
					  highp float tmpvar_17;
					  if (tmpvar_14.x) {
					    tmpvar_17 = b_15.x;
					  } else {
					    tmpvar_17 = c_16.x;
					  };
					  highp float tmpvar_18;
					  if (tmpvar_14.y) {
					    tmpvar_18 = b_15.y;
					  } else {
					    tmpvar_18 = c_16.y;
					  };
					  highp float tmpvar_19;
					  if (tmpvar_14.z) {
					    tmpvar_19 = b_15.z;
					  } else {
					    tmpvar_19 = c_16.z;
					  };
					  highp vec3 tmpvar_20;
					  tmpvar_20.x = tmpvar_17;
					  tmpvar_20.y = tmpvar_18;
					  tmpvar_20.z = tmpvar_19;
					  dest_9.xyz = mix (tex2_10.xyz, tmpvar_20, vec3(xlat_mutable_Opacity));
					  dest_9.xyz = (dest_9.xyz * _Color.xyz);
					  tmpvar_5 = dest_9.xyz;
					  tmpvar_6 = (tex2_10.w * _Color.w);
					  lowp vec4 tmpvar_21;
					  tmpvar_21 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_8 = tmpvar_21;
					  lowp vec4 tmpvar_22;
					  tmpvar_22 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_7 = tmpvar_22;
					  bvec4 tmpvar_23;
					  tmpvar_23 = lessThanEqual (norm2_7, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_24;
					  b_24 = ((2.0 * norm_8) * norm2_7);
					  highp vec4 c_25;
					  c_25 = (1.0 - ((2.0 * 
					    (1.0 - norm_8)
					  ) * (1.0 - norm2_7)));
					  highp float tmpvar_26;
					  if (tmpvar_23.x) {
					    tmpvar_26 = b_24.x;
					  } else {
					    tmpvar_26 = c_25.x;
					  };
					  highp float tmpvar_27;
					  if (tmpvar_23.y) {
					    tmpvar_27 = b_24.y;
					  } else {
					    tmpvar_27 = c_25.y;
					  };
					  highp float tmpvar_28;
					  if (tmpvar_23.z) {
					    tmpvar_28 = b_24.z;
					  } else {
					    tmpvar_28 = c_25.z;
					  };
					  highp float tmpvar_29;
					  if (tmpvar_23.w) {
					    tmpvar_29 = b_24.w;
					  } else {
					    tmpvar_29 = c_25.w;
					  };
					  highp vec4 tmpvar_30;
					  tmpvar_30.x = tmpvar_26;
					  tmpvar_30.y = tmpvar_27;
					  tmpvar_30.z = tmpvar_28;
					  tmpvar_30.w = tmpvar_29;
					  highp vec4 tmpvar_31;
					  tmpvar_31 = mix (norm2_7, tmpvar_30, vec4(xlat_mutable_Opacity));
					  dest_9 = tmpvar_31;
					  lowp vec3 tmpvar_32;
					  lowp vec4 packednormal_33;
					  packednormal_33 = tmpvar_31;
					  tmpvar_32 = ((packednormal_33.xyz * 2.0) - 1.0);
					  tmpvar_3 = tmpvar_5;
					  tmpvar_4 = tmpvar_6;
					  highp float tmpvar_34;
					  tmpvar_34 = dot (xlv_TEXCOORD2.xyz, tmpvar_32);
					  worldN_2.x = tmpvar_34;
					  highp float tmpvar_35;
					  tmpvar_35 = dot (xlv_TEXCOORD3.xyz, tmpvar_32);
					  worldN_2.y = tmpvar_35;
					  highp float tmpvar_36;
					  tmpvar_36 = dot (xlv_TEXCOORD4.xyz, tmpvar_32);
					  worldN_2.z = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  tmpvar_37 = normalize(worldN_2);
					  worldN_2 = tmpvar_37;
					  mediump vec4 emission_38;
					  mediump vec3 tmpvar_39;
					  mediump vec3 tmpvar_40;
					  tmpvar_39 = tmpvar_5;
					  tmpvar_40 = tmpvar_37;
					  mediump vec4 tmpvar_41;
					  tmpvar_41.xyz = tmpvar_39;
					  tmpvar_41.w = 1.0;
					  mediump vec4 tmpvar_42;
					  tmpvar_42.xyz = vec3(0.0, 0.0, 0.0);
					  tmpvar_42.w = 0.0;
					  mediump vec4 tmpvar_43;
					  tmpvar_43.w = 1.0;
					  tmpvar_43.xyz = ((tmpvar_40 * 0.5) + 0.5);
					  lowp vec4 tmpvar_44;
					  tmpvar_44.w = 1.0;
					  tmpvar_44.xyz = vec3(0.0, 0.0, 0.0);
					  emission_38 = tmpvar_44;
					  emission_38.xyz = emission_38.xyz;
					  outEmission_1.w = emission_38.w;
					  outEmission_1.xyz = exp2(-(emission_38.xyz));
					  gl_FragData[0] = tmpvar_41;
					  gl_FragData[1] = tmpvar_42;
					  gl_FragData[2] = tmpvar_43;
					  gl_FragData[3] = outEmission_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_glesNormal * tmpvar_9));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_8.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_8.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_8.z;
					  tmpvar_6.zw = vec2(0.0, 0.0);
					  tmpvar_6.xy = vec2(0.0, 0.0);
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					  xlv_TEXCOORD4 = tmpvar_17;
					  xlv_TEXCOORD5 = tmpvar_6;
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					void main ()
					{
					  mediump vec4 outEmission_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  lowp float tmpvar_4;
					  tmpvar_3 = vec3(0.0, 0.0, 0.0);
					  tmpvar_4 = 0.0;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  tmpvar_5 = tmpvar_3;
					  tmpvar_6 = tmpvar_4;
					  highp vec4 norm2_7;
					  highp vec4 norm_8;
					  highp vec4 dest_9;
					  highp vec4 tex2_10;
					  highp vec4 tex_11;
					  lowp vec4 tmpvar_12;
					  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_11 = tmpvar_12;
					  lowp vec4 tmpvar_13;
					  tmpvar_13 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_10 = tmpvar_13;
					  xlat_mutable_Opacity = (_Opacity * tex_11.w);
					  bvec3 tmpvar_14;
					  tmpvar_14 = lessThanEqual (tex2_10.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_15;
					  b_15 = ((2.0 * tex_11.xyz) * tex2_10.xyz);
					  highp vec3 c_16;
					  c_16 = (1.0 - ((2.0 * 
					    (1.0 - tex_11.xyz)
					  ) * (1.0 - tex2_10.xyz)));
					  highp float tmpvar_17;
					  if (tmpvar_14.x) {
					    tmpvar_17 = b_15.x;
					  } else {
					    tmpvar_17 = c_16.x;
					  };
					  highp float tmpvar_18;
					  if (tmpvar_14.y) {
					    tmpvar_18 = b_15.y;
					  } else {
					    tmpvar_18 = c_16.y;
					  };
					  highp float tmpvar_19;
					  if (tmpvar_14.z) {
					    tmpvar_19 = b_15.z;
					  } else {
					    tmpvar_19 = c_16.z;
					  };
					  highp vec3 tmpvar_20;
					  tmpvar_20.x = tmpvar_17;
					  tmpvar_20.y = tmpvar_18;
					  tmpvar_20.z = tmpvar_19;
					  dest_9.xyz = mix (tex2_10.xyz, tmpvar_20, vec3(xlat_mutable_Opacity));
					  dest_9.xyz = (dest_9.xyz * _Color.xyz);
					  tmpvar_5 = dest_9.xyz;
					  tmpvar_6 = (tex2_10.w * _Color.w);
					  lowp vec4 tmpvar_21;
					  tmpvar_21 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_8 = tmpvar_21;
					  lowp vec4 tmpvar_22;
					  tmpvar_22 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_7 = tmpvar_22;
					  bvec4 tmpvar_23;
					  tmpvar_23 = lessThanEqual (norm2_7, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_24;
					  b_24 = ((2.0 * norm_8) * norm2_7);
					  highp vec4 c_25;
					  c_25 = (1.0 - ((2.0 * 
					    (1.0 - norm_8)
					  ) * (1.0 - norm2_7)));
					  highp float tmpvar_26;
					  if (tmpvar_23.x) {
					    tmpvar_26 = b_24.x;
					  } else {
					    tmpvar_26 = c_25.x;
					  };
					  highp float tmpvar_27;
					  if (tmpvar_23.y) {
					    tmpvar_27 = b_24.y;
					  } else {
					    tmpvar_27 = c_25.y;
					  };
					  highp float tmpvar_28;
					  if (tmpvar_23.z) {
					    tmpvar_28 = b_24.z;
					  } else {
					    tmpvar_28 = c_25.z;
					  };
					  highp float tmpvar_29;
					  if (tmpvar_23.w) {
					    tmpvar_29 = b_24.w;
					  } else {
					    tmpvar_29 = c_25.w;
					  };
					  highp vec4 tmpvar_30;
					  tmpvar_30.x = tmpvar_26;
					  tmpvar_30.y = tmpvar_27;
					  tmpvar_30.z = tmpvar_28;
					  tmpvar_30.w = tmpvar_29;
					  highp vec4 tmpvar_31;
					  tmpvar_31 = mix (norm2_7, tmpvar_30, vec4(xlat_mutable_Opacity));
					  dest_9 = tmpvar_31;
					  lowp vec3 tmpvar_32;
					  lowp vec4 packednormal_33;
					  packednormal_33 = tmpvar_31;
					  tmpvar_32 = ((packednormal_33.xyz * 2.0) - 1.0);
					  tmpvar_3 = tmpvar_5;
					  tmpvar_4 = tmpvar_6;
					  highp float tmpvar_34;
					  tmpvar_34 = dot (xlv_TEXCOORD2.xyz, tmpvar_32);
					  worldN_2.x = tmpvar_34;
					  highp float tmpvar_35;
					  tmpvar_35 = dot (xlv_TEXCOORD3.xyz, tmpvar_32);
					  worldN_2.y = tmpvar_35;
					  highp float tmpvar_36;
					  tmpvar_36 = dot (xlv_TEXCOORD4.xyz, tmpvar_32);
					  worldN_2.z = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  tmpvar_37 = normalize(worldN_2);
					  worldN_2 = tmpvar_37;
					  mediump vec4 emission_38;
					  mediump vec3 tmpvar_39;
					  mediump vec3 tmpvar_40;
					  tmpvar_39 = tmpvar_5;
					  tmpvar_40 = tmpvar_37;
					  mediump vec4 tmpvar_41;
					  tmpvar_41.xyz = tmpvar_39;
					  tmpvar_41.w = 1.0;
					  mediump vec4 tmpvar_42;
					  tmpvar_42.xyz = vec3(0.0, 0.0, 0.0);
					  tmpvar_42.w = 0.0;
					  mediump vec4 tmpvar_43;
					  tmpvar_43.w = 1.0;
					  tmpvar_43.xyz = ((tmpvar_40 * 0.5) + 0.5);
					  lowp vec4 tmpvar_44;
					  tmpvar_44.w = 1.0;
					  tmpvar_44.xyz = vec3(0.0, 0.0, 0.0);
					  emission_38 = tmpvar_44;
					  emission_38.xyz = emission_38.xyz;
					  outEmission_1.w = emission_38.w;
					  outEmission_1.xyz = exp2(-(emission_38.xyz));
					  gl_FragData[0] = tmpvar_41;
					  gl_FragData[1] = tmpvar_42;
					  gl_FragData[2] = tmpvar_43;
					  gl_FragData[3] = outEmission_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying mediump vec3 xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_glesNormal * tmpvar_9));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_8.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_8.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_8.z;
					  tmpvar_6.zw = vec2(0.0, 0.0);
					  tmpvar_6.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_18;
					  normal_18 = worldNormal_3;
					  mediump vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = normal_18;
					  mediump vec3 res_20;
					  mediump vec3 x_21;
					  x_21.x = dot (unity_SHAr, tmpvar_19);
					  x_21.y = dot (unity_SHAg, tmpvar_19);
					  x_21.z = dot (unity_SHAb, tmpvar_19);
					  mediump vec3 x1_22;
					  mediump vec4 tmpvar_23;
					  tmpvar_23 = (normal_18.xyzz * normal_18.yzzx);
					  x1_22.x = dot (unity_SHBr, tmpvar_23);
					  x1_22.y = dot (unity_SHBg, tmpvar_23);
					  x1_22.z = dot (unity_SHBb, tmpvar_23);
					  res_20 = (x_21 + (x1_22 + (unity_SHC.xyz * 
					    ((normal_18.x * normal_18.x) - (normal_18.y * normal_18.y))
					  )));
					  mediump vec3 tmpvar_24;
					  tmpvar_24 = max (((1.055 * 
					    pow (max (res_20, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_20 = tmpvar_24;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					  xlv_TEXCOORD4 = tmpvar_17;
					  xlv_TEXCOORD5 = tmpvar_6;
					  xlv_TEXCOORD6 = max (vec3(0.0, 0.0, 0.0), tmpvar_24);
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec4 outEmission_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  lowp float tmpvar_4;
					  tmpvar_3 = vec3(0.0, 0.0, 0.0);
					  tmpvar_4 = 0.0;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  tmpvar_5 = tmpvar_3;
					  tmpvar_6 = tmpvar_4;
					  highp vec4 norm2_7;
					  highp vec4 norm_8;
					  highp vec4 dest_9;
					  highp vec4 tex2_10;
					  highp vec4 tex_11;
					  lowp vec4 tmpvar_12;
					  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_11 = tmpvar_12;
					  lowp vec4 tmpvar_13;
					  tmpvar_13 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_10 = tmpvar_13;
					  xlat_mutable_Opacity = (_Opacity * tex_11.w);
					  bvec3 tmpvar_14;
					  tmpvar_14 = lessThanEqual (tex2_10.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_15;
					  b_15 = ((2.0 * tex_11.xyz) * tex2_10.xyz);
					  highp vec3 c_16;
					  c_16 = (1.0 - ((2.0 * 
					    (1.0 - tex_11.xyz)
					  ) * (1.0 - tex2_10.xyz)));
					  highp float tmpvar_17;
					  if (tmpvar_14.x) {
					    tmpvar_17 = b_15.x;
					  } else {
					    tmpvar_17 = c_16.x;
					  };
					  highp float tmpvar_18;
					  if (tmpvar_14.y) {
					    tmpvar_18 = b_15.y;
					  } else {
					    tmpvar_18 = c_16.y;
					  };
					  highp float tmpvar_19;
					  if (tmpvar_14.z) {
					    tmpvar_19 = b_15.z;
					  } else {
					    tmpvar_19 = c_16.z;
					  };
					  highp vec3 tmpvar_20;
					  tmpvar_20.x = tmpvar_17;
					  tmpvar_20.y = tmpvar_18;
					  tmpvar_20.z = tmpvar_19;
					  dest_9.xyz = mix (tex2_10.xyz, tmpvar_20, vec3(xlat_mutable_Opacity));
					  dest_9.xyz = (dest_9.xyz * _Color.xyz);
					  tmpvar_5 = dest_9.xyz;
					  tmpvar_6 = (tex2_10.w * _Color.w);
					  lowp vec4 tmpvar_21;
					  tmpvar_21 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_8 = tmpvar_21;
					  lowp vec4 tmpvar_22;
					  tmpvar_22 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_7 = tmpvar_22;
					  bvec4 tmpvar_23;
					  tmpvar_23 = lessThanEqual (norm2_7, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_24;
					  b_24 = ((2.0 * norm_8) * norm2_7);
					  highp vec4 c_25;
					  c_25 = (1.0 - ((2.0 * 
					    (1.0 - norm_8)
					  ) * (1.0 - norm2_7)));
					  highp float tmpvar_26;
					  if (tmpvar_23.x) {
					    tmpvar_26 = b_24.x;
					  } else {
					    tmpvar_26 = c_25.x;
					  };
					  highp float tmpvar_27;
					  if (tmpvar_23.y) {
					    tmpvar_27 = b_24.y;
					  } else {
					    tmpvar_27 = c_25.y;
					  };
					  highp float tmpvar_28;
					  if (tmpvar_23.z) {
					    tmpvar_28 = b_24.z;
					  } else {
					    tmpvar_28 = c_25.z;
					  };
					  highp float tmpvar_29;
					  if (tmpvar_23.w) {
					    tmpvar_29 = b_24.w;
					  } else {
					    tmpvar_29 = c_25.w;
					  };
					  highp vec4 tmpvar_30;
					  tmpvar_30.x = tmpvar_26;
					  tmpvar_30.y = tmpvar_27;
					  tmpvar_30.z = tmpvar_28;
					  tmpvar_30.w = tmpvar_29;
					  highp vec4 tmpvar_31;
					  tmpvar_31 = mix (norm2_7, tmpvar_30, vec4(xlat_mutable_Opacity));
					  dest_9 = tmpvar_31;
					  lowp vec3 tmpvar_32;
					  lowp vec4 packednormal_33;
					  packednormal_33 = tmpvar_31;
					  tmpvar_32 = ((packednormal_33.xyz * 2.0) - 1.0);
					  tmpvar_3 = tmpvar_5;
					  tmpvar_4 = tmpvar_6;
					  highp float tmpvar_34;
					  tmpvar_34 = dot (xlv_TEXCOORD2.xyz, tmpvar_32);
					  worldN_2.x = tmpvar_34;
					  highp float tmpvar_35;
					  tmpvar_35 = dot (xlv_TEXCOORD3.xyz, tmpvar_32);
					  worldN_2.y = tmpvar_35;
					  highp float tmpvar_36;
					  tmpvar_36 = dot (xlv_TEXCOORD4.xyz, tmpvar_32);
					  worldN_2.z = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  tmpvar_37 = normalize(worldN_2);
					  worldN_2 = tmpvar_37;
					  mediump vec4 emission_38;
					  mediump vec3 tmpvar_39;
					  mediump vec3 tmpvar_40;
					  tmpvar_39 = tmpvar_5;
					  tmpvar_40 = tmpvar_37;
					  mediump vec4 tmpvar_41;
					  tmpvar_41.xyz = tmpvar_39;
					  tmpvar_41.w = 1.0;
					  mediump vec4 tmpvar_42;
					  tmpvar_42.xyz = vec3(0.0, 0.0, 0.0);
					  tmpvar_42.w = 0.0;
					  mediump vec4 tmpvar_43;
					  tmpvar_43.w = 1.0;
					  tmpvar_43.xyz = ((tmpvar_40 * 0.5) + 0.5);
					  lowp vec4 tmpvar_44;
					  tmpvar_44.w = 1.0;
					  tmpvar_44.xyz = vec3(0.0, 0.0, 0.0);
					  emission_38 = tmpvar_44;
					  emission_38.xyz = (emission_38.xyz + (tmpvar_5 * xlv_TEXCOORD6));
					  outEmission_1.w = emission_38.w;
					  outEmission_1.xyz = exp2(-(emission_38.xyz));
					  gl_FragData[0] = tmpvar_41;
					  gl_FragData[1] = tmpvar_42;
					  gl_FragData[2] = tmpvar_43;
					  gl_FragData[3] = outEmission_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying mediump vec3 xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_glesNormal * tmpvar_9));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_8.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_8.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_8.z;
					  tmpvar_6.zw = vec2(0.0, 0.0);
					  tmpvar_6.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_18;
					  normal_18 = worldNormal_3;
					  mediump vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = normal_18;
					  mediump vec3 res_20;
					  mediump vec3 x_21;
					  x_21.x = dot (unity_SHAr, tmpvar_19);
					  x_21.y = dot (unity_SHAg, tmpvar_19);
					  x_21.z = dot (unity_SHAb, tmpvar_19);
					  mediump vec3 x1_22;
					  mediump vec4 tmpvar_23;
					  tmpvar_23 = (normal_18.xyzz * normal_18.yzzx);
					  x1_22.x = dot (unity_SHBr, tmpvar_23);
					  x1_22.y = dot (unity_SHBg, tmpvar_23);
					  x1_22.z = dot (unity_SHBb, tmpvar_23);
					  res_20 = (x_21 + (x1_22 + (unity_SHC.xyz * 
					    ((normal_18.x * normal_18.x) - (normal_18.y * normal_18.y))
					  )));
					  mediump vec3 tmpvar_24;
					  tmpvar_24 = max (((1.055 * 
					    pow (max (res_20, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_20 = tmpvar_24;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					  xlv_TEXCOORD4 = tmpvar_17;
					  xlv_TEXCOORD5 = tmpvar_6;
					  xlv_TEXCOORD6 = max (vec3(0.0, 0.0, 0.0), tmpvar_24);
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec4 outEmission_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  lowp float tmpvar_4;
					  tmpvar_3 = vec3(0.0, 0.0, 0.0);
					  tmpvar_4 = 0.0;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  tmpvar_5 = tmpvar_3;
					  tmpvar_6 = tmpvar_4;
					  highp vec4 norm2_7;
					  highp vec4 norm_8;
					  highp vec4 dest_9;
					  highp vec4 tex2_10;
					  highp vec4 tex_11;
					  lowp vec4 tmpvar_12;
					  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_11 = tmpvar_12;
					  lowp vec4 tmpvar_13;
					  tmpvar_13 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_10 = tmpvar_13;
					  xlat_mutable_Opacity = (_Opacity * tex_11.w);
					  bvec3 tmpvar_14;
					  tmpvar_14 = lessThanEqual (tex2_10.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_15;
					  b_15 = ((2.0 * tex_11.xyz) * tex2_10.xyz);
					  highp vec3 c_16;
					  c_16 = (1.0 - ((2.0 * 
					    (1.0 - tex_11.xyz)
					  ) * (1.0 - tex2_10.xyz)));
					  highp float tmpvar_17;
					  if (tmpvar_14.x) {
					    tmpvar_17 = b_15.x;
					  } else {
					    tmpvar_17 = c_16.x;
					  };
					  highp float tmpvar_18;
					  if (tmpvar_14.y) {
					    tmpvar_18 = b_15.y;
					  } else {
					    tmpvar_18 = c_16.y;
					  };
					  highp float tmpvar_19;
					  if (tmpvar_14.z) {
					    tmpvar_19 = b_15.z;
					  } else {
					    tmpvar_19 = c_16.z;
					  };
					  highp vec3 tmpvar_20;
					  tmpvar_20.x = tmpvar_17;
					  tmpvar_20.y = tmpvar_18;
					  tmpvar_20.z = tmpvar_19;
					  dest_9.xyz = mix (tex2_10.xyz, tmpvar_20, vec3(xlat_mutable_Opacity));
					  dest_9.xyz = (dest_9.xyz * _Color.xyz);
					  tmpvar_5 = dest_9.xyz;
					  tmpvar_6 = (tex2_10.w * _Color.w);
					  lowp vec4 tmpvar_21;
					  tmpvar_21 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_8 = tmpvar_21;
					  lowp vec4 tmpvar_22;
					  tmpvar_22 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_7 = tmpvar_22;
					  bvec4 tmpvar_23;
					  tmpvar_23 = lessThanEqual (norm2_7, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_24;
					  b_24 = ((2.0 * norm_8) * norm2_7);
					  highp vec4 c_25;
					  c_25 = (1.0 - ((2.0 * 
					    (1.0 - norm_8)
					  ) * (1.0 - norm2_7)));
					  highp float tmpvar_26;
					  if (tmpvar_23.x) {
					    tmpvar_26 = b_24.x;
					  } else {
					    tmpvar_26 = c_25.x;
					  };
					  highp float tmpvar_27;
					  if (tmpvar_23.y) {
					    tmpvar_27 = b_24.y;
					  } else {
					    tmpvar_27 = c_25.y;
					  };
					  highp float tmpvar_28;
					  if (tmpvar_23.z) {
					    tmpvar_28 = b_24.z;
					  } else {
					    tmpvar_28 = c_25.z;
					  };
					  highp float tmpvar_29;
					  if (tmpvar_23.w) {
					    tmpvar_29 = b_24.w;
					  } else {
					    tmpvar_29 = c_25.w;
					  };
					  highp vec4 tmpvar_30;
					  tmpvar_30.x = tmpvar_26;
					  tmpvar_30.y = tmpvar_27;
					  tmpvar_30.z = tmpvar_28;
					  tmpvar_30.w = tmpvar_29;
					  highp vec4 tmpvar_31;
					  tmpvar_31 = mix (norm2_7, tmpvar_30, vec4(xlat_mutable_Opacity));
					  dest_9 = tmpvar_31;
					  lowp vec3 tmpvar_32;
					  lowp vec4 packednormal_33;
					  packednormal_33 = tmpvar_31;
					  tmpvar_32 = ((packednormal_33.xyz * 2.0) - 1.0);
					  tmpvar_3 = tmpvar_5;
					  tmpvar_4 = tmpvar_6;
					  highp float tmpvar_34;
					  tmpvar_34 = dot (xlv_TEXCOORD2.xyz, tmpvar_32);
					  worldN_2.x = tmpvar_34;
					  highp float tmpvar_35;
					  tmpvar_35 = dot (xlv_TEXCOORD3.xyz, tmpvar_32);
					  worldN_2.y = tmpvar_35;
					  highp float tmpvar_36;
					  tmpvar_36 = dot (xlv_TEXCOORD4.xyz, tmpvar_32);
					  worldN_2.z = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  tmpvar_37 = normalize(worldN_2);
					  worldN_2 = tmpvar_37;
					  mediump vec4 emission_38;
					  mediump vec3 tmpvar_39;
					  mediump vec3 tmpvar_40;
					  tmpvar_39 = tmpvar_5;
					  tmpvar_40 = tmpvar_37;
					  mediump vec4 tmpvar_41;
					  tmpvar_41.xyz = tmpvar_39;
					  tmpvar_41.w = 1.0;
					  mediump vec4 tmpvar_42;
					  tmpvar_42.xyz = vec3(0.0, 0.0, 0.0);
					  tmpvar_42.w = 0.0;
					  mediump vec4 tmpvar_43;
					  tmpvar_43.w = 1.0;
					  tmpvar_43.xyz = ((tmpvar_40 * 0.5) + 0.5);
					  lowp vec4 tmpvar_44;
					  tmpvar_44.w = 1.0;
					  tmpvar_44.xyz = vec3(0.0, 0.0, 0.0);
					  emission_38 = tmpvar_44;
					  emission_38.xyz = (emission_38.xyz + (tmpvar_5 * xlv_TEXCOORD6));
					  outEmission_1.w = emission_38.w;
					  outEmission_1.xyz = exp2(-(emission_38.xyz));
					  gl_FragData[0] = tmpvar_41;
					  gl_FragData[1] = tmpvar_42;
					  gl_FragData[2] = tmpvar_43;
					  gl_FragData[3] = outEmission_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying mediump vec3 xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_glesNormal * tmpvar_9));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_8.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_8.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_8.z;
					  tmpvar_6.zw = vec2(0.0, 0.0);
					  tmpvar_6.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_18;
					  normal_18 = worldNormal_3;
					  mediump vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = normal_18;
					  mediump vec3 res_20;
					  mediump vec3 x_21;
					  x_21.x = dot (unity_SHAr, tmpvar_19);
					  x_21.y = dot (unity_SHAg, tmpvar_19);
					  x_21.z = dot (unity_SHAb, tmpvar_19);
					  mediump vec3 x1_22;
					  mediump vec4 tmpvar_23;
					  tmpvar_23 = (normal_18.xyzz * normal_18.yzzx);
					  x1_22.x = dot (unity_SHBr, tmpvar_23);
					  x1_22.y = dot (unity_SHBg, tmpvar_23);
					  x1_22.z = dot (unity_SHBb, tmpvar_23);
					  res_20 = (x_21 + (x1_22 + (unity_SHC.xyz * 
					    ((normal_18.x * normal_18.x) - (normal_18.y * normal_18.y))
					  )));
					  mediump vec3 tmpvar_24;
					  tmpvar_24 = max (((1.055 * 
					    pow (max (res_20, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_20 = tmpvar_24;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					  xlv_TEXCOORD4 = tmpvar_17;
					  xlv_TEXCOORD5 = tmpvar_6;
					  xlv_TEXCOORD6 = max (vec3(0.0, 0.0, 0.0), tmpvar_24);
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD6;
					void main ()
					{
					  mediump vec4 outEmission_1;
					  lowp vec3 worldN_2;
					  lowp vec3 tmpvar_3;
					  lowp float tmpvar_4;
					  tmpvar_3 = vec3(0.0, 0.0, 0.0);
					  tmpvar_4 = 0.0;
					  lowp vec3 tmpvar_5;
					  lowp float tmpvar_6;
					  tmpvar_5 = tmpvar_3;
					  tmpvar_6 = tmpvar_4;
					  highp vec4 norm2_7;
					  highp vec4 norm_8;
					  highp vec4 dest_9;
					  highp vec4 tex2_10;
					  highp vec4 tex_11;
					  lowp vec4 tmpvar_12;
					  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_11 = tmpvar_12;
					  lowp vec4 tmpvar_13;
					  tmpvar_13 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_10 = tmpvar_13;
					  xlat_mutable_Opacity = (_Opacity * tex_11.w);
					  bvec3 tmpvar_14;
					  tmpvar_14 = lessThanEqual (tex2_10.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_15;
					  b_15 = ((2.0 * tex_11.xyz) * tex2_10.xyz);
					  highp vec3 c_16;
					  c_16 = (1.0 - ((2.0 * 
					    (1.0 - tex_11.xyz)
					  ) * (1.0 - tex2_10.xyz)));
					  highp float tmpvar_17;
					  if (tmpvar_14.x) {
					    tmpvar_17 = b_15.x;
					  } else {
					    tmpvar_17 = c_16.x;
					  };
					  highp float tmpvar_18;
					  if (tmpvar_14.y) {
					    tmpvar_18 = b_15.y;
					  } else {
					    tmpvar_18 = c_16.y;
					  };
					  highp float tmpvar_19;
					  if (tmpvar_14.z) {
					    tmpvar_19 = b_15.z;
					  } else {
					    tmpvar_19 = c_16.z;
					  };
					  highp vec3 tmpvar_20;
					  tmpvar_20.x = tmpvar_17;
					  tmpvar_20.y = tmpvar_18;
					  tmpvar_20.z = tmpvar_19;
					  dest_9.xyz = mix (tex2_10.xyz, tmpvar_20, vec3(xlat_mutable_Opacity));
					  dest_9.xyz = (dest_9.xyz * _Color.xyz);
					  tmpvar_5 = dest_9.xyz;
					  tmpvar_6 = (tex2_10.w * _Color.w);
					  lowp vec4 tmpvar_21;
					  tmpvar_21 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_8 = tmpvar_21;
					  lowp vec4 tmpvar_22;
					  tmpvar_22 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_7 = tmpvar_22;
					  bvec4 tmpvar_23;
					  tmpvar_23 = lessThanEqual (norm2_7, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_24;
					  b_24 = ((2.0 * norm_8) * norm2_7);
					  highp vec4 c_25;
					  c_25 = (1.0 - ((2.0 * 
					    (1.0 - norm_8)
					  ) * (1.0 - norm2_7)));
					  highp float tmpvar_26;
					  if (tmpvar_23.x) {
					    tmpvar_26 = b_24.x;
					  } else {
					    tmpvar_26 = c_25.x;
					  };
					  highp float tmpvar_27;
					  if (tmpvar_23.y) {
					    tmpvar_27 = b_24.y;
					  } else {
					    tmpvar_27 = c_25.y;
					  };
					  highp float tmpvar_28;
					  if (tmpvar_23.z) {
					    tmpvar_28 = b_24.z;
					  } else {
					    tmpvar_28 = c_25.z;
					  };
					  highp float tmpvar_29;
					  if (tmpvar_23.w) {
					    tmpvar_29 = b_24.w;
					  } else {
					    tmpvar_29 = c_25.w;
					  };
					  highp vec4 tmpvar_30;
					  tmpvar_30.x = tmpvar_26;
					  tmpvar_30.y = tmpvar_27;
					  tmpvar_30.z = tmpvar_28;
					  tmpvar_30.w = tmpvar_29;
					  highp vec4 tmpvar_31;
					  tmpvar_31 = mix (norm2_7, tmpvar_30, vec4(xlat_mutable_Opacity));
					  dest_9 = tmpvar_31;
					  lowp vec3 tmpvar_32;
					  lowp vec4 packednormal_33;
					  packednormal_33 = tmpvar_31;
					  tmpvar_32 = ((packednormal_33.xyz * 2.0) - 1.0);
					  tmpvar_3 = tmpvar_5;
					  tmpvar_4 = tmpvar_6;
					  highp float tmpvar_34;
					  tmpvar_34 = dot (xlv_TEXCOORD2.xyz, tmpvar_32);
					  worldN_2.x = tmpvar_34;
					  highp float tmpvar_35;
					  tmpvar_35 = dot (xlv_TEXCOORD3.xyz, tmpvar_32);
					  worldN_2.y = tmpvar_35;
					  highp float tmpvar_36;
					  tmpvar_36 = dot (xlv_TEXCOORD4.xyz, tmpvar_32);
					  worldN_2.z = tmpvar_36;
					  lowp vec3 tmpvar_37;
					  tmpvar_37 = normalize(worldN_2);
					  worldN_2 = tmpvar_37;
					  mediump vec4 emission_38;
					  mediump vec3 tmpvar_39;
					  mediump vec3 tmpvar_40;
					  tmpvar_39 = tmpvar_5;
					  tmpvar_40 = tmpvar_37;
					  mediump vec4 tmpvar_41;
					  tmpvar_41.xyz = tmpvar_39;
					  tmpvar_41.w = 1.0;
					  mediump vec4 tmpvar_42;
					  tmpvar_42.xyz = vec3(0.0, 0.0, 0.0);
					  tmpvar_42.w = 0.0;
					  mediump vec4 tmpvar_43;
					  tmpvar_43.w = 1.0;
					  tmpvar_43.xyz = ((tmpvar_40 * 0.5) + 0.5);
					  lowp vec4 tmpvar_44;
					  tmpvar_44.w = 1.0;
					  tmpvar_44.xyz = vec3(0.0, 0.0, 0.0);
					  emission_38 = tmpvar_44;
					  emission_38.xyz = (emission_38.xyz + (tmpvar_5 * xlv_TEXCOORD6));
					  outEmission_1.w = emission_38.w;
					  outEmission_1.xyz = exp2(-(emission_38.xyz));
					  gl_FragData[0] = tmpvar_41;
					  gl_FragData[1] = tmpvar_42;
					  gl_FragData[2] = tmpvar_43;
					  gl_FragData[3] = outEmission_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying mediump vec3 xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_glesNormal * tmpvar_9));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_8.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_8.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_8.z;
					  tmpvar_6.zw = vec2(0.0, 0.0);
					  tmpvar_6.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_18;
					  normal_18 = worldNormal_3;
					  mediump vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = normal_18;
					  mediump vec3 res_20;
					  mediump vec3 x_21;
					  x_21.x = dot (unity_SHAr, tmpvar_19);
					  x_21.y = dot (unity_SHAg, tmpvar_19);
					  x_21.z = dot (unity_SHAb, tmpvar_19);
					  mediump vec3 x1_22;
					  mediump vec4 tmpvar_23;
					  tmpvar_23 = (normal_18.xyzz * normal_18.yzzx);
					  x1_22.x = dot (unity_SHBr, tmpvar_23);
					  x1_22.y = dot (unity_SHBg, tmpvar_23);
					  x1_22.z = dot (unity_SHBb, tmpvar_23);
					  res_20 = (x_21 + (x1_22 + (unity_SHC.xyz * 
					    ((normal_18.x * normal_18.x) - (normal_18.y * normal_18.y))
					  )));
					  mediump vec3 tmpvar_24;
					  tmpvar_24 = max (((1.055 * 
					    pow (max (res_20, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_20 = tmpvar_24;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					  xlv_TEXCOORD4 = tmpvar_17;
					  xlv_TEXCOORD5 = tmpvar_6;
					  xlv_TEXCOORD6 = max (vec3(0.0, 0.0, 0.0), tmpvar_24);
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD6;
					void main ()
					{
					  lowp vec3 worldN_1;
					  lowp vec3 tmpvar_2;
					  lowp float tmpvar_3;
					  tmpvar_2 = vec3(0.0, 0.0, 0.0);
					  tmpvar_3 = 0.0;
					  lowp vec3 tmpvar_4;
					  lowp float tmpvar_5;
					  tmpvar_4 = tmpvar_2;
					  tmpvar_5 = tmpvar_3;
					  highp vec4 norm2_6;
					  highp vec4 norm_7;
					  highp vec4 dest_8;
					  highp vec4 tex2_9;
					  highp vec4 tex_10;
					  lowp vec4 tmpvar_11;
					  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_10 = tmpvar_11;
					  lowp vec4 tmpvar_12;
					  tmpvar_12 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_9 = tmpvar_12;
					  xlat_mutable_Opacity = (_Opacity * tex_10.w);
					  bvec3 tmpvar_13;
					  tmpvar_13 = lessThanEqual (tex2_9.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_14;
					  b_14 = ((2.0 * tex_10.xyz) * tex2_9.xyz);
					  highp vec3 c_15;
					  c_15 = (1.0 - ((2.0 * 
					    (1.0 - tex_10.xyz)
					  ) * (1.0 - tex2_9.xyz)));
					  highp float tmpvar_16;
					  if (tmpvar_13.x) {
					    tmpvar_16 = b_14.x;
					  } else {
					    tmpvar_16 = c_15.x;
					  };
					  highp float tmpvar_17;
					  if (tmpvar_13.y) {
					    tmpvar_17 = b_14.y;
					  } else {
					    tmpvar_17 = c_15.y;
					  };
					  highp float tmpvar_18;
					  if (tmpvar_13.z) {
					    tmpvar_18 = b_14.z;
					  } else {
					    tmpvar_18 = c_15.z;
					  };
					  highp vec3 tmpvar_19;
					  tmpvar_19.x = tmpvar_16;
					  tmpvar_19.y = tmpvar_17;
					  tmpvar_19.z = tmpvar_18;
					  dest_8.xyz = mix (tex2_9.xyz, tmpvar_19, vec3(xlat_mutable_Opacity));
					  dest_8.xyz = (dest_8.xyz * _Color.xyz);
					  tmpvar_4 = dest_8.xyz;
					  tmpvar_5 = (tex2_9.w * _Color.w);
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_7 = tmpvar_20;
					  lowp vec4 tmpvar_21;
					  tmpvar_21 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_6 = tmpvar_21;
					  bvec4 tmpvar_22;
					  tmpvar_22 = lessThanEqual (norm2_6, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_23;
					  b_23 = ((2.0 * norm_7) * norm2_6);
					  highp vec4 c_24;
					  c_24 = (1.0 - ((2.0 * 
					    (1.0 - norm_7)
					  ) * (1.0 - norm2_6)));
					  highp float tmpvar_25;
					  if (tmpvar_22.x) {
					    tmpvar_25 = b_23.x;
					  } else {
					    tmpvar_25 = c_24.x;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_22.y) {
					    tmpvar_26 = b_23.y;
					  } else {
					    tmpvar_26 = c_24.y;
					  };
					  highp float tmpvar_27;
					  if (tmpvar_22.z) {
					    tmpvar_27 = b_23.z;
					  } else {
					    tmpvar_27 = c_24.z;
					  };
					  highp float tmpvar_28;
					  if (tmpvar_22.w) {
					    tmpvar_28 = b_23.w;
					  } else {
					    tmpvar_28 = c_24.w;
					  };
					  highp vec4 tmpvar_29;
					  tmpvar_29.x = tmpvar_25;
					  tmpvar_29.y = tmpvar_26;
					  tmpvar_29.z = tmpvar_27;
					  tmpvar_29.w = tmpvar_28;
					  highp vec4 tmpvar_30;
					  tmpvar_30 = mix (norm2_6, tmpvar_29, vec4(xlat_mutable_Opacity));
					  dest_8 = tmpvar_30;
					  lowp vec3 tmpvar_31;
					  lowp vec4 packednormal_32;
					  packednormal_32 = tmpvar_30;
					  tmpvar_31 = ((packednormal_32.xyz * 2.0) - 1.0);
					  tmpvar_2 = tmpvar_4;
					  tmpvar_3 = tmpvar_5;
					  highp float tmpvar_33;
					  tmpvar_33 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
					  worldN_1.x = tmpvar_33;
					  highp float tmpvar_34;
					  tmpvar_34 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
					  worldN_1.y = tmpvar_34;
					  highp float tmpvar_35;
					  tmpvar_35 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
					  worldN_1.z = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  tmpvar_36 = normalize(worldN_1);
					  worldN_1 = tmpvar_36;
					  mediump vec4 emission_37;
					  mediump vec3 tmpvar_38;
					  mediump vec3 tmpvar_39;
					  tmpvar_38 = tmpvar_4;
					  tmpvar_39 = tmpvar_36;
					  mediump vec4 tmpvar_40;
					  tmpvar_40.xyz = tmpvar_38;
					  tmpvar_40.w = 1.0;
					  mediump vec4 tmpvar_41;
					  tmpvar_41.xyz = vec3(0.0, 0.0, 0.0);
					  tmpvar_41.w = 0.0;
					  mediump vec4 tmpvar_42;
					  tmpvar_42.w = 1.0;
					  tmpvar_42.xyz = ((tmpvar_39 * 0.5) + 0.5);
					  lowp vec4 tmpvar_43;
					  tmpvar_43.w = 1.0;
					  tmpvar_43.xyz = vec3(0.0, 0.0, 0.0);
					  emission_37 = tmpvar_43;
					  emission_37.xyz = (emission_37.xyz + (tmpvar_4 * xlv_TEXCOORD6));
					  gl_FragData[0] = tmpvar_40;
					  gl_FragData[1] = tmpvar_41;
					  gl_FragData[2] = tmpvar_42;
					  gl_FragData[3] = emission_37;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying mediump vec3 xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_glesNormal * tmpvar_9));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_8.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_8.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_8.z;
					  tmpvar_6.zw = vec2(0.0, 0.0);
					  tmpvar_6.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_18;
					  normal_18 = worldNormal_3;
					  mediump vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = normal_18;
					  mediump vec3 res_20;
					  mediump vec3 x_21;
					  x_21.x = dot (unity_SHAr, tmpvar_19);
					  x_21.y = dot (unity_SHAg, tmpvar_19);
					  x_21.z = dot (unity_SHAb, tmpvar_19);
					  mediump vec3 x1_22;
					  mediump vec4 tmpvar_23;
					  tmpvar_23 = (normal_18.xyzz * normal_18.yzzx);
					  x1_22.x = dot (unity_SHBr, tmpvar_23);
					  x1_22.y = dot (unity_SHBg, tmpvar_23);
					  x1_22.z = dot (unity_SHBb, tmpvar_23);
					  res_20 = (x_21 + (x1_22 + (unity_SHC.xyz * 
					    ((normal_18.x * normal_18.x) - (normal_18.y * normal_18.y))
					  )));
					  mediump vec3 tmpvar_24;
					  tmpvar_24 = max (((1.055 * 
					    pow (max (res_20, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_20 = tmpvar_24;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					  xlv_TEXCOORD4 = tmpvar_17;
					  xlv_TEXCOORD5 = tmpvar_6;
					  xlv_TEXCOORD6 = max (vec3(0.0, 0.0, 0.0), tmpvar_24);
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD6;
					void main ()
					{
					  lowp vec3 worldN_1;
					  lowp vec3 tmpvar_2;
					  lowp float tmpvar_3;
					  tmpvar_2 = vec3(0.0, 0.0, 0.0);
					  tmpvar_3 = 0.0;
					  lowp vec3 tmpvar_4;
					  lowp float tmpvar_5;
					  tmpvar_4 = tmpvar_2;
					  tmpvar_5 = tmpvar_3;
					  highp vec4 norm2_6;
					  highp vec4 norm_7;
					  highp vec4 dest_8;
					  highp vec4 tex2_9;
					  highp vec4 tex_10;
					  lowp vec4 tmpvar_11;
					  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_10 = tmpvar_11;
					  lowp vec4 tmpvar_12;
					  tmpvar_12 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_9 = tmpvar_12;
					  xlat_mutable_Opacity = (_Opacity * tex_10.w);
					  bvec3 tmpvar_13;
					  tmpvar_13 = lessThanEqual (tex2_9.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_14;
					  b_14 = ((2.0 * tex_10.xyz) * tex2_9.xyz);
					  highp vec3 c_15;
					  c_15 = (1.0 - ((2.0 * 
					    (1.0 - tex_10.xyz)
					  ) * (1.0 - tex2_9.xyz)));
					  highp float tmpvar_16;
					  if (tmpvar_13.x) {
					    tmpvar_16 = b_14.x;
					  } else {
					    tmpvar_16 = c_15.x;
					  };
					  highp float tmpvar_17;
					  if (tmpvar_13.y) {
					    tmpvar_17 = b_14.y;
					  } else {
					    tmpvar_17 = c_15.y;
					  };
					  highp float tmpvar_18;
					  if (tmpvar_13.z) {
					    tmpvar_18 = b_14.z;
					  } else {
					    tmpvar_18 = c_15.z;
					  };
					  highp vec3 tmpvar_19;
					  tmpvar_19.x = tmpvar_16;
					  tmpvar_19.y = tmpvar_17;
					  tmpvar_19.z = tmpvar_18;
					  dest_8.xyz = mix (tex2_9.xyz, tmpvar_19, vec3(xlat_mutable_Opacity));
					  dest_8.xyz = (dest_8.xyz * _Color.xyz);
					  tmpvar_4 = dest_8.xyz;
					  tmpvar_5 = (tex2_9.w * _Color.w);
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_7 = tmpvar_20;
					  lowp vec4 tmpvar_21;
					  tmpvar_21 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_6 = tmpvar_21;
					  bvec4 tmpvar_22;
					  tmpvar_22 = lessThanEqual (norm2_6, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_23;
					  b_23 = ((2.0 * norm_7) * norm2_6);
					  highp vec4 c_24;
					  c_24 = (1.0 - ((2.0 * 
					    (1.0 - norm_7)
					  ) * (1.0 - norm2_6)));
					  highp float tmpvar_25;
					  if (tmpvar_22.x) {
					    tmpvar_25 = b_23.x;
					  } else {
					    tmpvar_25 = c_24.x;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_22.y) {
					    tmpvar_26 = b_23.y;
					  } else {
					    tmpvar_26 = c_24.y;
					  };
					  highp float tmpvar_27;
					  if (tmpvar_22.z) {
					    tmpvar_27 = b_23.z;
					  } else {
					    tmpvar_27 = c_24.z;
					  };
					  highp float tmpvar_28;
					  if (tmpvar_22.w) {
					    tmpvar_28 = b_23.w;
					  } else {
					    tmpvar_28 = c_24.w;
					  };
					  highp vec4 tmpvar_29;
					  tmpvar_29.x = tmpvar_25;
					  tmpvar_29.y = tmpvar_26;
					  tmpvar_29.z = tmpvar_27;
					  tmpvar_29.w = tmpvar_28;
					  highp vec4 tmpvar_30;
					  tmpvar_30 = mix (norm2_6, tmpvar_29, vec4(xlat_mutable_Opacity));
					  dest_8 = tmpvar_30;
					  lowp vec3 tmpvar_31;
					  lowp vec4 packednormal_32;
					  packednormal_32 = tmpvar_30;
					  tmpvar_31 = ((packednormal_32.xyz * 2.0) - 1.0);
					  tmpvar_2 = tmpvar_4;
					  tmpvar_3 = tmpvar_5;
					  highp float tmpvar_33;
					  tmpvar_33 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
					  worldN_1.x = tmpvar_33;
					  highp float tmpvar_34;
					  tmpvar_34 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
					  worldN_1.y = tmpvar_34;
					  highp float tmpvar_35;
					  tmpvar_35 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
					  worldN_1.z = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  tmpvar_36 = normalize(worldN_1);
					  worldN_1 = tmpvar_36;
					  mediump vec4 emission_37;
					  mediump vec3 tmpvar_38;
					  mediump vec3 tmpvar_39;
					  tmpvar_38 = tmpvar_4;
					  tmpvar_39 = tmpvar_36;
					  mediump vec4 tmpvar_40;
					  tmpvar_40.xyz = tmpvar_38;
					  tmpvar_40.w = 1.0;
					  mediump vec4 tmpvar_41;
					  tmpvar_41.xyz = vec3(0.0, 0.0, 0.0);
					  tmpvar_41.w = 0.0;
					  mediump vec4 tmpvar_42;
					  tmpvar_42.w = 1.0;
					  tmpvar_42.xyz = ((tmpvar_39 * 0.5) + 0.5);
					  lowp vec4 tmpvar_43;
					  tmpvar_43.w = 1.0;
					  tmpvar_43.xyz = vec3(0.0, 0.0, 0.0);
					  emission_37 = tmpvar_43;
					  emission_37.xyz = (emission_37.xyz + (tmpvar_4 * xlv_TEXCOORD6));
					  gl_FragData[0] = tmpvar_40;
					  gl_FragData[1] = tmpvar_41;
					  gl_FragData[2] = tmpvar_42;
					  gl_FragData[3] = emission_37;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					uniform mediump vec4 unity_SHAr;
					uniform mediump vec4 unity_SHAg;
					uniform mediump vec4 unity_SHAb;
					uniform mediump vec4 unity_SHBr;
					uniform mediump vec4 unity_SHBg;
					uniform mediump vec4 unity_SHBb;
					uniform mediump vec4 unity_SHC;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _BumpMap_ST;
					uniform highp vec4 _MainTex2_ST;
					uniform highp vec4 _BumpMap2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying highp vec4 xlv_TEXCOORD5;
					varying mediump vec3 xlv_TEXCOORD6;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 tmpvar_5;
					  highp vec4 tmpvar_6;
					  highp vec4 tmpvar_7;
					  tmpvar_7.w = 1.0;
					  tmpvar_7.xyz = _glesVertex.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
					  tmpvar_5.xy = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  tmpvar_5.zw = ((_glesMultiTexCoord0.xy * _BumpMap2_ST.xy) + _BumpMap2_ST.zw);
					  highp vec3 tmpvar_8;
					  tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_9;
					  tmpvar_9[0] = unity_WorldToObject[0].xyz;
					  tmpvar_9[1] = unity_WorldToObject[1].xyz;
					  tmpvar_9[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_10;
					  tmpvar_10 = normalize((_glesNormal * tmpvar_9));
					  worldNormal_3 = tmpvar_10;
					  highp mat3 tmpvar_11;
					  tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_12;
					  tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_12;
					  highp float tmpvar_13;
					  tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_13;
					  lowp vec3 tmpvar_14;
					  tmpvar_14 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_15;
					  tmpvar_15.x = worldTangent_2.x;
					  tmpvar_15.y = tmpvar_14.x;
					  tmpvar_15.z = worldNormal_3.x;
					  tmpvar_15.w = tmpvar_8.x;
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.y;
					  tmpvar_16.y = tmpvar_14.y;
					  tmpvar_16.z = worldNormal_3.y;
					  tmpvar_16.w = tmpvar_8.y;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.z;
					  tmpvar_17.y = tmpvar_14.z;
					  tmpvar_17.z = worldNormal_3.z;
					  tmpvar_17.w = tmpvar_8.z;
					  tmpvar_6.zw = vec2(0.0, 0.0);
					  tmpvar_6.xy = vec2(0.0, 0.0);
					  mediump vec3 normal_18;
					  normal_18 = worldNormal_3;
					  mediump vec4 tmpvar_19;
					  tmpvar_19.w = 1.0;
					  tmpvar_19.xyz = normal_18;
					  mediump vec3 res_20;
					  mediump vec3 x_21;
					  x_21.x = dot (unity_SHAr, tmpvar_19);
					  x_21.y = dot (unity_SHAg, tmpvar_19);
					  x_21.z = dot (unity_SHAb, tmpvar_19);
					  mediump vec3 x1_22;
					  mediump vec4 tmpvar_23;
					  tmpvar_23 = (normal_18.xyzz * normal_18.yzzx);
					  x1_22.x = dot (unity_SHBr, tmpvar_23);
					  x1_22.y = dot (unity_SHBg, tmpvar_23);
					  x1_22.z = dot (unity_SHBb, tmpvar_23);
					  res_20 = (x_21 + (x1_22 + (unity_SHC.xyz * 
					    ((normal_18.x * normal_18.x) - (normal_18.y * normal_18.y))
					  )));
					  mediump vec3 tmpvar_24;
					  tmpvar_24 = max (((1.055 * 
					    pow (max (res_20, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
					  ) - 0.055), vec3(0.0, 0.0, 0.0));
					  res_20 = tmpvar_24;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_5;
					  xlv_TEXCOORD2 = tmpvar_15;
					  xlv_TEXCOORD3 = tmpvar_16;
					  xlv_TEXCOORD4 = tmpvar_17;
					  xlv_TEXCOORD5 = tmpvar_6;
					  xlv_TEXCOORD6 = max (vec3(0.0, 0.0, 0.0), tmpvar_24);
					}
					
					
					#endif
					#ifdef FRAGMENT
					#extension GL_EXT_draw_buffers : enable
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					varying highp vec4 xlv_TEXCOORD4;
					varying mediump vec3 xlv_TEXCOORD6;
					void main ()
					{
					  lowp vec3 worldN_1;
					  lowp vec3 tmpvar_2;
					  lowp float tmpvar_3;
					  tmpvar_2 = vec3(0.0, 0.0, 0.0);
					  tmpvar_3 = 0.0;
					  lowp vec3 tmpvar_4;
					  lowp float tmpvar_5;
					  tmpvar_4 = tmpvar_2;
					  tmpvar_5 = tmpvar_3;
					  highp vec4 norm2_6;
					  highp vec4 norm_7;
					  highp vec4 dest_8;
					  highp vec4 tex2_9;
					  highp vec4 tex_10;
					  lowp vec4 tmpvar_11;
					  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_10 = tmpvar_11;
					  lowp vec4 tmpvar_12;
					  tmpvar_12 = texture2D (_MainTex2, xlv_TEXCOORD1.xy);
					  tex2_9 = tmpvar_12;
					  xlat_mutable_Opacity = (_Opacity * tex_10.w);
					  bvec3 tmpvar_13;
					  tmpvar_13 = lessThanEqual (tex2_9.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_14;
					  b_14 = ((2.0 * tex_10.xyz) * tex2_9.xyz);
					  highp vec3 c_15;
					  c_15 = (1.0 - ((2.0 * 
					    (1.0 - tex_10.xyz)
					  ) * (1.0 - tex2_9.xyz)));
					  highp float tmpvar_16;
					  if (tmpvar_13.x) {
					    tmpvar_16 = b_14.x;
					  } else {
					    tmpvar_16 = c_15.x;
					  };
					  highp float tmpvar_17;
					  if (tmpvar_13.y) {
					    tmpvar_17 = b_14.y;
					  } else {
					    tmpvar_17 = c_15.y;
					  };
					  highp float tmpvar_18;
					  if (tmpvar_13.z) {
					    tmpvar_18 = b_14.z;
					  } else {
					    tmpvar_18 = c_15.z;
					  };
					  highp vec3 tmpvar_19;
					  tmpvar_19.x = tmpvar_16;
					  tmpvar_19.y = tmpvar_17;
					  tmpvar_19.z = tmpvar_18;
					  dest_8.xyz = mix (tex2_9.xyz, tmpvar_19, vec3(xlat_mutable_Opacity));
					  dest_8.xyz = (dest_8.xyz * _Color.xyz);
					  tmpvar_4 = dest_8.xyz;
					  tmpvar_5 = (tex2_9.w * _Color.w);
					  lowp vec4 tmpvar_20;
					  tmpvar_20 = texture2D (_BumpMap, xlv_TEXCOORD0.zw);
					  norm_7 = tmpvar_20;
					  lowp vec4 tmpvar_21;
					  tmpvar_21 = texture2D (_BumpMap2, xlv_TEXCOORD1.zw);
					  norm2_6 = tmpvar_21;
					  bvec4 tmpvar_22;
					  tmpvar_22 = lessThanEqual (norm2_6, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_23;
					  b_23 = ((2.0 * norm_7) * norm2_6);
					  highp vec4 c_24;
					  c_24 = (1.0 - ((2.0 * 
					    (1.0 - norm_7)
					  ) * (1.0 - norm2_6)));
					  highp float tmpvar_25;
					  if (tmpvar_22.x) {
					    tmpvar_25 = b_23.x;
					  } else {
					    tmpvar_25 = c_24.x;
					  };
					  highp float tmpvar_26;
					  if (tmpvar_22.y) {
					    tmpvar_26 = b_23.y;
					  } else {
					    tmpvar_26 = c_24.y;
					  };
					  highp float tmpvar_27;
					  if (tmpvar_22.z) {
					    tmpvar_27 = b_23.z;
					  } else {
					    tmpvar_27 = c_24.z;
					  };
					  highp float tmpvar_28;
					  if (tmpvar_22.w) {
					    tmpvar_28 = b_23.w;
					  } else {
					    tmpvar_28 = c_24.w;
					  };
					  highp vec4 tmpvar_29;
					  tmpvar_29.x = tmpvar_25;
					  tmpvar_29.y = tmpvar_26;
					  tmpvar_29.z = tmpvar_27;
					  tmpvar_29.w = tmpvar_28;
					  highp vec4 tmpvar_30;
					  tmpvar_30 = mix (norm2_6, tmpvar_29, vec4(xlat_mutable_Opacity));
					  dest_8 = tmpvar_30;
					  lowp vec3 tmpvar_31;
					  lowp vec4 packednormal_32;
					  packednormal_32 = tmpvar_30;
					  tmpvar_31 = ((packednormal_32.xyz * 2.0) - 1.0);
					  tmpvar_2 = tmpvar_4;
					  tmpvar_3 = tmpvar_5;
					  highp float tmpvar_33;
					  tmpvar_33 = dot (xlv_TEXCOORD2.xyz, tmpvar_31);
					  worldN_1.x = tmpvar_33;
					  highp float tmpvar_34;
					  tmpvar_34 = dot (xlv_TEXCOORD3.xyz, tmpvar_31);
					  worldN_1.y = tmpvar_34;
					  highp float tmpvar_35;
					  tmpvar_35 = dot (xlv_TEXCOORD4.xyz, tmpvar_31);
					  worldN_1.z = tmpvar_35;
					  lowp vec3 tmpvar_36;
					  tmpvar_36 = normalize(worldN_1);
					  worldN_1 = tmpvar_36;
					  mediump vec4 emission_37;
					  mediump vec3 tmpvar_38;
					  mediump vec3 tmpvar_39;
					  tmpvar_38 = tmpvar_4;
					  tmpvar_39 = tmpvar_36;
					  mediump vec4 tmpvar_40;
					  tmpvar_40.xyz = tmpvar_38;
					  tmpvar_40.w = 1.0;
					  mediump vec4 tmpvar_41;
					  tmpvar_41.xyz = vec3(0.0, 0.0, 0.0);
					  tmpvar_41.w = 0.0;
					  mediump vec4 tmpvar_42;
					  tmpvar_42.w = 1.0;
					  tmpvar_42.xyz = ((tmpvar_39 * 0.5) + 0.5);
					  lowp vec4 tmpvar_43;
					  tmpvar_43.w = 1.0;
					  tmpvar_43.xyz = vec3(0.0, 0.0, 0.0);
					  emission_37 = tmpvar_43;
					  emission_37.xyz = (emission_37.xyz + (tmpvar_4 * xlv_TEXCOORD6));
					  gl_FragData[0] = tmpvar_40;
					  gl_FragData[1] = tmpvar_41;
					  gl_FragData[2] = tmpvar_42;
					  gl_FragData[3] = emission_37;
					}
					
					
					#endif"
				}
			}
			Program "fp" {
				SubProgram "gles hw_tier00 " {
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					"!!GLES"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "LIGHTPROBE_SH" }
					"!!GLES"
				}
				SubProgram "gles hw_tier00 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
					"!!GLES"
				}
			}
		}
		Pass {
			Name "META"
			LOD 400
			Tags { "LIGHTMODE" = "META" "RenderType" = "Opaque" }
			Cull Off
			GpuProgramID 359735
			Program "vp" {
				SubProgram "gles hw_tier00 " {
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					attribute vec4 _glesMultiTexCoord2;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 unity_DynamicLightmapST;
					uniform bvec4 unity_MetaVertexControl;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _MainTex2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 vertex_5;
					  vertex_5 = _glesVertex;
					  if (unity_MetaVertexControl.x) {
					    vertex_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					    highp float tmpvar_6;
					    if ((_glesVertex.z > 0.0)) {
					      tmpvar_6 = 0.0001;
					    } else {
					      tmpvar_6 = 0.0;
					    };
					    vertex_5.z = tmpvar_6;
					  };
					  if (unity_MetaVertexControl.y) {
					    vertex_5.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
					    highp float tmpvar_7;
					    if ((vertex_5.z > 0.0)) {
					      tmpvar_7 = 0.0001;
					    } else {
					      tmpvar_7 = 0.0;
					    };
					    vertex_5.z = tmpvar_7;
					  };
					  highp vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = vertex_5.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  highp vec3 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_WorldToObject[0].xyz;
					  tmpvar_10[1] = unity_WorldToObject[1].xyz;
					  tmpvar_10[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_glesNormal * tmpvar_10));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_9.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_9.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_9.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_8));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					uniform bvec4 unity_MetaFragmentControl;
					uniform highp float unity_OneOverOutputBoost;
					uniform highp float unity_MaxOutputValue;
					uniform highp float unity_UseLinearSpace;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 tmpvar_3;
					  lowp float tmpvar_4;
					  highp vec2 tmpvar_5;
					  highp vec2 tmpvar_6;
					  tmpvar_5.x = 1.0;
					  tmpvar_6.x = 1.0;
					  tmpvar_3 = vec3(0.0, 0.0, 0.0);
					  tmpvar_4 = 0.0;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  tmpvar_7 = tmpvar_3;
					  tmpvar_8 = tmpvar_4;
					  highp vec4 norm2_9;
					  highp vec4 norm_10;
					  highp vec4 dest_11;
					  highp vec4 tex2_12;
					  highp vec4 tex_13;
					  lowp vec4 tmpvar_14;
					  tmpvar_14 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_13 = tmpvar_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (_MainTex2, xlv_TEXCOORD0.zw);
					  tex2_12 = tmpvar_15;
					  xlat_mutable_Opacity = (_Opacity * tex_13.w);
					  bvec3 tmpvar_16;
					  tmpvar_16 = lessThanEqual (tex2_12.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_17;
					  b_17 = ((2.0 * tex_13.xyz) * tex2_12.xyz);
					  highp vec3 c_18;
					  c_18 = (1.0 - ((2.0 * 
					    (1.0 - tex_13.xyz)
					  ) * (1.0 - tex2_12.xyz)));
					  highp float tmpvar_19;
					  if (tmpvar_16.x) {
					    tmpvar_19 = b_17.x;
					  } else {
					    tmpvar_19 = c_18.x;
					  };
					  highp float tmpvar_20;
					  if (tmpvar_16.y) {
					    tmpvar_20 = b_17.y;
					  } else {
					    tmpvar_20 = c_18.y;
					  };
					  highp float tmpvar_21;
					  if (tmpvar_16.z) {
					    tmpvar_21 = b_17.z;
					  } else {
					    tmpvar_21 = c_18.z;
					  };
					  highp vec3 tmpvar_22;
					  tmpvar_22.x = tmpvar_19;
					  tmpvar_22.y = tmpvar_20;
					  tmpvar_22.z = tmpvar_21;
					  dest_11.xyz = mix (tex2_12.xyz, tmpvar_22, vec3(xlat_mutable_Opacity));
					  dest_11.xyz = (dest_11.xyz * _Color.xyz);
					  tmpvar_7 = dest_11.xyz;
					  tmpvar_8 = (tex2_12.w * _Color.w);
					  lowp vec4 tmpvar_23;
					  tmpvar_23 = texture2D (_BumpMap, tmpvar_5);
					  norm_10 = tmpvar_23;
					  lowp vec4 tmpvar_24;
					  tmpvar_24 = texture2D (_BumpMap2, tmpvar_6);
					  norm2_9 = tmpvar_24;
					  bvec4 tmpvar_25;
					  tmpvar_25 = lessThanEqual (norm2_9, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_26;
					  b_26 = ((2.0 * norm_10) * norm2_9);
					  highp vec4 c_27;
					  c_27 = (1.0 - ((2.0 * 
					    (1.0 - norm_10)
					  ) * (1.0 - norm2_9)));
					  highp float tmpvar_28;
					  if (tmpvar_25.x) {
					    tmpvar_28 = b_26.x;
					  } else {
					    tmpvar_28 = c_27.x;
					  };
					  highp float tmpvar_29;
					  if (tmpvar_25.y) {
					    tmpvar_29 = b_26.y;
					  } else {
					    tmpvar_29 = c_27.y;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_25.z) {
					    tmpvar_30 = b_26.z;
					  } else {
					    tmpvar_30 = c_27.z;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_25.w) {
					    tmpvar_31 = b_26.w;
					  } else {
					    tmpvar_31 = c_27.w;
					  };
					  highp vec4 tmpvar_32;
					  tmpvar_32.x = tmpvar_28;
					  tmpvar_32.y = tmpvar_29;
					  tmpvar_32.z = tmpvar_30;
					  tmpvar_32.w = tmpvar_31;
					  dest_11 = mix (norm2_9, tmpvar_32, vec4(xlat_mutable_Opacity));
					  tmpvar_3 = tmpvar_7;
					  tmpvar_4 = tmpvar_8;
					  tmpvar_2 = tmpvar_7;
					  mediump vec4 res_33;
					  res_33 = vec4(0.0, 0.0, 0.0, 0.0);
					  if (unity_MetaFragmentControl.x) {
					    mediump vec4 tmpvar_34;
					    tmpvar_34.w = 1.0;
					    tmpvar_34.xyz = tmpvar_2;
					    res_33.w = tmpvar_34.w;
					    highp vec3 tmpvar_35;
					    tmpvar_35 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
					    res_33.xyz = tmpvar_35;
					  };
					  if (unity_MetaFragmentControl.y) {
					    mediump vec3 emission_36;
					    if (bool(unity_UseLinearSpace)) {
					      emission_36 = vec3(0.0, 0.0, 0.0);
					    } else {
					      emission_36 = vec3(0.0, 0.0, 0.0);
					    };
					    mediump vec4 tmpvar_37;
					    tmpvar_37.w = 1.0;
					    tmpvar_37.xyz = emission_36;
					    res_33 = tmpvar_37;
					  };
					  tmpvar_1 = res_33;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier01 " {
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					attribute vec4 _glesMultiTexCoord2;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 unity_DynamicLightmapST;
					uniform bvec4 unity_MetaVertexControl;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _MainTex2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 vertex_5;
					  vertex_5 = _glesVertex;
					  if (unity_MetaVertexControl.x) {
					    vertex_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					    highp float tmpvar_6;
					    if ((_glesVertex.z > 0.0)) {
					      tmpvar_6 = 0.0001;
					    } else {
					      tmpvar_6 = 0.0;
					    };
					    vertex_5.z = tmpvar_6;
					  };
					  if (unity_MetaVertexControl.y) {
					    vertex_5.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
					    highp float tmpvar_7;
					    if ((vertex_5.z > 0.0)) {
					      tmpvar_7 = 0.0001;
					    } else {
					      tmpvar_7 = 0.0;
					    };
					    vertex_5.z = tmpvar_7;
					  };
					  highp vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = vertex_5.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  highp vec3 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_WorldToObject[0].xyz;
					  tmpvar_10[1] = unity_WorldToObject[1].xyz;
					  tmpvar_10[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_glesNormal * tmpvar_10));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_9.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_9.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_9.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_8));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					uniform bvec4 unity_MetaFragmentControl;
					uniform highp float unity_OneOverOutputBoost;
					uniform highp float unity_MaxOutputValue;
					uniform highp float unity_UseLinearSpace;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 tmpvar_3;
					  lowp float tmpvar_4;
					  highp vec2 tmpvar_5;
					  highp vec2 tmpvar_6;
					  tmpvar_5.x = 1.0;
					  tmpvar_6.x = 1.0;
					  tmpvar_3 = vec3(0.0, 0.0, 0.0);
					  tmpvar_4 = 0.0;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  tmpvar_7 = tmpvar_3;
					  tmpvar_8 = tmpvar_4;
					  highp vec4 norm2_9;
					  highp vec4 norm_10;
					  highp vec4 dest_11;
					  highp vec4 tex2_12;
					  highp vec4 tex_13;
					  lowp vec4 tmpvar_14;
					  tmpvar_14 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_13 = tmpvar_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (_MainTex2, xlv_TEXCOORD0.zw);
					  tex2_12 = tmpvar_15;
					  xlat_mutable_Opacity = (_Opacity * tex_13.w);
					  bvec3 tmpvar_16;
					  tmpvar_16 = lessThanEqual (tex2_12.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_17;
					  b_17 = ((2.0 * tex_13.xyz) * tex2_12.xyz);
					  highp vec3 c_18;
					  c_18 = (1.0 - ((2.0 * 
					    (1.0 - tex_13.xyz)
					  ) * (1.0 - tex2_12.xyz)));
					  highp float tmpvar_19;
					  if (tmpvar_16.x) {
					    tmpvar_19 = b_17.x;
					  } else {
					    tmpvar_19 = c_18.x;
					  };
					  highp float tmpvar_20;
					  if (tmpvar_16.y) {
					    tmpvar_20 = b_17.y;
					  } else {
					    tmpvar_20 = c_18.y;
					  };
					  highp float tmpvar_21;
					  if (tmpvar_16.z) {
					    tmpvar_21 = b_17.z;
					  } else {
					    tmpvar_21 = c_18.z;
					  };
					  highp vec3 tmpvar_22;
					  tmpvar_22.x = tmpvar_19;
					  tmpvar_22.y = tmpvar_20;
					  tmpvar_22.z = tmpvar_21;
					  dest_11.xyz = mix (tex2_12.xyz, tmpvar_22, vec3(xlat_mutable_Opacity));
					  dest_11.xyz = (dest_11.xyz * _Color.xyz);
					  tmpvar_7 = dest_11.xyz;
					  tmpvar_8 = (tex2_12.w * _Color.w);
					  lowp vec4 tmpvar_23;
					  tmpvar_23 = texture2D (_BumpMap, tmpvar_5);
					  norm_10 = tmpvar_23;
					  lowp vec4 tmpvar_24;
					  tmpvar_24 = texture2D (_BumpMap2, tmpvar_6);
					  norm2_9 = tmpvar_24;
					  bvec4 tmpvar_25;
					  tmpvar_25 = lessThanEqual (norm2_9, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_26;
					  b_26 = ((2.0 * norm_10) * norm2_9);
					  highp vec4 c_27;
					  c_27 = (1.0 - ((2.0 * 
					    (1.0 - norm_10)
					  ) * (1.0 - norm2_9)));
					  highp float tmpvar_28;
					  if (tmpvar_25.x) {
					    tmpvar_28 = b_26.x;
					  } else {
					    tmpvar_28 = c_27.x;
					  };
					  highp float tmpvar_29;
					  if (tmpvar_25.y) {
					    tmpvar_29 = b_26.y;
					  } else {
					    tmpvar_29 = c_27.y;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_25.z) {
					    tmpvar_30 = b_26.z;
					  } else {
					    tmpvar_30 = c_27.z;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_25.w) {
					    tmpvar_31 = b_26.w;
					  } else {
					    tmpvar_31 = c_27.w;
					  };
					  highp vec4 tmpvar_32;
					  tmpvar_32.x = tmpvar_28;
					  tmpvar_32.y = tmpvar_29;
					  tmpvar_32.z = tmpvar_30;
					  tmpvar_32.w = tmpvar_31;
					  dest_11 = mix (norm2_9, tmpvar_32, vec4(xlat_mutable_Opacity));
					  tmpvar_3 = tmpvar_7;
					  tmpvar_4 = tmpvar_8;
					  tmpvar_2 = tmpvar_7;
					  mediump vec4 res_33;
					  res_33 = vec4(0.0, 0.0, 0.0, 0.0);
					  if (unity_MetaFragmentControl.x) {
					    mediump vec4 tmpvar_34;
					    tmpvar_34.w = 1.0;
					    tmpvar_34.xyz = tmpvar_2;
					    res_33.w = tmpvar_34.w;
					    highp vec3 tmpvar_35;
					    tmpvar_35 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
					    res_33.xyz = tmpvar_35;
					  };
					  if (unity_MetaFragmentControl.y) {
					    mediump vec3 emission_36;
					    if (bool(unity_UseLinearSpace)) {
					      emission_36 = vec3(0.0, 0.0, 0.0);
					    } else {
					      emission_36 = vec3(0.0, 0.0, 0.0);
					    };
					    mediump vec4 tmpvar_37;
					    tmpvar_37.w = 1.0;
					    tmpvar_37.xyz = emission_36;
					    res_33 = tmpvar_37;
					  };
					  tmpvar_1 = res_33;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
				}
				SubProgram "gles hw_tier02 " {
					"!!GLES
					#version 100
					
					#ifdef VERTEX
					attribute vec4 _glesTANGENT;
					attribute vec4 _glesVertex;
					attribute vec3 _glesNormal;
					attribute vec4 _glesMultiTexCoord0;
					attribute vec4 _glesMultiTexCoord1;
					attribute vec4 _glesMultiTexCoord2;
					uniform highp mat4 unity_ObjectToWorld;
					uniform highp mat4 unity_WorldToObject;
					uniform highp vec4 unity_WorldTransformParams;
					uniform highp mat4 unity_MatrixVP;
					uniform highp vec4 unity_LightmapST;
					uniform highp vec4 unity_DynamicLightmapST;
					uniform bvec4 unity_MetaVertexControl;
					uniform highp vec4 _MainTex_ST;
					uniform highp vec4 _MainTex2_ST;
					varying highp vec4 xlv_TEXCOORD0;
					varying highp vec4 xlv_TEXCOORD1;
					varying highp vec4 xlv_TEXCOORD2;
					varying highp vec4 xlv_TEXCOORD3;
					void main ()
					{
					  lowp float tangentSign_1;
					  lowp vec3 worldTangent_2;
					  lowp vec3 worldNormal_3;
					  highp vec4 tmpvar_4;
					  highp vec4 vertex_5;
					  vertex_5 = _glesVertex;
					  if (unity_MetaVertexControl.x) {
					    vertex_5.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
					    highp float tmpvar_6;
					    if ((_glesVertex.z > 0.0)) {
					      tmpvar_6 = 0.0001;
					    } else {
					      tmpvar_6 = 0.0;
					    };
					    vertex_5.z = tmpvar_6;
					  };
					  if (unity_MetaVertexControl.y) {
					    vertex_5.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
					    highp float tmpvar_7;
					    if ((vertex_5.z > 0.0)) {
					      tmpvar_7 = 0.0001;
					    } else {
					      tmpvar_7 = 0.0;
					    };
					    vertex_5.z = tmpvar_7;
					  };
					  highp vec4 tmpvar_8;
					  tmpvar_8.w = 1.0;
					  tmpvar_8.xyz = vertex_5.xyz;
					  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
					  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _MainTex2_ST.xy) + _MainTex2_ST.zw);
					  highp vec3 tmpvar_9;
					  tmpvar_9 = (unity_ObjectToWorld * _glesVertex).xyz;
					  highp mat3 tmpvar_10;
					  tmpvar_10[0] = unity_WorldToObject[0].xyz;
					  tmpvar_10[1] = unity_WorldToObject[1].xyz;
					  tmpvar_10[2] = unity_WorldToObject[2].xyz;
					  highp vec3 tmpvar_11;
					  tmpvar_11 = normalize((_glesNormal * tmpvar_10));
					  worldNormal_3 = tmpvar_11;
					  highp mat3 tmpvar_12;
					  tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
					  tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
					  tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
					  highp vec3 tmpvar_13;
					  tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
					  worldTangent_2 = tmpvar_13;
					  highp float tmpvar_14;
					  tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
					  tangentSign_1 = tmpvar_14;
					  lowp vec3 tmpvar_15;
					  tmpvar_15 = (((worldNormal_3.yzx * worldTangent_2.zxy) - (worldNormal_3.zxy * worldTangent_2.yzx)) * tangentSign_1);
					  highp vec4 tmpvar_16;
					  tmpvar_16.x = worldTangent_2.x;
					  tmpvar_16.y = tmpvar_15.x;
					  tmpvar_16.z = worldNormal_3.x;
					  tmpvar_16.w = tmpvar_9.x;
					  highp vec4 tmpvar_17;
					  tmpvar_17.x = worldTangent_2.y;
					  tmpvar_17.y = tmpvar_15.y;
					  tmpvar_17.z = worldNormal_3.y;
					  tmpvar_17.w = tmpvar_9.y;
					  highp vec4 tmpvar_18;
					  tmpvar_18.x = worldTangent_2.z;
					  tmpvar_18.y = tmpvar_15.z;
					  tmpvar_18.z = worldNormal_3.z;
					  tmpvar_18.w = tmpvar_9.z;
					  gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_8));
					  xlv_TEXCOORD0 = tmpvar_4;
					  xlv_TEXCOORD1 = tmpvar_16;
					  xlv_TEXCOORD2 = tmpvar_17;
					  xlv_TEXCOORD3 = tmpvar_18;
					}
					
					
					#endif
					#ifdef FRAGMENT
					uniform sampler2D _MainTex;
					uniform sampler2D _BumpMap;
					uniform sampler2D _MainTex2;
					uniform sampler2D _BumpMap2;
					uniform lowp vec4 _Color;
					uniform highp float _Opacity;
					uniform bvec4 unity_MetaFragmentControl;
					uniform highp float unity_OneOverOutputBoost;
					uniform highp float unity_MaxOutputValue;
					uniform highp float unity_UseLinearSpace;
					highp float xlat_mutable_Opacity;
					varying highp vec4 xlv_TEXCOORD0;
					void main ()
					{
					  lowp vec4 tmpvar_1;
					  mediump vec3 tmpvar_2;
					  lowp vec3 tmpvar_3;
					  lowp float tmpvar_4;
					  highp vec2 tmpvar_5;
					  highp vec2 tmpvar_6;
					  tmpvar_5.x = 1.0;
					  tmpvar_6.x = 1.0;
					  tmpvar_3 = vec3(0.0, 0.0, 0.0);
					  tmpvar_4 = 0.0;
					  lowp vec3 tmpvar_7;
					  lowp float tmpvar_8;
					  tmpvar_7 = tmpvar_3;
					  tmpvar_8 = tmpvar_4;
					  highp vec4 norm2_9;
					  highp vec4 norm_10;
					  highp vec4 dest_11;
					  highp vec4 tex2_12;
					  highp vec4 tex_13;
					  lowp vec4 tmpvar_14;
					  tmpvar_14 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
					  tex_13 = tmpvar_14;
					  lowp vec4 tmpvar_15;
					  tmpvar_15 = texture2D (_MainTex2, xlv_TEXCOORD0.zw);
					  tex2_12 = tmpvar_15;
					  xlat_mutable_Opacity = (_Opacity * tex_13.w);
					  bvec3 tmpvar_16;
					  tmpvar_16 = lessThanEqual (tex2_12.xyz, vec3(0.5, 0.5, 0.5));
					  highp vec3 b_17;
					  b_17 = ((2.0 * tex_13.xyz) * tex2_12.xyz);
					  highp vec3 c_18;
					  c_18 = (1.0 - ((2.0 * 
					    (1.0 - tex_13.xyz)
					  ) * (1.0 - tex2_12.xyz)));
					  highp float tmpvar_19;
					  if (tmpvar_16.x) {
					    tmpvar_19 = b_17.x;
					  } else {
					    tmpvar_19 = c_18.x;
					  };
					  highp float tmpvar_20;
					  if (tmpvar_16.y) {
					    tmpvar_20 = b_17.y;
					  } else {
					    tmpvar_20 = c_18.y;
					  };
					  highp float tmpvar_21;
					  if (tmpvar_16.z) {
					    tmpvar_21 = b_17.z;
					  } else {
					    tmpvar_21 = c_18.z;
					  };
					  highp vec3 tmpvar_22;
					  tmpvar_22.x = tmpvar_19;
					  tmpvar_22.y = tmpvar_20;
					  tmpvar_22.z = tmpvar_21;
					  dest_11.xyz = mix (tex2_12.xyz, tmpvar_22, vec3(xlat_mutable_Opacity));
					  dest_11.xyz = (dest_11.xyz * _Color.xyz);
					  tmpvar_7 = dest_11.xyz;
					  tmpvar_8 = (tex2_12.w * _Color.w);
					  lowp vec4 tmpvar_23;
					  tmpvar_23 = texture2D (_BumpMap, tmpvar_5);
					  norm_10 = tmpvar_23;
					  lowp vec4 tmpvar_24;
					  tmpvar_24 = texture2D (_BumpMap2, tmpvar_6);
					  norm2_9 = tmpvar_24;
					  bvec4 tmpvar_25;
					  tmpvar_25 = lessThanEqual (norm2_9, vec4(0.5, 0.5, 0.5, 0.5));
					  highp vec4 b_26;
					  b_26 = ((2.0 * norm_10) * norm2_9);
					  highp vec4 c_27;
					  c_27 = (1.0 - ((2.0 * 
					    (1.0 - norm_10)
					  ) * (1.0 - norm2_9)));
					  highp float tmpvar_28;
					  if (tmpvar_25.x) {
					    tmpvar_28 = b_26.x;
					  } else {
					    tmpvar_28 = c_27.x;
					  };
					  highp float tmpvar_29;
					  if (tmpvar_25.y) {
					    tmpvar_29 = b_26.y;
					  } else {
					    tmpvar_29 = c_27.y;
					  };
					  highp float tmpvar_30;
					  if (tmpvar_25.z) {
					    tmpvar_30 = b_26.z;
					  } else {
					    tmpvar_30 = c_27.z;
					  };
					  highp float tmpvar_31;
					  if (tmpvar_25.w) {
					    tmpvar_31 = b_26.w;
					  } else {
					    tmpvar_31 = c_27.w;
					  };
					  highp vec4 tmpvar_32;
					  tmpvar_32.x = tmpvar_28;
					  tmpvar_32.y = tmpvar_29;
					  tmpvar_32.z = tmpvar_30;
					  tmpvar_32.w = tmpvar_31;
					  dest_11 = mix (norm2_9, tmpvar_32, vec4(xlat_mutable_Opacity));
					  tmpvar_3 = tmpvar_7;
					  tmpvar_4 = tmpvar_8;
					  tmpvar_2 = tmpvar_7;
					  mediump vec4 res_33;
					  res_33 = vec4(0.0, 0.0, 0.0, 0.0);
					  if (unity_MetaFragmentControl.x) {
					    mediump vec4 tmpvar_34;
					    tmpvar_34.w = 1.0;
					    tmpvar_34.xyz = tmpvar_2;
					    res_33.w = tmpvar_34.w;
					    highp vec3 tmpvar_35;
					    tmpvar_35 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
					    res_33.xyz = tmpvar_35;
					  };
					  if (unity_MetaFragmentControl.y) {
					    mediump vec3 emission_36;
					    if (bool(unity_UseLinearSpace)) {
					      emission_36 = vec3(0.0, 0.0, 0.0);
					    } else {
					      emission_36 = vec3(0.0, 0.0, 0.0);
					    };
					    mediump vec4 tmpvar_37;
					    tmpvar_37.w = 1.0;
					    tmpvar_37.xyz = emission_36;
					    res_33 = tmpvar_37;
					  };
					  tmpvar_1 = res_33;
					  gl_FragData[0] = tmpvar_1;
					}
					
					
					#endif"
				}
			}
			Program "fp" {
				SubProgram "gles hw_tier00 " {
					"!!GLES"
				}
				SubProgram "gles hw_tier01 " {
					"!!GLES"
				}
				SubProgram "gles hw_tier02 " {
					"!!GLES"
				}
			}
		}
	}
	SubShader {
		LOD 400
		Tags { "RenderType" = "Opaque" }
		Pass {
			Name "FORWARD"
			LOD 400
			Tags { "LIGHTMODE" = "FORWARDBASE" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
			GpuProgramID 401330
		}
		Pass {
			Name "FORWARD"
			LOD 400
			Tags { "LIGHTMODE" = "FORWARDADD" "RenderType" = "Opaque" }
			Blend One One, One One
			ZWrite Off
			GpuProgramID 514913
		}
		Pass {
			Name "PREPASS"
			LOD 400
			Tags { "LIGHTMODE" = "PREPASSBASE" "RenderType" = "Opaque" }
			GpuProgramID 533328
		}
		Pass {
			Name "PREPASS"
			LOD 400
			Tags { "LIGHTMODE" = "PREPASSFINAL" "RenderType" = "Opaque" }
			ZWrite Off
			GpuProgramID 601627
		}
		Pass {
			Name "DEFERRED"
			LOD 400
			Tags { "LIGHTMODE" = "DEFERRED" "RenderType" = "Opaque" }
			GpuProgramID 689570
		}
		Pass {
			Name "META"
			LOD 400
			Tags { "LIGHTMODE" = "META" "RenderType" = "Opaque" }
			Cull Off
			GpuProgramID 781326
		}
	}
	Fallback "Bumped Diffuse"
}